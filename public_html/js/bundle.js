!function () {
    "use strict";
    let e = {
        QQAd: "QQAd",
        TouTAd: "TouTAd",
        OPAd: "OPPOAd",
        VivoAd: "VivoAd",
        WXAd: "WXAd",
        Web: "Web",
        P4399Ad: "P4399Ad",
        XiaoMiAd: "XiaoMiAd",
        MeiZu: "MeiZu",
        HuaWei: "HuaWei",
        HuaWei2: "HuaWei2",
        IOS: "IOS"
    };
    var t = {
        Platform: e.WXAd,
        AppID: "wx47efc4c27f655ac6",
        QQAppID: "1111098346",
        Version: "1.2.2",
        hotVersion: "hotVersion.json",
        CDN: "",//
        SourceOpenid: "",
        Openid: "",
        Session_key: "5AXC4AAJtQMpnFEX",
        Channel: "",
        HttpServer: "",
        GameName: "RaftSurvival",
        Gid: ""
    };
    let i = {
        LoadingUI: {
            id: 0,
            class: "view/LoadUI.ts"
        },
        MainUI: {
            id: 1,
            class: "view/MainUI.ts",
            showPrompt: !0
        },
        ResultUI: {
            id: 2,
            class: "view/ResultUI.ts"
        },
        BuildUI: {
            id: 3,
            class: "view/BuildUI.ts",
            showPrompt: !0
        },
        SignUI: {
            id: 4,
            class: "view/SignUI.ts",
            showPrompt: !0
        },
        GoodsUI: {
            id: 5,
            class: "view/GoodsUI.ts"
        },
        GameBoxUI: {
            id: 6,
            class: "pkSdk/GameBoxUI.ts"
        },
        MoregameUI: {
            id: 7,
            class: "view/MoregameUI.ts"
        },
        VedioShareUI: {
            id: 8,
            class: "view/VedioShareUI.ts"
        },
        RandomChestUI: {
            id: 9,
            class: "view/RandomChestUI.ts"
        },
        QuestUI: {
            id: 10,
            class: "view/QuestUI.ts"
        },
        UnlockSkinUI: {
            id: 11,
            class: "view/UnlockSkinUI.ts"
        },
        RewardUI: {
            id: 11,
            class: "view/RewardUI.ts"
        },
        NativeInsertUI: {
            id: 12,
            class: "view/NativeInsertUI.ts"
        },
        NativeVivoInsertUI: {
            id: 13,
            class: "view/NativeVivoInsertUI.ts"
        },
        BuildOverUI: {
            id: 14,
            class: "view/BuildOverUI.ts",
            showPrompt: !0
        },
        AchieveUI: {
            id: 15,
            class: "view/AchieveUI.ts",
            showPrompt: !0
        },
        SeaBoxUI: {
            id: 16,
            class: "view/SeaBoxUI.ts",
            showPrompt: !0
        },
        ShopUI: {
            id: 17,
            class: "view/ShopUI.ts",
            showPrompt: !0
        },
        SurvivorUI: {
            id: 18,
            class: "view/SurvivorUI.ts",
            showPrompt: !0
        },
        SurvivorInfoUI: {
            id: 19,
            class: "view/SurvivorInfoUI.ts",
            showPrompt: !0
        },
        DoubleResUI: {
            id: 20,
            class: "view/DoubleResUI.ts",
            showPrompt: !0
        },
        OfflineUI: {
            id: 21,
            class: "view/OfflineUI.ts"
        },
        MapUI: {
            id: 22,
            class: "view/MapUI.ts",
            showPrompt: !0
        },
        LotteryUI: {
            id: 23,
            class: "view/LotteryUI.ts",
            showPrompt: !0
        },
        ChapterUI: {
            id: 24,
            class: "view/ChapterUI.ts",
            showPrompt: !0
        },
        MapFindUI: {
            id: 25,
            class: "view/MapFindUI.ts",
            showPrompt: !0
        },
        BottleUI: {
            id: 26,
            class: "view/BottleUI.ts",
            showPrompt: !0
        },
        InviteUI: {
            id: 27,
            class: "view/InviteUI.ts",
            showPrompt: !0
        },
        RandomResultUI: {
            id: 28,
            class: "view/RandomResultUI.ts",
            showPrompt: !0
        },
        MainResultUI: {
            id: 29,
            class: "view/MainResultUI.ts",
            showPrompt: !0
        },
        MoreResUI: {
            id: 30,
            class: "view/MoreResUI.ts",
            showPrompt: !0
        },
        GetRedMoneyUI: {
            id: 30,
            class: "view/GetRedMoneyUI.ts"
        },
        RedMoneyWeekUI: {
            id: 31,
            class: "view/RedMoneyWeekUI.ts"
        },
        RedMoneyAnyOneUI: {
            id: 32,
            class: "view/RedMoneyAnyOneUI.ts"
        },
        PurseUI: {
            id: 33,
            class: "view/PurseUI.ts"
        },
        PassRedMoneyUI: {
            id: 34,
            class: "view/PassRedMoneyUI.ts"
        },
        MoneyRewardUI: {
            id: 35,
            class: "view/MoneyRewardUI.ts"
        },
        TipsUI: {
            id: 36,
            class: "view/TipsUI.ts"
        },
        StoryUI: {
            id: 37,
            class: "view/StoryUI.ts"
        },
        NewHeroUI: {
            id: 38,
            class: "view/NewHeroUI.ts"
        },
        FollowTTUI: {
            id: 39,
            class: "view/FollowTTUI.ts"
        },
        EasterEggUI: {
            id: 40,
            class: "view/EasterEggUI.ts"
        },
        FollowQQUI: {
            id: 41,
            class: "view/FollowQQUI.ts"
        },
        HeroMBGUI: {
            id: 42,
            class: "view/HeroMBGUI.ts"
        },
        RankUI: {
            id: 43,
            class: "view/RankUI.ts"
        },
        NewYearUI: {
            id: 43,
            class: "view/NewYearUI.ts"
        },
        ChristmasWishUI: {
            id: 44,
            class: "view/ChristmasWishUI.ts"
        },
        ChristmasGiftUI: {
            id: 45,
            class: "view/ChristmasGiftUI.ts"
        },
        PrivacyUI: {
            id: 46,
            class: "view/PrivacyUI.ts"
        }
    };
    var o, n = Laya.View, a = Laya.BaseView, s = Laya.ClassUtils.regClass;
    !function (e) {
        !function (e) {
            class t extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(t.uiView);
                }
            }
            t.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "pkSdk/GameBoxUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        y: 0,
                        x: 0,
                        var: "bg",
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,19,21,22,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 667,
                        x: 375,
                        width: 468,
                        var: "window",
                        height: 709,
                        centerY: 0,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 4,
                    child: [{
                        type: "Image",
                        props: {
                            top: 0,
                            skin: "game/normal_frameBGad.png",
                            sizeGrid: "100,49,29,32",
                            right: 0,
                            name: "uibg",
                            left: 0,
                            bottom: 0
                        },
                        compId: 5
                    }, {
                        type: "Text",
                        props: {
                            y: 4,
                            x: 95,
                            width: 277,
                            valign: "middle",
                            text: "",
                            name: "title",
                            height: 69,
                            fontSize: 46,
                            font: "Microsoft YaHei",
                            color: "#ffffff",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 43
                    }, {
                        type: "Sprite",
                        props: {
                            y: 4,
                            x: 398,
                            var: "closebtn",
                            texture: "game/close.png"
                        },
                        compId: 7
                    }, {
                        type: "List",
                        props: {
                            y: 89,
                            x: 23,
                            width: 431,
                            var: "carousellist",
                            spaceY: 15,
                            spaceX: 5,
                            selectEnable: !1,
                            repeatY: 5,
                            repeatX: 3,
                            height: 593
                        },
                        compId: 9
                    }]
                }],
                loadList: ["game/black.png", "game/normal_frameBGad.png", "game/close.png"],
                loadList3D: []
            }, e.GameBoxUIUI = t, s("ui.pkview.GameBoxUIUI", t);
            class i extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(i.uiView);
                }
            }
            i.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/NativeInsertUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "18,23,21,23,1",
                        right: 0,
                        name: "bg",
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 130,
                        var: "window",
                        centerX: 0
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 690,
                            skin: "game/achiment_UI_bg.png",
                            sizeGrid: "43,44,53,43,1",
                            name: "bg",
                            height: 1101
                        },
                        compId: 168,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 29,
                                x: 124,
                                texture: "game/oppo_reward_title.png"
                            },
                            compId: 169
                        }]
                    }, {
                        type: "Box",
                        props: {
                            y: 100,
                            var: "adobj",
                            centerX: 0
                        },
                        compId: 193,
                        child: [{
                            type: "Image",
                            props: {
                                width: 631,
                                skin: "game/ad_uibg.png",
                                sizeGrid: "36,38,39,34,1",
                                height: 476
                            },
                            compId: 176
                        }, {
                            type: "Image",
                            props: {
                                y: 8,
                                x: 6,
                                width: 615,
                                var: "icon",
                                height: 460
                            },
                            compId: 7,
                            child: [{
                                type: "Sprite",
                                props: {
                                    y: 0,
                                    x: 500,
                                    texture: "game/ad.png"
                                },
                                compId: 177
                            }]
                        }, {
                            type: "Text",
                            props: {
                                y: 17,
                                x: 156,
                                width: 319,
                                var: "adtitle",
                                valign: "middle",
                                height: 51,
                                fontSize: 28,
                                font: "Microsoft YaHei",
                                color: "#625e5e",
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 194
                        }, {
                            type: "Text",
                            props: {
                                y: 359,
                                x: 12,
                                wordWrap: !0,
                                width: 607,
                                var: "addesc",
                                valign: "middle",
                                height: 105,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#625e5e",
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 195
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 108,
                            x: 38,
                            var: "adclosebtn",
                            texture: "game/adclose.png"
                        },
                        compId: 178
                    }, {
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 615,
                            var: "closebtn",
                            texture: "game/close.png"
                        },
                        compId: 6
                    }, {
                        type: "Image",
                        props: {
                            y: 900,
                            x: 230,
                            width: 230,
                            var: "getbtn",
                            skin: "game/b_btn_green.png",
                            sizeGrid: "17,55,36,47,1",
                            label: "label",
                            height: 107
                        },
                        compId: 8,
                        child: [{
                            type: "Text",
                            props: {
                                y: 24.5,
                                x: 39.5,
                                width: 151,
                                var: "gettext",
                                valign: "middle",
                                text: "Claim",
                                height: 58,
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 9
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 638,
                            x: 55,
                            width: 580,
                            var: "rewardobj",
                            skin: "game/buildBannar_bg.png",
                            sizeGrid: "29,23,36,20,1",
                            height: 196
                        },
                        compId: 171,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 28,
                                x: 24,
                                texture: "game/builditem_iconBG.png",
                                scaleY: 1.5,
                                scaleX: 1.5
                            },
                            compId: 172
                        }, {
                            type: "Sprite",
                            props: {
                                y: 53,
                                x: 42,
                                texture: "game/reward_wood.png"
                            },
                            compId: 173
                        }, {
                            type: "Sprite",
                            props: {
                                y: 75,
                                x: 266.5,
                                texture: "game/res_wood_icon.png"
                            },
                            compId: 174
                        }, {
                            type: "Text",
                            props: {
                                y: 83,
                                x: 339,
                                width: 168,
                                var: "rewardnum",
                                valign: "middle",
                                text: "x200",
                                height: 40,
                                fontSize: 40,
                                font: "Microsoft YaHei",
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 175
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/achiment_UI_bg.png", "game/oppo_reward_title.png", "game/ad_uibg.png", "game/ad.png", "game/adclose.png", "game/close.png", "game/b_btn_green.png", "game/buildBannar_bg.png", "game/builditem_iconBG.png", "game/reward_wood.png", "game/res_wood_icon.png"],
                loadList3D: []
            }, e.NativeInsertUIUI = i, s("ui.pkview.NativeInsertUIUI", i);
            class o extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(o.uiView);
                }
            }
            o.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/NativeVivoInsertUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "18,23,21,23,1",
                        right: 0,
                        name: "bg",
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 226,
                        var: "window",
                        centerX: 0
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 690,
                            var: "bg",
                            skin: "game/achiment_UI_bg.png",
                            sizeGrid: "43,44,53,43,1",
                            height: 482
                        },
                        compId: 168
                    }, {
                        type: "Text",
                        props: {
                            y: 27,
                            x: 125,
                            width: 437,
                            var: "title",
                            valign: "middle",
                            text: "阿斯蒂芬",
                            height: 49,
                            fontSize: 26,
                            font: "Microsoft YaHei",
                            color: "#ffffff",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 197
                    }, {
                        type: "Box",
                        props: {
                            y: 83,
                            width: 631,
                            var: "adobj",
                            height: 364,
                            centerX: 0
                        },
                        compId: 193,
                        child: [{
                            type: "Image",
                            props: {
                                top: 0,
                                skin: "game/ad_uibg.png",
                                sizeGrid: "36,38,39,34,1",
                                right: 0,
                                left: 0,
                                bottom: 0
                            },
                            compId: 176
                        }, {
                            type: "Image",
                            props: {
                                y: 8,
                                x: 6,
                                width: 615,
                                var: "icon",
                                height: 346
                            },
                            compId: 7,
                            child: [{
                                type: "Sprite",
                                props: {
                                    y: 0,
                                    x: 500,
                                    texture: "game/ad.png"
                                },
                                compId: 177
                            }]
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 21,
                            x: 595.5,
                            var: "adclosebtn",
                            texture: "game/close.png"
                        },
                        compId: 178
                    }]
                }],
                loadList: ["game/black.png", "game/achiment_UI_bg.png", "game/ad_uibg.png", "game/ad.png", "game/close.png"],
                loadList3D: []
            }, e.NativeVivoInsertUIUI = o, s("ui.pkview.NativeVivoInsertUIUI", o);
        }(e.pkview || (e.pkview = {}));
    }(o || (o = {})), function (e) {
        !function (e) {
            class t extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(t.uiView);
                }
            }
            t.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 9,
                "selecteID": 94,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/AchieveUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 106,
                "loadList3D": [
                ],
                "loadList": [
                    "game/achiment_uitextureBG.jpg",
                    "game/res_num_bg.png",
                    "game/res_icon_bg.png",
                    "game/res_gem_icon.png",
                    "game/res_wood_icon.png",
                    "game/achiment_UI_bg.png",
                    "game/achi_title.png",
                    "game/close.png",
                    "game/achi_uibg.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/achiment_uitextureBG.jpg", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ],
                        "$HIDDEN": true
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,diamondobj",
                        "props": { "y": 65, "x": 39, "var": "diamondobj" },
                        "nodeParent": 2,
                        "label": "diamondobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 96,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 96,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 98,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 96,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 99,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 12, "x": 9, "texture": "game/res_gem_icon.png" },
                                        "nodeParent": 99,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 100,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,diamondnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "diamondnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 96,
                                "label": "diamondnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 101,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,resobj",
                        "props": { "y": 65, "x": 267, "var": "resobj" },
                        "nodeParent": 2,
                        "label": "resobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 97,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 97,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 102,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 97,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 103,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": 5, "x": 9, "var": "moodicon", "skin": "game/res_wood_icon.png" },
                                        "nodeParent": 103,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 104,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,resnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "resnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 97,
                                "label": "resnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 105,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "y": 265, "width": 670, "skin": "game/achiment_UI_bg.png", "sizeGrid": "38,46,47,49,1", "name": "bg", "height": 859, "centerX": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,title",
                                "props": { "y": -97, "x": 235.5, "width": 199, "texture": "game/achi_title.png", "name": "title", "height": 72 },
                                "nodeParent": 4,
                                "label": "title",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 4, "x": 4, "width": 192, "valign": "middle", "text": "Achievement", "runtime": "Laya.Text", "height": 61, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 9,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 94,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,closebtn",
                                "props": { "y": 0, "x": 606, "width": 58, "var": "closebtn", "texture": "game/close.png", "height": 55 },
                                "nodeParent": 4,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 34,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 62, "x": 38, "width": 592, "skin": "game/achi_uibg.png", "sizeGrid": "28,26,22,27,1", "height": 748 },
                                "nodeParent": 4,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 63,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "List",
                        "searchKey": "List,listobj",
                        "props": { "y": 337, "x": 89, "width": 568, "var": "listobj", "spaceY": 16, "repeatY": 6, "repeatX": 1, "height": 728, "elasticEnabled": true },
                        "nodeParent": 2,
                        "label": "listobj",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 64,
                        "child": [
                        ]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.AchieveUIUI = t, s("ui.view.AchieveUIUI", t);
            class i extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(i.uiView);
                }
            }
            i.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 17,
                "selecteID": 19,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/BottleUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 23,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "animate/DriftBattle.ani",
                    "game/newyear_uibg.png",
                    "game/battleitem_iconBG.png",
                    "game/sea_bottle_man.png",
                    "game/info_messagebg.png",
                    "game/b_btn_green.png",
                    "game/share.png",
                    "game/b_btn_blue.png",
                    "game/newyear_lanter_battle.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "20,17,19,22,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "Image",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 20,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Animation",
                        "searchKey": "Animation,anim",
                        "props": { "y": 667, "x": 375, "var": "anim", "source": "animate/DriftBattle.ani" },
                        "nodeParent": 2,
                        "label": "anim",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 666, "width": 550, "var": "window", "skin": "game/newyear_uibg.png", "sizeGrid": "92,233,17,218", "height": 420, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text",
                                "props": { "y": 7, "x": 4, "width": 541, "valign": "middle", "text": "Drifting Bottle", "runtime": "Laya.Text", "height": 71, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "Text",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 10,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 91, "x": 228, "width": 96, "skin": "game/battleitem_iconBG.png", "height": 96 },
                                "nodeParent": 4,
                                "label": "Image",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 7,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,icon",
                                        "props": { "y": 5.5, "x": 5.5, "width": 86, "var": "icon", "skin": "game/sea_bottle_man.png", "height": 86 },
                                        "nodeParent": 7,
                                        "label": "icon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 6,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 186, "x": 29, "width": 491, "skin": "game/info_messagebg.png", "sizeGrid": "29,28,28,25", "height": 129 },
                                "nodeParent": 4,
                                "label": "Image",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 5,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txttitle",
                                        "props": { "y": 2, "x": 1, "wordWrap": true, "width": 490, "var": "txttitle", "valign": "middle", "text": "From the Middle Ages", "runtime": "Laya.Text", "height": 59, "fontSize": 26, "font": "Microsoft YaHei", "color": "#514d4d", "bold": true, "align": "center" },
                                        "nodeParent": 5,
                                        "label": "txttitle",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 8,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtmessgae",
                                        "props": { "y": 61, "x": 2, "wordWrap": true, "width": 486, "var": "txtmessgae", "valign": "middle", "runtime": "Laya.Text", "height": 67, "fontSize": 20, "font": "Microsoft YaHei", "color": "#514d4d", "align": "center" },
                                        "nodeParent": 5,
                                        "label": "txtmessgae",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 9,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnshare",
                                "props": { "y": 340, "x": -507, "width": 163, "visible": false, "var": "btnshare", "skin": "game/b_btn_green.png", "sizeGrid": "31,81,30,64", "height": 80 },
                                "nodeParent": 4,
                                "label": "btnshare",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 11,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 24, "x": 21, "width": 38, "skin": "game/share.png", "height": 32 },
                                        "nodeParent": 11,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 12,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 15.5, "x": 67, "width": 72, "valign": "middle", "text": "分享", "runtime": "Laya.Text", "height": 53, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 11,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 13,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 317, "x": 95, "width": 359, "var": "btnclose", "skin": "game/b_btn_blue.png", "sizeGrid": "24,40,36,51", "height": 80 },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 17,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtbtn",
                                        "props": { "y": 2, "x": 2, "wordWrap": true, "width": 354, "var": "txtbtn", "valign": "middle", "text": "OK", "runtime": "Laya.Text", "height": 70, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 17,
                                        "label": "txtbtn",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 19,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 77, "x": 21, "texture": "game/newyear_lanter_battle.png" },
                                "nodeParent": 4,
                                "label": "Sprite",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 21,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 77, "x": 469, "texture": "game/newyear_lanter_battle.png" },
                                "nodeParent": 4,
                                "label": "Sprite",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 22,
                                "child": [
                                ]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.BottleUIUI = i, s("ui.view.BottleUIUI", i);
            class o extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(o.uiView);
                }
            }
            o.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 15,
                "selecteID": 16,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/BuildOverUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 39,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/normal_frameBG.png",
                    "game/follow_img_uibg.png",
                    "game/follow_mesbg.png",
                    "game/follow_btn.png",
                    "game/b_btn_yellow.png",
                    "game/video_sign.png",
                    "game/b_btn_green.png",
                    "game/Video_record.png",
                    "game/share_mesbg.png",
                    "game/res_gem_icon.png",
                    "game/builditem_iconBG.png",
                    "game/buildIcon109.png",
                    "game/res_wood_icon.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "23,21,26,25,1", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 593, "var": "window", "skin": "game/normal_frameBG.png", "sizeGrid": "96,270,20,244,1", "height": 396, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 5,
                        "child": [
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,tt_view",
                                "props": { "y": -468, "x": -78, "var": "tt_view", "top": 0, "right": 0, "left": 0, "bottom": 0 },
                                "nodeParent": 5,
                                "label": "tt_view",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 19,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,infobg",
                                        "props": { "top": -275, "skin": "game/follow_img_uibg.png", "right": 0, "name": "infobg", "left": 0 },
                                        "nodeParent": 19,
                                        "label": "infobg",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 20,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 88, "x": 247, "wordWrap": true, "width": 319, "text": "Congratulations!", "runtime": "Laya.Text", "leading": 15, "height": 25, "fontSize": 24, "font": "Microsoft YaHei", "color": "#2c01b5", "bold": true },
                                                "nodeParent": 20,
                                                "label": "Text",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 21,
                                                "child": [
                                                    {
                                                        "x": 75,
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 27, "x": 0, "wordWrap": true, "width": 319, "text": "One step closer to the great raft!", "runtime": "Laya.Text", "height": 41, "fontSize": 24, "font": "Microsoft YaHei", "color": "#2c01b5", "bold": true },
                                                        "nodeParent": 21,
                                                        "label": "Text",
                                                        "isOpen": true,
                                                        "isDirectory": true,
                                                        "isAniNode": true,
                                                        "hasChild": true,
                                                        "compId": 37,
                                                        "child": [
                                                            {
                                                                "x": 90,
                                                                "type": "Text",
                                                                "searchKey": "Text",
                                                                "props": { "y": 47, "x": 0, "wordWrap": true, "width": 319, "runtime": "Laya.Text", "height": 25, "fontSize": 24, "font": "Microsoft YaHei", "color": "#2c01b5", "bold": true },
                                                                "nodeParent": 37,
                                                                "label": "Text",
                                                                "isDirectory": false,
                                                                "isAniNode": true,
                                                                "hasChild": false,
                                                                "compId": 38,
                                                                "child": [
                                                                ],
                                                                "$HIDDEN": false
                                                            }],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 206, "x": 720, "width": 199, "visible": false, "sizeGrid": "0,22,0,29", "height": 36 },
                                                "nodeParent": 20,
                                                "label": "Image",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 22,
                                                "child": [
                                                    {
                                                        "x": 75,
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 4, "x": 1, "width": 197, "valign": "middle", "runtime": "Laya.Text", "height": 32, "fontSize": 17, "font": "Microsoft YaHei", "color": "#ffffff", "bold": false, "align": "center" },
                                                        "nodeParent": 22,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 23,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    },
                                                    {
                                                        "x": 75,
                                                        "type": "Image",
                                                        "searchKey": "Image,btncopyID",
                                                        "props": { "y": -5, "x": 220, "var": "btncopyID" },
                                                        "nodeParent": 22,
                                                        "label": "btncopyID",
                                                        "isOpen": true,
                                                        "isDirectory": true,
                                                        "isAniNode": true,
                                                        "hasChild": true,
                                                        "compId": 24,
                                                        "child": [
                                                            {
                                                                "x": 90,
                                                                "type": "Text",
                                                                "searchKey": "Text",
                                                                "props": { "y": 5, "x": 3, "width": 105, "valign": "middle", "runtime": "Laya.Text", "height": 40, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                                "nodeParent": 24,
                                                                "label": "Text",
                                                                "isDirectory": false,
                                                                "isAniNode": true,
                                                                "hasChild": false,
                                                                "compId": 26,
                                                                "child": [
                                                                ],
                                                                "$HIDDEN": false
                                                            }],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,btnclose",
                                        "props": { "y": 401, "x": 204, "width": 162, "var": "btnclose", "valign": "middle", "text": "Close", "runtime": "Laya.Text", "height": 39, "fontSize": 32, "font": "Microsoft YaHei", "color": "#a39797", "bold": true, "align": "center" },
                                        "nodeParent": 19,
                                        "label": "btnclose",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 27,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnVedio_tt",
                                        "props": { "y": 289, "x": 192, "width": 208, "var": "btnVedio_tt", "skin": "game/b_btn_yellow.png", "sizeGrid": "0,77,0,78", "height": 81 },
                                        "nodeParent": 19,
                                        "label": "btnVedio_tt",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 28,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 19, "x": 21, "skin": "game/video_sign.png" },
                                                "nodeParent": 28,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 29,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 4, "x": 63, "width": 129, "valign": "middle", "text": "Diamonds", "runtime": "Laya.Text", "height": 72, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 28,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 30,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnShare_tt",
                                        "props": { "y": 266, "x": 775, "width": 208, "visible": false, "var": "btnShare_tt", "sizeGrid": "0,77,0,78", "height": 81 },
                                        "nodeParent": 19,
                                        "label": "btnShare_tt",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 31,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 17, "x": 24, "skin": "game/Video_record.png" },
                                                "nodeParent": 31,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 32,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 4, "x": 65, "width": 132, "valign": "middle", "runtime": "Laya.Text", "height": 72, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 31,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 33,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": -46, "x": 0, "width": 208, "skin": "game/share_mesbg.png", "height": 45 },
                                                "nodeParent": 31,
                                                "label": "Image",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 34,
                                                "child": [
                                                    {
                                                        "x": 75,
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 4, "x": 0, "width": 206, "valign": "middle", "runtime": "Laya.Text", "height": 31, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 34,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 35,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    },
                                                    {
                                                        "x": 75,
                                                        "type": "Image",
                                                        "searchKey": "Image",
                                                        "props": { "y": 8, "x": 139, "width": 26, "skin": "game/res_gem_icon.png", "height": 23 },
                                                        "nodeParent": 34,
                                                        "label": "Image",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 36,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,iconBG",
                                "props": { "y": 90, "x": 49, "width": 120, "skin": "game/builditem_iconBG.png", "sizeGrid": "47,44,43,44", "name": "iconBG", "height": 120 },
                                "nodeParent": 5,
                                "label": "iconBG",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 6,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,icon",
                                        "props": { "y": 10, "x": 11, "width": 100, "var": "icon", "skin": "game/buildIcon109.png", "height": 100 },
                                        "nodeParent": 6,
                                        "label": "icon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 7,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,buildName",
                                "props": { "y": 6, "x": 6, "width": 581, "var": "buildName", "valign": "middle", "text": "Carrot Field", "runtime": "Laya.Text", "height": 65, "fontSize": 35, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "buildName",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 8,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,desc",
                                "props": { "y": 86, "x": 198, "wordWrap": true, "width": 387, "var": "desc", "valign": "middle", "text": "Current building productivity", "runtime": "Laya.Text", "leading": 10, "height": 74, "fontSize": 25, "font": "Microsoft YaHei", "color": "#878787", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "desc",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 9,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,buffobj",
                                "props": { "y": 160, "x": 198, "name": "buffobj" },
                                "nodeParent": 5,
                                "label": "buffobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 11,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": -3, "x": -1, "width": 42, "var": "moodicon", "skin": "game/res_wood_icon.png", "scaleY": 1, "scaleX": 1, "height": 42 },
                                        "nodeParent": 11,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 10,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 7, "x": 52, "width": 23, "valign": "middle", "runtime": "Laya.Text", "height": 32, "fontSize": 28, "font": "Arial", "color": "#484646", "bold": true, "align": "center" },
                                        "nodeParent": 11,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 12,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,buffValue",
                                        "props": { "y": 7, "x": 85, "width": 78, "var": "buffValue", "valign": "middle", "text": "+150", "runtime": "Laya.Text", "height": 32, "fontSize": 28, "font": "Arial", "color": "#138426", "bold": true, "align": "left" },
                                        "nodeParent": 11,
                                        "label": "buffValue",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 13,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttips",
                                "props": { "y": 218, "x": 7, "width": 578, "var": "txttips", "valign": "middle", "text": "New boards can be built now", "runtime": "Laya.Text", "height": 61, "fontSize": 25, "font": "Microsoft YaHei", "color": "#737373", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "txttips",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 14,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,confirmbtn",
                                "props": { "y": 329, "width": 225, "var": "confirmbtn", "skin": "game/b_btn_green.png", "sizeGrid": "35,81,40,82", "height": 95, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 5,
                                "label": "confirmbtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 15,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 8, "x": 31, "width": 162, "valign": "middle", "text": "OK", "runtime": "Laya.Text", "height": 78, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 15,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 16,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 15,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 17,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }],
                "$HIDDEN": false
            }, e.BuildOverUIUI = o, s("ui.view.BuildOverUIUI", o);
            class r extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(r.uiView);
                }
            }
            r.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 58,
                "selecteID": 59,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/BuildUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 157,
                "loadList3D": [
                ],
                "loadList": [
                    "game/build_uiBG.jpg",
                    "game/build_title.png",
                    "game/res_num_bg.png",
                    "game/res_icon_bg.png",
                    "game/res_gem_icon.png",
                    "game/res_wood_icon.png",
                    "game/buildUI_bg.png",
                    "game/floorBG.png",
                    "game/tipsBG.png",
                    "game/num0_9.png",
                    "game/floorBG2.png",
                    "game/b_btn_green.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/build_uiBG.jpg", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,title",
                        "props": { "y": 156, "width": 199, "skin": "game/build_title.png", "name": "title", "height": 72, "centerX": 0 },
                        "nodeParent": 2,
                        "label": "title",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 9,
                        "child": [
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text",
                                "props": { "y": 3, "x": 4, "width": 191, "valign": "middle", "text": "Build", "strokeColor": "#ffffff", "stroke": 5, "runtime": "Laya.Text", "height": 62, "fontSize": 42, "font": "Microsoft YaHei", "color": "#cf4845", "bold": true, "align": "center" },
                                "nodeParent": 9,
                                "label": "Text",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 63,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,diamondobj",
                        "props": { "y": 67, "x": 39, "var": "diamondobj" },
                        "nodeParent": 2,
                        "label": "diamondobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 36,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 36,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 38,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 36,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 39,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 12, "x": 9, "texture": "game/res_gem_icon.png" },
                                        "nodeParent": 39,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 40,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,diamondnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "diamondnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 36,
                                "label": "diamondnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 41,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,resobj",
                        "props": { "y": 67, "x": 267, "var": "resobj" },
                        "nodeParent": 2,
                        "label": "resobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 37,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 37,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 42,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 37,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 43,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": 5, "x": 9, "var": "moodicon", "skin": "game/res_wood_icon.png" },
                                        "nodeParent": 43,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 44,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,resnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "resnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 37,
                                "label": "resnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 45,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 685, "var": "window", "top": 278, "skin": "game/buildUI_bg.png", "sizeGrid": "46,54,57,48,1", "centerX": 0, "bottom": 120 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,tabobj",
                                "props": { "width": 590, "var": "tabobj", "top": -25, "height": 70, "centerX": 0 },
                                "nodeParent": 4,
                                "label": "tabobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 6,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,firstbtn",
                                        "props": { "y": 0, "x": -2, "width": 140, "var": "firstbtn", "skin": "game/floorBG.png", "height": 70 },
                                        "nodeParent": 6,
                                        "label": "firstbtn",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 5,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 23, "x": 17, "width": 105, "text": "Stage 1", "runtime": "Laya.Text", "height": 28, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true },
                                                "nodeParent": 5,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 7,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,tips1",
                                                "props": { "y": -23, "x": -284, "visible": false, "var": "tips1", "sizeGrid": "20,16,11,16" },
                                                "nodeParent": 5,
                                                "label": "tips1",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 46,
                                                "child": [
                                                    {
                                                        "x": 75,
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,floornum1",
                                                        "props": { "y": 10.25, "x": -5, "width": 38, "var": "floornum1", "valign": "middle", "text": "2", "spaceY": 0, "spaceX": -15, "skin": "game/num0_9.png", "sheet": "0123456789", "scaleX": 0.9, "height": 29, "fontSize": 26, "font": "Microsoft YaHei", "direction": "horizontal", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 46,
                                                        "label": "floornum1",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 47,
                                                        "child": [
                                                        ]
                                                    }]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,secondbtn",
                                        "props": { "y": 0, "x": 150, "width": 140, "visible": false, "var": "secondbtn", "skin": "game/floorBG2.png", "height": 70 },
                                        "nodeParent": 6,
                                        "label": "secondbtn",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 48,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 23, "x": 21, "text": "Stage 2", "runtime": "Laya.Text", "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true },
                                                "nodeParent": 48,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 49,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,tips2",
                                                "props": { "y": -32, "x": -404, "visible": false, "var": "tips2", "sizeGrid": "19,17,12,15" },
                                                "nodeParent": 48,
                                                "label": "tips2",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 50,
                                                "child": [
                                                    {
                                                        "x": 75,
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,floornum2",
                                                        "props": { "y": 10, "x": 1, "width": 27, "var": "floornum2", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "sheet": "0123456789", "scaleX": 0.9, "height": 23, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 50,
                                                        "label": "floornum2",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 51,
                                                        "child": [
                                                        ]
                                                    }]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,thirdbtn",
                                        "props": { "y": -1, "x": 301, "width": 140, "visible": false, "var": "thirdbtn", "skin": "game/floorBG2.png", "height": 70 },
                                        "nodeParent": 6,
                                        "label": "thirdbtn",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 52,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 23, "x": 21, "text": "Stage 3", "runtime": "Laya.Text", "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true },
                                                "nodeParent": 52,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 53,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Sprite",
                                                "searchKey": "Sprite,tips3",
                                                "props": { "y": -46, "x": -536, "visible": false, "var": "tips3" },
                                                "nodeParent": 52,
                                                "label": "tips3",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 54,
                                                "child": [
                                                    {
                                                        "x": 75,
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,floornum3",
                                                        "props": { "y": 11, "x": 0, "width": 28, "var": "floornum3", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "sheet": "0123456789", "scaleX": 0.9, "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 54,
                                                        "label": "floornum3",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 55,
                                                        "child": [
                                                        ]
                                                    }]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,fourthbtn",
                                        "props": { "y": 0, "x": 450, "width": 140, "visible": false, "var": "fourthbtn", "skin": "game/floorBG2.png", "height": 70 },
                                        "nodeParent": 6,
                                        "label": "fourthbtn",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 58,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 23, "x": 21, "text": "Stage 4", "runtime": "Laya.Text", "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true },
                                                "nodeParent": 58,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 59,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,tips4",
                                                "props": { "y": 51, "x": -716, "visible": false, "var": "tips4" },
                                                "nodeParent": 58,
                                                "label": "tips4",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 60,
                                                "child": [
                                                    {
                                                        "x": 75,
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,floornum4",
                                                        "props": { "y": 11, "x": 0, "width": 28, "var": "floornum4", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "sheet": "0123456789", "scaleX": 0.9, "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 60,
                                                        "label": "floornum4",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 61,
                                                        "child": [
                                                        ]
                                                    }]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,firstlist",
                                "props": { "width": 584, "var": "firstlist", "top": 180, "spaceY": 5, "repeatY": 6, "repeatX": 1, "elasticEnabled": true, "centerX": 0, "bottom": 50 },
                                "nodeParent": 4,
                                "label": "firstlist",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 8,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,secondlist",
                                "props": { "width": 584, "visible": false, "var": "secondlist", "top": 180, "spaceY": 5, "repeatY": 6, "repeatX": 1, "elasticEnabled": true, "centerX": 0, "bottom": 50 },
                                "nodeParent": 4,
                                "label": "secondlist",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 56,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,thirdlist",
                                "props": { "width": 584, "visible": false, "var": "thirdlist", "top": 180, "spaceY": 5, "repeatY": 6, "repeatX": 1, "elasticEnabled": true, "centerX": 0, "bottom": 50 },
                                "nodeParent": 4,
                                "label": "thirdlist",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 57,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,fourthlist",
                                "props": { "width": 584, "visible": false, "var": "fourthlist", "top": 180, "spaceY": 5, "repeatY": 6, "repeatX": 1, "elasticEnabled": true, "centerX": 0, "bottom": 50 },
                                "nodeParent": 4,
                                "label": "fourthlist",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 62,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,tiptext",
                                "props": { "x": 8, "width": 669, "visible": false, "var": "tiptext", "height": 49, "bottom": 30 },
                                "nodeParent": 4,
                                "label": "tiptext",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 156,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 0, "x": 18, "wordWrap": true, "width": 635, "valign": "middle", "text": "Task tip: Only build the entire raft before you can set sail!", "runtime": "Laya.Text", "height": 51, "fontSize": 26, "font": "SimHei", "color": "#c83c06", "bold": true, "align": "center" },
                                        "nodeParent": 156,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 155,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,closebtn",
                                "props": { "x": 242, "width": 200, "var": "closebtn", "skin": "game/b_btn_green.png", "sizeGrid": "24,69,32,59", "height": 80, "bottom": -100 },
                                "nodeParent": 4,
                                "label": "closebtn",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 34,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 0, "x": 1, "width": 198, "valign": "middle", "text": "Close", "runtime": "Laya.Text", "height": 79, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 34,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 65,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.BuildUIUI = r, s("ui.view.BuildUIUI", r);
            class l extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(l.uiView);
                }
            }
            l.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/ChapterUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        var: "bg",
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "20,24,20,26,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Image",
                    props: {
                        y: 667,
                        x: 375,
                        width: 647,
                        var: "window",
                        skin: "game/achiment_UI_bg.png",
                        sizeGrid: "46,54,60,53,1",
                        name: "window",
                        height: 879,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 9,
                    child: [{
                        type: "Sprite",
                        props: {
                            y: 40,
                            x: 139,
                            texture: "game/story_title.png"
                        },
                        compId: 10
                    }, {
                        type: "Image",
                        props: {
                            y: 118,
                            x: 60,
                            width: 526,
                            skin: "game/achi_uibg.png",
                            sizeGrid: "21,20,23,20,1",
                            height: 701
                        },
                        compId: 19,
                        child: [{
                            type: "List",
                            props: {
                                y: 3,
                                x: 11,
                                width: 503,
                                var: "listobj",
                                spaceY: 10,
                                selectEnable: !1,
                                repeatX: 1,
                                height: 693,
                                elasticEnabled: !0
                            },
                            compId: 22
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 582,
                            var: "closebtn",
                            texture: "game/close.png"
                        },
                        compId: 23
                    }]
                }],
                loadList: ["game/black.png", "game/achiment_UI_bg.png", "game/story_title.png", "game/achi_uibg.png", "game/close.png"],
                loadList3D: []
            }, e.ChapterUIUI = l, s("ui.view.ChapterUIUI", l);
            class h extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(h.uiView);
                }
            }
            h.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 4,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/ChristmasGiftUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 32,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/christmas_uibg.png",
                    "game/christmas_ui_img.png",
                    "game/close_white.png",
                    "game/christmas_gift_img.png",
                    "game/gameTime_bg.png",
                    "game/game_wood.png",
                    "game/offline_timeBG.png",
                    "game/offline_time.png",
                    "game/b_btn_green.png",
                    "game/video2.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,imgbg",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "17,21,16,22,1", "right": 0, "name": "imgbg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "imgbg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 667, "x": 375, "var": "window", "skin": "game/christmas_uibg.png", "sizeGrid": "97,171,31,92", "height": 685, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": -207, "x": 53, "skin": "game/christmas_ui_img.png" },
                                "nodeParent": 4,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 31,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttitle",
                                "props": { "y": 19, "x": 61, "width": 390, "valign": "middle", "text": "Gathering of gifts", "runtime": "Laya.Text", "name": "txttitle", "height": 48, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "txttitle",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 39, "x": 474, "var": "btnclose", "skin": "game/close_white.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 87, "x": 22, "skin": "game/christmas_gift_img.png" },
                                "nodeParent": 4,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttip",
                                "props": { "y": 451, "x": 9, "width": 495, "var": "txttip", "valign": "middle", "text": "Treasure bowl gift in preparation……", "runtime": "Laya.Text", "height": 32, "fontSize": 22, "font": "Microsoft YaHei", "color": "#818181", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "txttip",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 8,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,resultobj",
                                "props": { "y": 482, "x": 7, "width": 500, "var": "resultobj", "skin": "game/gameTime_bg.png", "sizeGrid": "11,15,6,13,1", "height": 81 },
                                "nodeParent": 4,
                                "label": "resultobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 17,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,resulticon",
                                        "props": { "y": 15, "x": 10, "visible": false, "var": "resulticon", "skin": "game/game_wood.png" },
                                        "nodeParent": 17,
                                        "label": "resulticon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 18,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,resultcount",
                                        "props": { "y": 0, "x": 0, "wordWrap": true, "width": 499, "var": "resultcount", "valign": "middle", "text": "99999", "runtime": "Laya.Text", "height": 83, "fontSize": 25, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 17,
                                        "label": "resultcount",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 20,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,timeobj",
                                "props": { "y": 497, "x": 66, "width": 381, "var": "timeobj", "skin": "game/offline_timeBG.png", "sizeGrid": "19,34,21,28,1", "height": 52 },
                                "nodeParent": 4,
                                "label": "timeobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 21,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,timeicon",
                                        "props": { "y": 7, "x": 20, "var": "timeicon", "skin": "game/offline_time.png" },
                                        "nodeParent": 21,
                                        "label": "timeicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 22,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txttime",
                                        "props": { "y": 13, "x": 62, "width": 122, "var": "txttime", "valign": "middle", "text": "99:99:99", "runtime": "Laya.Text", "height": 32, "fontSize": 22, "font": "Microsoft YaHei", "color": "#fd0e0a", "bold": true, "align": "center" },
                                        "nodeParent": 21,
                                        "label": "txttime",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 23,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtmaxcount",
                                        "props": { "y": 15, "x": 201, "width": 165, "var": "txtmaxcount", "valign": "middle", "text": "MAX 10/10", "runtime": "Laya.Text", "height": 28, "fontSize": 22, "font": "Microsoft YaHei", "color": "#818181", "bold": true, "align": "center" },
                                        "nodeParent": 21,
                                        "label": "txtmaxcount",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 24,
                                        "child": [
                                        ]
                                    }],
                                "$HIDDEN": true
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnVedio",
                                "props": { "y": 610, "x": 256, "var": "btnVedio", "skin": "game/b_btn_green.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnVedio",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 13,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 8, "x": 65.5, "skin": "game/video2.png" },
                                        "nodeParent": 13,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 14,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 39, "x": 16, "width": 131, "valign": "middle", "text": "Get", "runtime": "Laya.Text", "height": 39, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 13,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 16,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnGet",
                                "props": { "y": 610, "x": 256, "var": "btnGet", "skin": "game/b_btn_green.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnGet",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 28,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 20, "x": 10, "width": 143, "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 39, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 28,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 30,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.ChristmasGiftUIUI = h, s("ui.view.ChristmasGiftUIUI", h);
            class d extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(d.uiView);
                }
            }
            d.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 9,
                "selecteID": 12,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/ChristmasWishUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 20,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/christmas_uibg.png",
                    "game/christmas_ui_img.png",
                    "game/close_white.png",
                    "game/christmas_wish_img.png",
                    "game/b_btn_green.png",
                    "game/game_gem.png",
                    "game/video2.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bgblack",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "17,21,16,22,1", "right": 0, "name": "bgblack", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bgblack",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 513, "var": "window", "skin": "game/christmas_uibg.png", "sizeGrid": "97,0,31,0", "height": 603, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": -207, "x": 53, "skin": "game/christmas_ui_img.png" },
                                "nodeParent": 4,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 19,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttitle",
                                "props": { "y": 19, "x": 58, "width": 397, "valign": "middle", "text": "Treasure bowl wish", "runtime": "Laya.Text", "name": "txttitle", "height": 48, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "txttitle",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 39, "x": 474, "var": "btnclose", "skin": "game/close_white.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 91, "x": 22, "skin": "game/christmas_wish_img.png" },
                                "nodeParent": 4,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttip",
                                "props": { "y": 415, "x": 7, "wordWrap": true, "width": 499, "valign": "middle", "text": "After touching the Treasure Pot, the wish will come true...", "runtime": "Laya.Text", "name": "txttip", "height": 56, "fontSize": 22, "font": "Microsoft YaHei", "color": "#818181", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "txttip",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 8,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnDiam",
                                "props": { "y": 527, "x": 149, "var": "btnDiam", "skin": "game/b_btn_green.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnDiam",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 0, "x": 35.5, "skin": "game/game_gem.png" },
                                        "nodeParent": 9,
                                        "label": "Image",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 10,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txtcost",
                                                "props": { "y": 11, "x": 48, "width": 48, "var": "txtcost", "valign": "middle", "text": "999", "runtime": "Laya.Text", "height": 30, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "left" },
                                                "nodeParent": 10,
                                                "label": "txtcost",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 11,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtDiam",
                                        "props": { "y": 33, "x": 3, "wordWrap": true, "width": 157, "valign": "middle", "text": "Diamond dress up", "runtime": "Laya.Text", "name": "txtDiam", "height": 40, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 9,
                                        "label": "txtDiam",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 12,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnVedio",
                                "props": { "y": 527, "x": 365, "var": "btnVedio", "skin": "game/b_btn_green.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnVedio",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 13,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 8, "x": 65, "skin": "game/video2.png" },
                                        "nodeParent": 13,
                                        "label": "Image",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 14,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txtvediocount",
                                                "props": { "y": 4, "x": 37, "width": 48, "visible": false, "var": "txtvediocount", "valign": "middle", "text": "x1", "runtime": "Laya.Text", "height": 30, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "left" },
                                                "nodeParent": 14,
                                                "label": "txtvediocount",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 17,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 39, "x": 16, "width": 131, "valign": "middle", "text": "Free", "runtime": "Laya.Text", "height": 39, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 13,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 16,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.ChristmasWishUIUI = d, s("ui.view.ChristmasWishUIUI", d);
            class g extends n {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(g.uiView);
                }
            }
            g.uiView = {
                type: "View",
                props: {
                    width: 100,
                    height: 180
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        x: 0,
                        width: 100,
                        skin: "invite/invite_player icon.png",
                        name: "headbg",
                        height: 100
                    },
                    compId: 3,
                    child: [{
                        type: "Image",
                        props: {
                            var: "headicon",
                            top: 2,
                            skin: "invite/invite_player icon.png",
                            right: 2,
                            left: 2,
                            bottom: 2
                        },
                        compId: 4
                    }]
                }, {
                    type: "Text",
                    props: {
                        y: 104,
                        x: 2,
                        width: 96,
                        var: "textresult",
                        valign: "middle",
                        text: "Reward:       999",
                        height: 26,
                        fontSize: 14,
                        font: "Microsoft YaHei",
                        color: "#0f155d",
                        bold: !0,
                        align: "left",
                        runtime: "Laya.Text"
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            y: 1,
                            x: 40,
                            width: 27,
                            var: "resicon",
                            skin: "invite/res_wood_icon.png",
                            height: 23
                        },
                        compId: 6
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 152,
                        x: 0,
                        width: 100,
                        var: "btninvite",
                        skin: "game/btn_green.png",
                        height: 45,
                        bottom: 0
                    },
                    compId: 7,
                    child: [{
                        type: "Text",
                        props: {
                            y: 4,
                            x: 3,
                            width: 94,
                            var: "textbtn",
                            valign: "middle",
                            text: "已邀请",
                            height: 40,
                            fontSize: 20,
                            font: "Microsoft YaHei",
                            color: "#ffffff",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 9
                    }]
                }],
                loadList: ["invite/invite_player icon.png", "invite/res_wood_icon.png", "game/btn_green.png"],
                loadList3D: []
            }, e.DayInvitePlayerUI = g, s("ui.view.DayInvitePlayerUI", g);
            class c extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(c.uiView);
                }
            }
            c.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 47,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/DoubleResUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 66,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/info_uibg.png",
                    "game/task_title.png",
                    "game/close_white.png",
                    "game/speed_img.png",
                    "game/speed_bar.png",
                    "game/offline_time.png",
                    "game/b_btn_green.png",
                    "game/res_gem_icon.png",
                    "comp/image.png",
                    "game/b_btn_yellow.png",
                    "game/ad_video.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "var": "bg", "top": 0, "skin": "game/black.png", "sizeGrid": "27,24,24,23,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 537, "var": "window", "skin": "game/info_uibg.png", "sizeGrid": "91,198,14,252,1", "height": 692, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 47,
                        "child": [
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttitle",
                                "props": { "y": 13, "x": 59, "width": 418, "var": "txttitle", "valign": "middle", "text": "Accelerated production", "styleSkin": "game/task_title.png", "runtime": "Laya.Text", "height": 64, "fontSize": 35, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 47,
                                "label": "txttitle",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 48,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,closebtn",
                                "props": { "y": 19, "x": 473, "var": "closebtn", "skin": "game/close_white.png" },
                                "nodeParent": 47,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 49,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,icon",
                                "props": { "y": 99, "x": 53, "var": "icon", "skin": "game/speed_img.png" },
                                "nodeParent": 47,
                                "label": "icon",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 50,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "ProgressBar",
                                        "searchKey": "ProgressBar,timeprogress",
                                        "props": { "y": 369, "x": 39.5, "width": 370, "var": "timeprogress", "value": 0.9, "skin": "game/speed_bar.png", "sizeGrid": "7,7,8,7,1", "height": 27 },
                                        "nodeParent": 50,
                                        "label": "timeprogress",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 63,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,txttips",
                                                "props": { "y": -38, "x": 2, "wordWrap": true, "width": 366, "var": "txttips", "valign": "middle", "text": "Double the resources in 5 minutes", "styleSkin": "game/task_title.png", "runtime": "Laya.Text", "height": 38, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 63,
                                                "label": "txttips",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 53,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,timeicon",
                                        "props": { "y": 411, "x": 50.5, "var": "timeicon", "skin": "game/offline_time.png" },
                                        "nodeParent": 50,
                                        "label": "timeicon",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 51,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txttime",
                                                "props": { "y": 1, "x": 38, "width": 123, "var": "txttime", "valign": "middle", "text": "04:33", "runtime": "Laya.Text", "height": 39, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 51,
                                                "label": "txttime",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 61,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtmaxtips",
                                        "props": { "y": 415, "x": 225, "width": 135, "var": "txtmaxtips", "valign": "middle", "text": "Max Time", "runtime": "Laya.Text", "height": 34, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 50,
                                        "label": "txtmaxtips",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 62,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txtmax",
                                                "props": { "y": 3, "x": 135, "width": 55, "var": "txtmax", "valign": "middle", "text": "30M", "runtime": "Laya.Text", "height": 30, "fontSize": 20, "font": "Microsoft YaHei", "color": "#40d904", "bold": true, "align": "left" },
                                                "nodeParent": 62,
                                                "label": "txtmax",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 52,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnopen",
                                "props": { "y": 614, "x": 150, "width": 188, "var": "btnopen", "skin": "game/b_btn_green.png", "sizeGrid": "32,83,31,73,1", "pivotY": 40, "pivotX": 94, "height": 90 },
                                "nodeParent": 47,
                                "label": "btnopen",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 54,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,damicon",
                                        "props": { "y": 10, "x": 38, "width": 35, "var": "damicon", "skin": "game/res_gem_icon.png", "height": 33 },
                                        "nodeParent": 54,
                                        "label": "damicon",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 55,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txtcount",
                                                "props": { "y": 3, "x": 25, "width": 87, "var": "txtcount", "valign": "middle", "text": "999", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 34, "fontSize": 25, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 55,
                                                "label": "txtcount",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 56,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 46, "x": 20, "width": 147, "valign": "middle", "text": "Acceleration", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 28, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 54,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 57,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 54,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 64,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnvedio",
                                "props": { "y": 614, "x": 391, "width": 188, "var": "btnvedio", "skin": "game/b_btn_yellow.png", "sizeGrid": "32,83,31,73,1", "pivotY": 41, "pivotX": 94, "height": 90 },
                                "nodeParent": 47,
                                "label": "btnvedio",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 58,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,adicon",
                                        "props": { "y": 9, "x": 71, "var": "adicon", "skin": "game/ad_video.png" },
                                        "nodeParent": 58,
                                        "label": "adicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 59,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 48, "x": 14, "width": 159, "valign": "middle", "text": "Acceleration", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 28, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 58,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 60,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 58,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 65,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.DoubleResUIUI = c, s("ui.view.DoubleResUIUI", c);
            class p extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(p.uiView);
                }
            }
            p.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 10,
                "selecteID": 11,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/EasterEggUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 12,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/buildUI_bg.png",
                    "game/close.png",
                    "game/egg_title.png",
                    "game/egg_img.png",
                    "game/follow_mesbg.png",
                    "game/egg_task_bg.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "17,27,25,23,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "Image",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 667, "x": 375, "width": 663, "var": "window", "skin": "game/buildUI_bg.png", "sizeGrid": "35,39,45,36", "height": 817, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 0, "x": 598, "var": "btnclose", "skin": "game/close.png" },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,title",
                                "props": { "y": 51, "x": 177, "skin": "game/egg_title.png", "name": "title" },
                                "nodeParent": 4,
                                "label": "title",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,icon",
                                "props": { "y": 168, "x": 67, "var": "icon", "skin": "game/egg_img.png" },
                                "nodeParent": 4,
                                "label": "icon",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,messagebg",
                                "props": { "y": 544, "width": 526, "skin": "game/follow_mesbg.png", "sizeGrid": "20,27,23,28", "name": "messagebg", "height": 94, "centerX": 0 },
                                "nodeParent": 4,
                                "label": "messagebg",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 8,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,message",
                                        "props": { "y": 2, "x": 2, "wordWrap": true, "width": 524, "var": "message", "valign": "middle", "text": "King of the sea, start by constantly picking up bottles, picking up two in a row will be a surprise!", "runtime": "Laya.Text", "leading": 10, "height": 91, "fontSize": 22, "font": "Microsoft YaHei", "color": "#1871c3", "bold": true, "align": "center" },
                                        "nodeParent": 8,
                                        "label": "message",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 9,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 666, "width": 512, "skin": "game/egg_task_bg.png", "sizeGrid": "28,49,35,43", "height": 98, "centerX": 0 },
                                "nodeParent": 4,
                                "label": "Image",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 10,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,taskdesc",
                                        "props": { "y": 17, "x": 31, "wordWrap": true, "width": 452, "var": "taskdesc", "valign": "middle", "text": "Mission: Pick up 2 drift bottles", "runtime": "Laya.Text", "height": 70, "fontSize": 32, "font": "Microsoft YaHei", "color": "#ff2a17", "bold": true, "align": "center" },
                                        "nodeParent": 10,
                                        "label": "taskdesc",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 11,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.EasterEggUIUI = p, s("ui.view.EasterEggUIUI", p);
            class m extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(m.uiView);
                }
            }
            m.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 4,
                "selecteID": 12,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/FollowQQUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 16,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/achiment_UI_bg.png",
                    "game/close.png",
                    "game/hero_charbg.png",
                    "game/ship_title.png",
                    "game/animal_ad4.png",
                    "game/b_btn_green.png",
                    "game/video_big.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "20,20,20,20,1", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 0, "x": 0, "width": 661, "var": "window", "skin": "game/achiment_UI_bg.png", "sizeGrid": "26,33,40,31,1", "height": 790, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 0, "x": 598, "var": "btnclose", "skin": "game/close.png" },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 157, "x": 58.5, "skin": "game/hero_charbg.png" },
                                "nodeParent": 4,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,title",
                                "props": { "y": 82, "var": "title", "skin": "game/ship_title.png", "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "title",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 13,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,imgicon",
                                "props": { "y": 341, "var": "imgicon", "skin": "game/animal_ad4.png", "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "imgicon",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,bufftips",
                                "props": { "y": 522, "x": 40, "wordWrap": true, "width": 592, "var": "bufftips", "valign": "middle", "text": "Get permanent production acceleration", "runtime": "Laya.Text", "height": 83, "fontSize": 32, "font": "Microsoft YaHei", "color": "#2b7cad", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "bufftips",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 12,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,buffval",
                                "props": { "y": 604, "x": 192, "wordWrap": true, "width": 277, "var": "buffval", "valign": "middle", "text": "+5%", "runtime": "Laya.Text", "height": 49, "fontSize": 32, "font": "Microsoft YaHei", "color": "#f44f41", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "buffval",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 14,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnfollow",
                                "props": { "y": 655, "x": 204, "width": 253, "var": "btnfollow", "skin": "game/b_btn_green.png", "sizeGrid": "0,24,0,35", "height": 80 },
                                "nodeParent": 4,
                                "label": "btnfollow",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 10,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btnicon",
                                        "props": { "y": 15, "x": 20, "width": 44, "var": "btnicon", "skin": "game/video_big.png", "height": 44 },
                                        "nodeParent": 10,
                                        "label": "btnicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 15,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,followtext",
                                        "props": { "y": 4, "x": 70, "wordWrap": true, "width": 183, "var": "followtext", "valign": "middle", "text": "Free (0/2)", "runtime": "Laya.Text", "height": 67, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 10,
                                        "label": "followtext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 11,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.FollowQQUIUI = m, s("ui.view.FollowQQUIUI", m);
            class u extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(u.uiView);
                }
            }
            u.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/FollowTTUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "26,18,22,23,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Image",
                    props: {
                        width: 661,
                        var: "window",
                        skin: "game/achiment_UI_bg.png",
                        sizeGrid: "26,33,40,31,1",
                        height: 790,
                        centerY: 0,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 4,
                    child: [{
                        type: "Image",
                        props: {
                            y: 22,
                            x: 28,
                            var: "btnclose",
                            skin: "game/follow_back.png"
                        },
                        compId: 5
                    }, {
                        type: "Image",
                        props: {
                            y: 251,
                            var: "imglight",
                            skin: "game/follow_light.png",
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 14
                    }, {
                        type: "Image",
                        props: {
                            y: 268,
                            x: 330,
                            var: "imgicon",
                            skin: "game/follow_img.png",
                            centerY: -127,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 7
                    }, {
                        type: "Image",
                        props: {
                            y: 522,
                            x: 84,
                            width: 492,
                            var: "tapbg",
                            skin: "game/follow_mesbg.png",
                            sizeGrid: "26,29,31,31",
                            height: 112
                        },
                        compId: 8,
                        child: [{
                            type: "Text",
                            props: {
                                y: 24,
                                x: 168,
                                wordWrap: !0,
                                width: 165,
                                valign: "middle",
                                text: "1.关注有礼    2.赢稀有角色",
                                leading: 20,
                                height: 88,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#3e67bb",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 10
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 665,
                            x: 223,
                            width: 203,
                            var: "btnfollow",
                            skin: "game/b_btn_green.png",
                            sizeGrid: "33,84,39,75",
                            height: 80
                        },
                        compId: 11,
                        child: [{
                            type: "Text",
                            props: {
                                y: 6.5,
                                x: 25,
                                wordWrap: !0,
                                width: 153,
                                valign: "middle",
                                text: "立即关注",
                                height: 67,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 12
                        }]
                    }, {
                        type: "Text",
                        props: {
                            y: 466,
                            x: 114,
                            wordWrap: !0,
                            width: 432,
                            valign: "middle",
                            text: "Get 5% faster production speed on the same day",
                            height: 49,
                            fontSize: 25,
                            font: "Microsoft YaHei",
                            color: "#357eb7",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 13
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 737,
                        x: 365,
                        width: 553,
                        visible: !1,
                        var: "unlockwindow",
                        skin: "game/normal_frameBG.png",
                        sizeGrid: "88,243,25,287,1",
                        height: 380,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 15,
                    child: [{
                        type: "Image",
                        props: {
                            y: 80,
                            x: 210,
                            var: "iconbg",
                            skin: "game/random_itembg.png"
                        },
                        compId: 16,
                        child: [{
                            type: "Image",
                            props: {
                                y: 24,
                                x: 23,
                                skin: "game/item_ship.png",
                                name: "icon"
                            },
                            compId: 17
                        }]
                    }, {
                        type: "Text",
                        props: {
                            y: 11,
                            x: 33,
                            width: 503,
                            valign: "middle",
                            text: "关注抖音号成功！",
                            name: "title",
                            height: 61,
                            fontSize: 32,
                            font: "Microsoft YaHei",
                            color: "#ffffff",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 18
                    }, {
                        type: "Image",
                        props: {
                            y: 227,
                            x: 63,
                            width: 431,
                            skin: "game/info_messagebg.png",
                            sizeGrid: "14,13,13,15",
                            height: 64
                        },
                        compId: 19,
                        child: [{
                            type: "Text",
                            props: {
                                y: 9,
                                x: 19,
                                width: 392,
                                valign: "middle",
                                text: "恭喜你获得稀有道具",
                                name: "title",
                                height: 51,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#7a7373",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 20
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 301,
                            x: 210,
                            width: 142,
                            var: "btnok",
                            skin: "game/b_btn_green.png",
                            sizeGrid: "25,73,30,63",
                            height: 67
                        },
                        compId: 21,
                        child: [{
                            type: "Text",
                            props: {
                                y: 3,
                                x: 16,
                                width: 110,
                                valign: "middle",
                                text: "OK",
                                name: "title",
                                height: 61,
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 23
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/achiment_UI_bg.png", "game/follow_back.png", "game/follow_light.png", "game/follow_img.png", "game/follow_mesbg.png", "game/b_btn_green.png", "game/normal_frameBG.png", "game/random_itembg.png", "game/item_ship.png", "game/info_messagebg.png"],
                loadList3D: []
            }, e.FollowTTUIUI = u, s("ui.view.FollowTTUIUI", u);
            class f extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(f.uiView);
                }
            }
            f.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/GetRedMoneyUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,16,23,15,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 667,
                        x: 375,
                        width: 584,
                        var: "window",
                        height: 746,
                        centerY: 0,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 5,
                    child: [{
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 0,
                            width: 584,
                            texture: "game/red_pocket_uibg.png",
                            name: "bg",
                            height: 746
                        },
                        compId: 4
                    }, {
                        type: "Sprite",
                        props: {
                            y: 92,
                            x: 219,
                            texture: "game/red_pocket_headbg.png"
                        },
                        compId: 6,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 8,
                                x: 8,
                                texture: "game/icon.png"
                            },
                            compId: 8
                        }, {
                            type: "Text",
                            props: {
                                y: 169,
                                x: -1,
                                width: 159,
                                valign: "middle",
                                text: "木筏求生迷你版",
                                height: 34,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#f6f1f1",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 9
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 10,
                            x: 516,
                            var: "closebtn",
                            texture: "game/red_pocket_vlose.png"
                        },
                        compId: 7
                    }, {
                        type: "Image",
                        props: {
                            y: 309,
                            x: 162,
                            width: 274,
                            skin: "game/red_pocket_10bg.png",
                            sizeGrid: "0,26,0,27"
                        },
                        compId: 10,
                        child: [{
                            type: "Text",
                            props: {
                                y: 13,
                                x: 32.5,
                                width: 209,
                                var: "desc",
                                valign: "middle",
                                text: "最高可获得10元红包",
                                height: 34,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#fcfe78",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 11
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 383,
                            x: 214.5,
                            var: "openbtn",
                            texture: "game/red_pocket_claim_btn.png"
                        },
                        compId: 12
                    }, {
                        type: "Sprite",
                        props: {
                            y: 593,
                            x: 197,
                            texture: "game/red_pocket_get.png"
                        },
                        compId: 13
                    }, {
                        type: "Text",
                        props: {
                            y: 686,
                            x: 212,
                            width: 159,
                            var: "videoinfo",
                            valign: "middle",
                            text: "看视频领取",
                            height: 34,
                            fontSize: 22,
                            font: "Microsoft YaHei",
                            color: "#efd6d6",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 14
                    }]
                }],
                loadList: ["game/black.png", "game/red_pocket_uibg.png", "game/red_pocket_headbg.png", "game/icon.png", "game/red_pocket_vlose.png", "game/red_pocket_10bg.png", "game/red_pocket_claim_btn.png", "game/red_pocket_get.png"],
                loadList3D: []
            }, e.GetRedMoneyUIUI = f, s("ui.view.GetRedMoneyUIUI", f);
            class y extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(y.uiView);
                }
            }
            y.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 4,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/HeroMBGUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 18,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/achiment_UI_bg.png",
                    "game/close.png",
                    "game/hero_charbg.png",
                    "game/taiji_title.png",
                    "game/player_master.png",
                    "game/b_btn_green.png",
                    "game/video_big.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "20,20,20,20,1", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 0, "x": 0, "width": 661, "var": "window", "skin": "game/achiment_UI_bg.png", "sizeGrid": "26,33,40,31,1", "height": 790, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": -1, "x": 594, "var": "btnclose", "skin": "game/close.png" },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 157, "x": 58.5, "skin": "game/hero_charbg.png" },
                                "nodeParent": 4,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,title",
                                "props": { "y": 41, "x": 147, "var": "title", "skin": "game/taiji_title.png" },
                                "nodeParent": 4,
                                "label": "title",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 13,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,imgicon",
                                "props": { "y": 341, "var": "imgicon", "skin": "game/player_master.png", "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "imgicon",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text",
                                "props": { "y": 535, "x": 105, "wordWrap": true, "width": 450, "valign": "middle", "text": "Don't be too proud young man", "runtime": "Laya.Text", "height": 46, "fontSize": 30, "font": "Microsoft YaHei", "color": "#5093bc", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "Text",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 12,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text",
                                "props": { "y": 597, "x": 64, "wordWrap": true, "width": 532, "valign": "middle", "text": "Look at my energetic look", "runtime": "Laya.Text", "height": 51, "fontSize": 30, "font": "Microsoft YaHei", "color": "#5093bc", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "Text",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 17,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnfollow",
                                "props": { "y": 655, "x": 204, "width": 253, "var": "btnfollow", "skin": "game/b_btn_green.png", "sizeGrid": "0,24,0,35", "height": 80 },
                                "nodeParent": 4,
                                "label": "btnfollow",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 10,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btnicon",
                                        "props": { "y": 15, "x": 20, "width": 44, "var": "btnicon", "skin": "game/video_big.png", "height": 44 },
                                        "nodeParent": 10,
                                        "label": "btnicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 15,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,followtext",
                                        "props": { "y": 4, "x": 70, "wordWrap": true, "width": 175, "var": "followtext", "valign": "middle", "text": "Free", "runtime": "Laya.Text", "height": 67, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 10,
                                        "label": "followtext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 11,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.HeroMBGUIUI = y, s("ui.view.HeroMBGUIUI", y);
            class b extends n {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(b.uiView);
                }
            }
            b.uiView = {
                type: "View",
                props: {
                    width: 486,
                    height: 104
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "invite/invite_bannarBG.png",
                        sizeGrid: "15,21,24,21",
                        right: 0,
                        name: "bg",
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Text",
                    props: {
                        y: 26,
                        x: 18,
                        width: 337,
                        var: "txtinvited",
                        valign: "middle",
                        text: "第1位好友       奖励：     999",
                        height: 58,
                        fontSize: 24,
                        font: "Microsoft YaHei",
                        color: "#206eb5",
                        bold: !0,
                        align: "left",
                        runtime: "Laya.Text"
                    },
                    compId: 4,
                    child: [{
                        type: "Image",
                        props: {
                            y: 16.5,
                            x: 230,
                            width: 27,
                            var: "imgresicon",
                            skin: "invite/res_gem_icon.png",
                            height: 23
                        },
                        compId: 5
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 26,
                        x: 364,
                        width: 103,
                        var: "btnget",
                        skin: "game/b_btn_blue.png",
                        height: 54
                    },
                    compId: 6
                }, {
                    type: "Text",
                    props: {
                        y: 29,
                        x: 364,
                        width: 101,
                        var: "textbtn",
                        valign: "middle",
                        text: "Claim",
                        mouseThrough: !0,
                        mouseEnabled: !1,
                        height: 47,
                        fontSize: 22,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        bold: !0,
                        align: "center",
                        runtime: "Laya.Text"
                    },
                    compId: 7
                }],
                loadList: ["invite/invite_bannarBG.png", "invite/res_gem_icon.png", "game/b_btn_blue.png"],
                loadList3D: []
            }, e.InvitedFriendItemUI = b, s("ui.view.InvitedFriendItemUI", b);
            class v extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(v.uiView);
                }
            }
            v.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/InviteUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        var: "bgmask",
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "28,31,27,26",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 19
                }, {
                    type: "Image",
                    props: {
                        y: 198,
                        x: 54,
                        width: 592,
                        var: "window",
                        skin: "invite/achiment_UI_bg.png",
                        sizeGrid: "42,48,51,47",
                        name: "window",
                        height: 938,
                        centerY: 0,
                        centerX: 0
                    },
                    compId: 3,
                    child: [{
                        type: "Image",
                        props: {
                            y: 41,
                            x: 112,
                            skin: "invite/invite_title.png",
                            name: "title"
                        },
                        compId: 5
                    }, {
                        type: "Image",
                        props: {
                            y: 110,
                            x: 57,
                            width: 527,
                            visible: !1,
                            skin: "invite/invite_bannarBG.png",
                            sizeGrid: "26,19,31,21",
                            name: "daybg",
                            height: 249
                        },
                        compId: 7,
                        child: [{
                            type: "Image",
                            props: {
                                y: 6,
                                x: 170,
                                width: 147,
                                skin: "invite/invite_todaybg.png",
                                sizeGrid: "10,16,10,16",
                                name: "daytitlebg",
                                height: 27
                            },
                            compId: 6,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 4,
                                    x: 0,
                                    width: 147,
                                    valign: "middle",
                                    text: "每日邀请好友",
                                    name: "daytitletext",
                                    height: 23,
                                    fontSize: 16,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 8
                            }]
                        }, {
                            type: "List",
                            props: {
                                y: 53,
                                x: 29,
                                width: 469,
                                var: "daylist",
                                spaceX: 75,
                                repeatY: 1,
                                height: 180,
                                elasticEnabled: !0
                            },
                            compId: 11,
                            child: [{
                                type: "View",
                                props: {
                                    runtime: "view/DayInvitePlayer.ts",
                                    renderType: "render"
                                },
                                compId: 12
                            }]
                        }]
                    }, {
                        type: "Text",
                        props: {
                            y: 395,
                            x: 120,
                            width: 400,
                            visible: !1,
                            valign: "middle",
                            text: "邀请好友奖励",
                            name: "invitedfirendtitle",
                            height: 47,
                            fontSize: 36,
                            font: "Microsoft YaHei",
                            color: "#163aaa",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 14
                    }, {
                        type: "List",
                        props: {
                            y: 126,
                            x: 53,
                            width: 486,
                            var: "invitedfirendlist",
                            spaceY: 15,
                            repeatX: 1,
                            height: 752,
                            elasticEnabled: !0
                        },
                        compId: 17,
                        child: [{
                            type: "View",
                            props: {
                                runtime: "view/InvitedFriendItem.ts",
                                renderType: "render"
                            },
                            compId: 18
                        }]
                    }, {
                        type: "Image",
                        props: {
                            var: "btnclose",
                            top: 0,
                            skin: "game/close.png",
                            right: 0,
                            name: "btnclose"
                        },
                        compId: 20
                    }]
                }],
                loadList: ["game/black.png", "invite/achiment_UI_bg.png", "invite/invite_title.png", "invite/invite_bannarBG.png", "invite/invite_todaybg.png", "game/close.png"],
                loadList3D: []
            }, e.InviteUIUI = v, s("ui.view.InviteUIUI", v);
            class I extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(I.uiView);
                }
            }
            I.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 6,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/LoadUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 19,
                "loadList3D": [
                ],
                "loadList": [
                    "load/loadBG.jpg",
                    "load/LOGO_newyear.png",
                    "load/loadingpro.png",
                    "load/loadingpro$bar.png",
                    "load/newyear_light.png",
                    "load/warnning.png",
                    "load/start.jpg"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "load/loadBG.jpg", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 12,
                        "child": [
                        ],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,logoobj",
                        "props": { "x": 50.5, "top": 153, "name": "logoobj" },
                        "nodeParent": 2,
                        "label": "logoobj",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 5,
                        "child": [
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": -128, "x": 18, "texture": "load/Logo.png" },
                                "nodeParent": 5,
                                "label": "Sprite",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 3,
                                "child": [
                                ],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,loadobj",
                        "props": { "x": 134.25, "name": "loadobj", "centerY": 501 },
                        "nodeParent": 2,
                        "label": "loadobj",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 6,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,loadbg",
                                "props": { "y": 96, "x": 0, "skin": "load/loadingpro.png", "name": "loadbg" },
                                "nodeParent": 6,
                                "label": "loadbg",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 8,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 98, "x": 2, "skin": "load/loadingpro$bar.png" },
                                "nodeParent": 6,
                                "label": "Image",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,progress",
                                        "props": { "y": 0, "x": -466, "var": "progress", "skin": "load/loadingpro$bar.png", "renderType": "mask" },
                                        "nodeParent": 9,
                                        "label": "progress",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 15,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,loadText",
                                "props": { "y": 9, "x": 5, "wordWrap": true, "width": 461, "var": "loadText", "valign": "middle", "text": "Ride the wave, the future is promising", "strokeColor": "#cc4b46", "stroke": 5, "runtime": "Laya.Text", "height": 84, "fontSize": 35, "font": "Microsoft YaHei", "color": "#f9f9f9", "bold": true, "align": "center" },
                                "nodeParent": 6,
                                "label": "loadText",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 13,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 14, "x": -43, "skin": "load/newyear_light.png", "left": -43 },
                                        "nodeParent": 13,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 14,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 14, "x": 461, "skin": "load/newyear_light.png", "right": -43 },
                                        "nodeParent": 13,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 16,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,warnningtext",
                        "props": { "visible": false, "name": "warnningtext", "centerX": -34, "bottom": -204 },
                        "nodeParent": 2,
                        "label": "warnningtext",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 11,
                        "child": [
                            {
                                "type": "Text",
                                "searchKey": "Text",
                                "props": { "y": -31, "x": 256, "valign": "middle", "text": "", "runtime": "Laya.Text", "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 11,
                                "label": "Text",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 17,
                                "child": [
                                ],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,start",
                        "props": { "visible": false, "var": "start" },
                        "nodeParent": 2,
                        "label": "start",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 18,
                        "child": [
                        ],
                        "$HIDDEN": false
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }],
                "$HIDDEN": false
            }, e.LoadUIUI = I, s("ui.view.LoadUIUI", I);
            class w extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(w.uiView);
                }
            }
            w.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 17,
                "selecteID": 20,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/LotteryUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 31,
                "loadList3D": [
                ],
                "loadList": [
                    "game/luckySbinBG.jpg",
                    "game/luckySpinTitle.png",
                    "game/luckyPan_2.png",
                    "game/sign_diamond.png",
                    "game/sign_wood.png",
                    "game/luckyPan_1.png",
                    "game/b_btn_green.png",
                    "game/b_btn_yellow.png",
                    "game/box_share.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/luckySbinBG.jpg", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 3,
                        "child": [
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 147, "x": 90, "texture": "game/luckySpinTitle.png" },
                                "nodeParent": 3,
                                "label": "Sprite",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 4,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,reward",
                        "props": { "y": 613, "x": 372, "width": 580, "var": "reward", "rotation": 0, "pivotY": 290, "pivotX": 290, "height": 580 },
                        "nodeParent": 2,
                        "label": "reward",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 28,
                        "child": [
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 0, "x": 0, "width": 580, "texture": "game/luckyPan_2.png", "height": 580 },
                                "nodeParent": 28,
                                "label": "Sprite",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,reward1",
                                "props": { "y": 68, "x": 255.5, "width": 63, "var": "reward1", "valign": "middle", "text": "20", "runtime": "Laya.Text", "height": 42, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 28,
                                "label": "reward1",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,rewardicon1",
                                        "props": { "y": 70, "x": 31, "var": "rewardicon1", "skin": "game/sign_diamond.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 9,
                                        "label": "rewardicon1",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 22,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,reward2",
                                "props": { "y": 138, "x": 452, "width": 104, "var": "reward2", "valign": "middle", "text": "100", "runtime": "Laya.Text", "rotation": 58, "height": 48, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 28,
                                "label": "reward2",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 10,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,rewardicon2",
                                        "props": { "y": 82, "x": 52, "var": "rewardicon2", "skin": "game/sign_wood.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 10,
                                        "label": "rewardicon2",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 23,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,reward3",
                                "props": { "y": 346, "x": 509, "width": 104, "var": "reward3", "valign": "middle", "text": "200", "runtime": "Laya.Text", "rotation": 121, "height": 48, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 28,
                                "label": "reward3",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 11,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,rewardicon3",
                                        "props": { "y": 82, "x": 52, "var": "rewardicon3", "skin": "game/sign_wood.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 11,
                                        "label": "rewardicon3",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 24,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,reward4",
                                "props": { "y": 509, "x": 346, "width": 104, "var": "reward4", "valign": "middle", "text": "50", "runtime": "Laya.Text", "rotation": 181, "height": 48, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 28,
                                "label": "reward4",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 12,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,rewardicon4",
                                        "props": { "y": 82, "x": 52, "var": "rewardicon4", "skin": "game/sign_wood.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 12,
                                        "label": "rewardicon4",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 25,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,reward5",
                                "props": { "y": 435, "x": 124, "width": 104, "var": "reward5", "valign": "middle", "text": "400", "runtime": "Laya.Text", "rotation": -114, "height": 48, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 28,
                                "label": "reward5",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 13,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,rewardicon5",
                                        "props": { "y": 82, "x": 52, "var": "rewardicon5", "skin": "game/sign_wood.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 13,
                                        "label": "rewardicon5",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 26,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,reward6",
                                "props": { "y": 228, "x": 74, "width": 104, "var": "reward6", "valign": "middle", "text": "500", "runtime": "Laya.Text", "rotation": -59, "height": 48, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 28,
                                "label": "reward6",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 14,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,rewardicon6",
                                        "props": { "y": 82, "x": 52, "var": "rewardicon6", "skin": "game/sign_wood.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 14,
                                        "label": "rewardicon6",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 27,
                                        "child": [
                                        ]
                                    }]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,pointer",
                        "props": { "y": 613, "x": 372, "width": 89, "var": "pointer", "skin": "game/luckyPan_1.png", "rotation": 0, "pivotY": 79, "pivotX": 44.5, "height": 126 },
                        "nodeParent": 2,
                        "label": "pointer",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 8,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,getbtn",
                        "props": { "y": 1018, "x": 374, "width": 236, "visible": false, "var": "getbtn", "skin": "game/b_btn_green.png", "sizeGrid": "32,83,31,73,1", "pivotY": 40, "pivotX": 118, "height": 80 },
                        "nodeParent": 2,
                        "label": "getbtn",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 6,
                        "child": [
                            {
                                "type": "Text",
                                "searchKey": "Text",
                                "props": { "y": 16, "x": 42, "width": 152, "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 47, "fontSize": 35, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 6,
                                "label": "Text",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "type": "Script",
                                "switchAble": true,
                                "source": "src/script/ScaleButtonScript.ts",
                                "searchKey": "Script,ScaleButtonScript",
                                "removeAble": true,
                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                "nodeParent": 6,
                                "label": "ScaleButtonScript",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 30,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,lotterybtn",
                        "props": { "y": 1018, "x": 374, "width": 237, "var": "lotterybtn", "skin": "game/b_btn_yellow.png", "sizeGrid": "32,83,31,73,1", "pivotY": 40, "pivotX": 119, "height": 80 },
                        "nodeParent": 2,
                        "label": "lotterybtn",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 17,
                        "child": [
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,lotterytext",
                                "props": { "y": 16, "x": 34, "width": 194, "var": "lotterytext", "valign": "middle", "text": "Free", "runtime": "Laya.Text", "height": 47, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 17,
                                "label": "lotterytext",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 18,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,adicon",
                                "props": { "y": 20, "x": 14, "var": "adicon", "skin": "game/video2.png" },
                                "nodeParent": 17,
                                "label": "adicon",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 20,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Script",
                                "switchAble": true,
                                "source": "src/script/ScaleButtonScript.ts",
                                "searchKey": "Script,ScaleButtonScript",
                                "removeAble": true,
                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                "nodeParent": 17,
                                "label": "ScaleButtonScript",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 29,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Text",
                        "searchKey": "Text,backbtn",
                        "props": { "y": 1082, "x": 339, "var": "backbtn", "valign": "middle", "text": "Back", "runtime": "Laya.Text", "fontSize": 36, "font": "Microsoft YaHei", "color": "#e0d2d2", "bold": true, "align": "center" },
                        "nodeParent": 2,
                        "label": "backbtn",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 21,
                        "child": [
                        ]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.LotteryUIUI = w, s("ui.view.LotteryUIUI", w);
            class _ extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(_.uiView);
                }
            }
            _.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 4,
                "selecteID": 5,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/MainResultUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 90,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/achiment_UI_bg.png",
                    "game/rnadom_reward_title.png",
                    "game/close.png",
                    "game/buildBannar_bg.png",
                    "game/random_itembg.png",
                    "game/reward_chest.png",
                    "game/res_gem_icon.png",
                    "game/b_btn_yellow.png",
                    "game/video_big.png",
                    "game/reward_wood.png",
                    "game/res_wood_icon.png",
                    "game/reward_speedupx2.png",
                    "game/res_speedup.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bgmask",
                        "props": { "y": 0, "x": 0, "top": 0, "skin": "game/black.png", "sizeGrid": "20,20,20,20,1", "right": 0, "name": "bgmask", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bgmask",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 685, "var": "window", "skin": "game/achiment_UI_bg.png", "sizeGrid": "45,49,52,58,1", "height": 874, "centerY": -30, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,title",
                                "props": { "y": 39, "x": 140, "skin": "game/rnadom_reward_title.png", "name": "title" },
                                "nodeParent": 4,
                                "label": "title",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 0, "x": 620, "var": "btnclose", "skin": "game/close.png" },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,demobj",
                                "props": { "y": 382, "width": 581, "var": "demobj", "skin": "game/buildBannar_bg.png", "sizeGrid": "31,21,43,18", "height": 207, "centerX": 1 },
                                "nodeParent": 4,
                                "label": "demobj",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 7,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,demiconbg",
                                        "props": { "y": 36, "x": 22, "width": 133, "skin": "game/random_itembg.png", "name": "demiconbg", "height": 134 },
                                        "nodeParent": 7,
                                        "label": "demiconbg",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 8,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 23, "x": 20, "skin": "game/reward_chest.png" },
                                                "nodeParent": 8,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 9,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,demicon",
                                        "props": { "y": 63, "x": 247.5, "skin": "game/res_gem_icon.png", "name": "demicon" },
                                        "nodeParent": 7,
                                        "label": "demicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 10,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,demresult",
                                        "props": { "y": 87, "x": 223, "width": 92, "var": "demresult", "valign": "middle", "text": "999", "runtime": "Laya.Text", "height": 72, "fontSize": 30, "font": "Microsoft YaHei", "color": "#000000", "bold": true, "align": "center" },
                                        "nodeParent": 7,
                                        "label": "demresult",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 11,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btngetdem",
                                        "props": { "y": 24, "x": 390, "width": 181, "var": "btngetdem", "skin": "game/b_btn_yellow.png", "sizeGrid": "26,79,51,77", "height": 159 },
                                        "nodeParent": 7,
                                        "label": "btngetdem",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 12,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,gemadicon",
                                                "props": { "y": 30, "x": 60, "width": 60, "var": "gemadicon", "skin": "game/video_big.png", "height": 60 },
                                                "nodeParent": 12,
                                                "label": "gemadicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 88,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,gembtntext",
                                                "props": { "y": 87, "x": 0, "width": 180, "var": "gembtntext", "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 55, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 12,
                                                "label": "gembtntext",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 89,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,woodobj",
                                "props": { "y": 619, "width": 581, "var": "woodobj", "skin": "game/buildBannar_bg.png", "sizeGrid": "31,21,43,18", "height": 207, "centerX": 0 },
                                "nodeParent": 4,
                                "label": "woodobj",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 14,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,woodiconbg",
                                        "props": { "y": 36, "x": 22, "skin": "game/random_itembg.png", "name": "woodiconbg" },
                                        "nodeParent": 14,
                                        "label": "woodiconbg",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 15,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 22, "x": 17, "skin": "game/reward_wood.png" },
                                                "nodeParent": 15,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 16,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,woodicon",
                                        "props": { "y": 64, "x": 243.5, "skin": "game/res_wood_icon.png", "name": "woodicon" },
                                        "nodeParent": 14,
                                        "label": "woodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 17,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,woodresult",
                                        "props": { "y": 98, "x": 216, "width": 98, "var": "woodresult", "valign": "middle", "text": "999", "runtime": "Laya.Text", "height": 72, "fontSize": 30, "font": "Microsoft YaHei", "color": "#000000", "bold": true, "align": "center" },
                                        "nodeParent": 14,
                                        "label": "woodresult",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 18,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btngetwood",
                                        "props": { "y": 24, "x": 390, "width": 180, "var": "btngetwood", "skin": "game/b_btn_yellow.png", "sizeGrid": "26,79,51,77", "height": 159 },
                                        "nodeParent": 14,
                                        "label": "btngetwood",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 19,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,woodadicon",
                                                "props": { "y": 30, "x": 60, "width": 60, "var": "woodadicon", "skin": "game/video_big.png", "height": 60 },
                                                "nodeParent": 19,
                                                "label": "woodadicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 86,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,woodbtntext",
                                                "props": { "y": 87, "x": 0, "width": 180, "var": "woodbtntext", "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 55, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 19,
                                                "label": "woodbtntext",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 87,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,speedobj",
                                "props": { "y": 147, "width": 581, "var": "speedobj", "skin": "game/buildBannar_bg.png", "sizeGrid": "31,21,43,18", "height": 207, "centerX": 0 },
                                "nodeParent": 4,
                                "label": "speedobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 74,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,speediconbg",
                                        "props": { "y": 36, "x": 22, "skin": "game/random_itembg.png", "name": "speediconbg" },
                                        "nodeParent": 74,
                                        "label": "speediconbg",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 75,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,speedicon",
                                                "props": { "var": "speedicon", "skin": "game/reward_speedupx2.png", "centerY": 0, "centerX": 0 },
                                                "nodeParent": 75,
                                                "label": "speedicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 76,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,woodicon",
                                        "props": { "y": 67, "x": 256.5, "skin": "game/res_speedup.png", "name": "woodicon" },
                                        "nodeParent": 74,
                                        "label": "woodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 77,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,speedtext",
                                        "props": { "y": 104, "x": 155, "wordWrap": true, "width": 236, "var": "speedtext", "valign": "middle", "text": "5X accelerated production", "runtime": "Laya.Text", "height": 99, "fontSize": 30, "font": "Microsoft YaHei", "color": "#000000", "bold": true, "align": "center" },
                                        "nodeParent": 74,
                                        "label": "speedtext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 78,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnspeed",
                                        "props": { "y": 24, "x": 390, "width": 180, "var": "btnspeed", "skin": "game/b_btn_yellow.png", "sizeGrid": "26,79,51,77", "height": 159 },
                                        "nodeParent": 74,
                                        "label": "btnspeed",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 79,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,speedadicon",
                                                "props": { "y": 30, "x": 60, "width": 60, "var": "speedadicon", "skin": "game/video_big.png", "height": 60 },
                                                "nodeParent": 79,
                                                "label": "speedadicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 80,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,speedbtntext",
                                                "props": { "y": 87, "x": 0, "width": 180, "var": "speedbtntext", "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 55, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 79,
                                                "label": "speedbtntext",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 81,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.MainResultUIUI = _, s("ui.view.MainResultUIUI", _);
            class C extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(C.uiView);
                }
            }
            C.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 180,
                "selecteID": 118,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/MainUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 339,
                "loadList3D": [
                ],
                "loadList": [
                    "game/res_num_bg.png",
                    "game/res_icon_bg.png",
                    "game/res_wood_icon.png",
                    "game/res_gem_icon.png",
                    "game/gameTime_bg.png",
                    "game/gameTime_icon.png",
                    "game/Weathe_bg.png",
                    "game/Weather.png",
                    "game/Weathe_mask.png",
                    "game/main_map.png",
                    "game/tipsBG.png",
                    "game/num0_9.png",
                    "game/main_achievement.png",
                    "game/main_red_packet_7day.png",
                    "game/main_inviteFriend.png",
                    "game/main_sign.png",
                    "game/wallet_numbg.png",
                    "game/wallet_btn.png",
                    "game/weatherTime_bg.png",
                    "game/weather_Time_now.png",
                    "game/main_moregame.png",
                    "game/character_tips.png",
                    "game/ad_xxx.png",
                    "game/ad_name.png",
                    "game/record_light.png",
                    "game/main_recording.png",
                    "game/adchest_tipsbg.png",
                    "game/main_follow.png",
                    "game/main_qq_ship_share.png",
                    "game/main_speedup_video.png",
                    "game/main_maboguo.png",
                    "game/main_hero_light.png",
                    "game/player_master.png",
                    "game/main_pet.png",
                    "game/share.png",
                    "game/main_shop.png",
                    "game/main_video_resource.png",
                    "game/main_video_timeBG.png",
                    "game/main_building.png",
                    "game/main_skin.png",
                    "game/main_storyCharter.png",
                    "game/main_speedup.png",
                    "game/main_speedup_time.png",
                    "game/main_desktop.png",
                    "game/main_freediamond.png",
                    "game/main_freeres.png",
                    "game/speedup_share.png",
                    "game/timefree.png",
                    "game/speed_share.png",
                    "game/main_share.png",
                    "game/main_collect.png",
                    "game/main_story_in.png",
                    "game/main_rank.png",
                    "game/simpleui_1.png",
                    "game/main_hero_icon.png",
                    "game/offline_time.png",
                    "game/main_2021.png",
                    "game/main_2021_tips.png",
                    "game/main_christmas_icon.png",
                    "game/night_tips.png",
                    "game/sail_btn.png",
                    "game/taskName_BG.png",
                    "game/task_tips.png",
                    "game/taskbar2.png",
                    "game/taskbar1.png",
                    "game/task_icon.png",
                    "game/task_doneBG.png",
                    "game/task_done.png",
                    "game/oppo_moregame.png",
                    "game/ad_bar2.png",
                    "game/ad_bar1.png",
                    "game/ad_video.png",
                    "game/ad_spin.png",
                    "game/ad_time.png",
                    "game/ad_sleep.png",
                    "animate/guide_hand_Slide.ani"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,selectbtn",
                        "props": { "var": "selectbtn", "top": 0, "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "selectbtn",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 53,
                        "child": [
                        ],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,resobj",
                        "props": { "y": 67, "x": 267, "var": "resobj" },
                        "nodeParent": 2,
                        "label": "resobj",
                        "isOpen": false,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 164,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 164,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 169,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 164,
                                "label": "Sprite",
                                "isOpen": false,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 170,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": 5, "x": 9, "var": "moodicon", "skin": "game/res_wood_icon.png" },
                                        "nodeParent": 170,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 171,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,resnum",
                                "props": { "y": 12, "x": 62, "width": 133, "var": "resnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 33, "font": "Arial", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 164,
                                "label": "resnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 172,
                                "child": [
                                ],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,diamondobj",
                        "props": { "y": 67, "x": 39, "var": "diamondobj" },
                        "nodeParent": 2,
                        "label": "diamondobj",
                        "isOpen": false,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 163,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 163,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 165,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 163,
                                "label": "Sprite",
                                "isOpen": false,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 166,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 12, "x": 9, "texture": "game/res_gem_icon.png" },
                                        "nodeParent": 166,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 167,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,diamondnum",
                                "props": { "y": 13, "x": 62, "width": 133, "var": "diamondnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 33, "font": "Arial", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 163,
                                "label": "diamondnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 168,
                                "child": [
                                ],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,uiview",
                        "props": { "var": "uiview", "top": 0, "right": 0, "mouseThrough": true, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "uiview",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 180,
                        "child": [
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,topbtn",
                                "props": { "y": 130, "x": 34, "width": 427, "var": "topbtn", "mouseThrough": true, "height": 528 },
                                "nodeParent": 180,
                                "label": "topbtn",
                                "isOpen": false,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 108,
                                "child": [
                                    {
                                        "type": "Box",
                                        "searchKey": "Box,gametimeobj",
                                        "props": { "y": 0, "x": 0, "var": "gametimeobj" },
                                        "nodeParent": 108,
                                        "label": "gametimeobj",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 186,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "width": 227, "skin": "game/gameTime_bg.png", "sizeGrid": "9,16,11,13,1" },
                                                "nodeParent": 186,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 185,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 3, "x": 10, "texture": "game/gameTime_icon.png" },
                                                "nodeParent": 186,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 187,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,gametime",
                                                "props": { "y": 3, "x": 32, "width": 189, "var": "gametime", "valign": "middle", "text": "Play Time：01:00:00", "runtime": "Laya.Text", "height": 24, "fontSize": 17, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                "nodeParent": 186,
                                                "label": "gametime",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 188,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,daynightobj",
                                        "props": { "y": 48, "x": 0, "var": "daynightobj", "skin": "game/Weathe_bg.png" },
                                        "nodeParent": 108,
                                        "label": "daynightobj",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 111,
                                        "child": [
                                            {
                                                "type": "Box",
                                                "searchKey": "Box,daynight",
                                                "props": { "y": 0, "x": 0, "top": 0, "right": 0, "name": "daynight", "left": 0, "bottom": 0 },
                                                "nodeParent": 111,
                                                "label": "daynight",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 114,
                                                "child": [
                                                    {
                                                        "type": "Image",
                                                        "searchKey": "Image,daycycle",
                                                        "props": { "y": 103, "x": 53.5, "width": 290, "var": "daycycle", "skin": "game/Weather.png", "rotation": 0, "height": 290, "anchorY": 0.5, "anchorX": 0.5 },
                                                        "nodeParent": 114,
                                                        "label": "daycycle",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 115,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    },
                                                    {
                                                        "type": "Image",
                                                        "searchKey": "Image,mask",
                                                        "props": { "y": 5, "x": 5, "skin": "game/Weathe_mask.png", "renderType": "mask", "name": "mask" },
                                                        "nodeParent": 114,
                                                        "label": "mask",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 116,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txtdaytime",
                                                "props": { "y": 75, "x": 4, "width": 98, "var": "txtdaytime", "valign": "middle", "text": "99:99", "strokeColor": "#565f64", "stroke": 4, "runtime": "Laya.Text", "height": 29, "fontSize": 22, "font": "Arial", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 111,
                                                "label": "txtdaytime",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 113,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,mapbtn",
                                        "props": { "y": 100, "x": 159, "width": 75, "var": "mapbtn", "skin": "game/main_map.png", "height": 105, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "mapbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 74,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 81, "x": 8, "width": 59, "valign": "middle", "text": "Map", "runtime": "Laya.Text", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 74,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 75,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite,maptipobj",
                                                "props": { "y": -23, "x": -233, "visible": false, "var": "maptipobj" },
                                                "nodeParent": 74,
                                                "label": "maptipobj",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 79,
                                                "child": [
                                                    {
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,mapnum",
                                                        "props": { "y": 10, "x": 2, "width": 28, "var": "mapnum", "value": "1", "valign": "middle", "text": "2", "spaceX": -13, "skin": "game/num0_9.png", "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 79,
                                                        "label": "mapnum",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 80,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 74,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 97,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,achievebtn",
                                        "props": { "y": 100, "x": 257, "width": 75, "var": "achievebtn", "skin": "game/main_achievement.png", "height": 105, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "achievebtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 76,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 81, "x": -2, "width": 80, "valign": "middle", "text": "Achievement", "runtime": "Laya.Text", "height": 24, "fontSize": 11, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 76,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 77,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": -9, "x": -354, "visible": false },
                                                "nodeParent": 76,
                                                "label": "Sprite",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 81,
                                                "child": [
                                                    {
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,achievenum",
                                                        "props": { "y": 10, "x": 3, "width": 28, "var": "achievenum", "value": "2", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "scaleX": 0.9, "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 81,
                                                        "label": "achievenum",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 82,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 76,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 96,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,redbtn",
                                        "props": { "y": 101, "x": -211.5, "visible": false, "var": "redbtn", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "redbtn",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 252,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btninvitefirend",
                                        "props": { "y": 233, "x": -167, "width": 75, "visible": false, "var": "btninvitefirend", "height": 105, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "btninvitefirend",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 191,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,signbtn",
                                        "props": { "y": 233, "x": 38, "width": 75, "visible": false, "var": "signbtn", "skin": "game/main_sign.png", "pivotY": 53, "pivotX": 38, "height": 105 },
                                        "nodeParent": 108,
                                        "label": "signbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 83,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 80, "x": 8, "width": 59, "valign": "middle", "text": "Sign In", "runtime": "Laya.Text", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 83,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 84,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite,signdot",
                                                "props": { "y": -9, "x": -131, "var": "signdot" },
                                                "nodeParent": 83,
                                                "label": "signdot",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 85,
                                                "child": [
                                                    {
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip",
                                                        "props": { "y": 9, "x": 1, "width": 28, "value": "1", "valign": "middle", "text": "2", "spaceX": -13, "skin": "game/num0_9.png", "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 85,
                                                        "label": "FontClip",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 86,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 83,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 95,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Box",
                                        "searchKey": "Box,carouselobj",
                                        "props": { "y": 180, "x": 0, "var": "carouselobj" },
                                        "nodeParent": 108,
                                        "label": "carouselobj",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 192,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Box",
                                        "searchKey": "Box,withdrawbtn",
                                        "props": { "y": 169, "x": 0, "visible": false, "var": "withdrawbtn" },
                                        "nodeParent": 108,
                                        "label": "withdrawbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 260,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": -27, "x": -474, "width": 306, "visible": false, "sizeGrid": "0,37,0,39,1" },
                                                "nodeParent": 260,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 261,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,balance",
                                                "props": { "y": -22.5, "x": -449, "width": 170, "visible": false, "var": "balance", "valign": "middle", "runtime": "Laya.Text", "height": 45, "fontSize": 24, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "left" },
                                                "nodeParent": 260,
                                                "label": "balance",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 262,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": -23, "x": -284, "visible": false },
                                                "nodeParent": 260,
                                                "label": "Sprite",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 263,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 3, "x": 17, "width": 76, "valign": "middle", "runtime": "Laya.Text", "height": 45, "fontSize": 24, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                        "nodeParent": 263,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 264,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,daytimeobj",
                                        "props": { "y": 27, "x": 116, "visible": false, "var": "daytimeobj", "skin": "game/weatherTime_bg.png" },
                                        "nodeParent": 108,
                                        "label": "daytimeobj",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 131,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,currtimemask",
                                                "props": { "y": 114, "x": 9.5, "width": 300, "var": "currtimemask", "skin": "game/weather_Time_now.png", "sizeGrid": "12,12,10,18", "height": 33 },
                                                "nodeParent": 131,
                                                "label": "currtimemask",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 132,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 10, "x": 15, "width": 87, "valign": "middle", "text": "Morning", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                "nodeParent": 131,
                                                "label": "Text",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 133,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 0, "x": 99, "width": 196, "valign": "middle", "text": "05:00 - 11:00", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                        "nodeParent": 133,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 135,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 46, "x": 5, "width": 87, "valign": "middle", "text": "Afternoon", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                "nodeParent": 131,
                                                "label": "Text",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 136,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 0, "x": 109, "width": 196, "valign": "middle", "text": "11:00 - 17:00", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                        "nodeParent": 136,
                                                        "label": "Text",
                                                        "isOpen": true,
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 137,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 81, "x": 15, "width": 87, "valign": "middle", "text": "Evening", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                "nodeParent": 131,
                                                "label": "Text",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 138,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 0, "x": 99, "width": 196, "valign": "middle", "text": "17:00 - 23:00", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                        "nodeParent": 138,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 139,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 117, "x": 15, "width": 87, "valign": "middle", "text": "Night", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                "nodeParent": 131,
                                                "label": "Text",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 140,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 0, "x": 99, "width": 196, "valign": "middle", "text": "23:00 - 05:00", "runtime": "Laya.Text", "height": 29, "fontSize": 20, "font": "Microsoft YaHei", "color": "#1ab0c5", "bold": true, "align": "center" },
                                                        "nodeParent": 140,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 141,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,moregame",
                                        "props": { "y": 487, "visible": false, "var": "moregame", "left": -532 },
                                        "nodeParent": 108,
                                        "label": "moregame",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 216,
                                        "child": [
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": -11, "x": 116, "texture": "game/character_tips.png" },
                                                "nodeParent": 216,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 217,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,nativeicon",
                                        "props": { "y": 356, "width": 100, "visible": false, "var": "nativeicon", "left": -348, "height": 100 },
                                        "nodeParent": 108,
                                        "label": "nativeicon",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 222,
                                        "child": [
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite,nativeclosebtn",
                                                "props": { "y": 0, "x": 109, "var": "nativeclosebtn", "texture": "game/ad_xxx.png" },
                                                "nodeParent": 222,
                                                "label": "nativeclosebtn",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 224,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 0, "x": 38, "texture": "game/ad_name.png" },
                                                "nodeParent": 222,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 226,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 105, "x": 12, "width": 76, "valign": "middle", "runtime": "Laya.Text", "height": 24, "fontSize": 17, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                "nodeParent": 222,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 225,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,recordlight",
                                        "props": { "y": 394, "x": 40, "var": "recordlight", "skin": "game/record_light.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "recordlight",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 259,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btnrecord",
                                        "props": { "y": 394, "x": -255.5, "width": 88, "visible": false, "var": "btnrecord", "height": 116 },
                                        "nodeParent": 108,
                                        "label": "btnrecord",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 244,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,recordtimeobj",
                                                "props": { "y": 116, "x": 0, "width": 88, "var": "recordtimeobj", "sizeGrid": "0,16,0,20", "height": 25 },
                                                "nodeParent": 244,
                                                "label": "recordtimeobj",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 251,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text,txtrecordtime",
                                                        "props": { "y": 2, "x": 0, "width": 88, "var": "txtrecordtime", "valign": "middle", "runtime": "Laya.Text", "height": 25, "fontSize": 22, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 251,
                                                        "label": "txtrecordtime",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 249,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,followlight",
                                        "props": { "y": 243.5, "x": 53.5, "visible": false, "var": "followlight", "skin": "game/record_light.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "followlight",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 295,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btnFollow_tt",
                                        "props": { "y": 239.5, "x": -192, "visible": false, "var": "btnFollow_tt", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "btnFollow_tt",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 288,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 99, "x": 5, "width": 100, "valign": "middle", "runtime": "Laya.Text", "height": 24, "fontSize": 18, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 288,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 291,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btnFollow_qq",
                                        "props": { "y": 298, "x": 160, "width": 110, "visible": false, "var": "btnFollow_qq", "skin": "game/main_qq_ship_share.png", "height": 127, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "btnFollow_qq",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 296,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 99, "x": 30, "width": 75, "valign": "middle", "text": "Free", "runtime": "Laya.Text", "height": 24, "fontSize": 18, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 296,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 297,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 97, "x": 5, "width": 26, "texture": "game/main_speedup_video.png", "height": 21 },
                                                "nodeParent": 296,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 299,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Box",
                                        "searchKey": "Box,btnHeroMBG",
                                        "props": { "y": 298, "x": 283, "width": 110, "visible": false, "var": "btnHeroMBG", "styleSkin": "game/main_maboguo.png", "height": 127, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "btnHeroMBG",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 308,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,MBGlight",
                                                "props": { "y": 63, "x": 55, "var": "MBGlight", "skin": "game/main_hero_light.png", "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 308,
                                                "label": "MBGlight",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 311,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "top": -12, "skin": "game/main_maboguo.png", "right": 0, "left": 0, "bottom": 0 },
                                                "nodeParent": 308,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 312,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 99, "x": 29, "width": 75, "valign": "middle", "text": "Free", "runtime": "Laya.Text", "height": 24, "fontSize": 18, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 308,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 309,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 99, "x": 7, "visible": false, "texture": "game/player_master.png" },
                                                "nodeParent": 308,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 310,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Box",
                                        "searchKey": "Box,freepetbtn",
                                        "props": { "y": 296.5, "x": 304, "width": 142, "visible": false, "var": "freepetbtn", "pivotY": 64, "pivotX": 71, "height": 127 },
                                        "nodeParent": 108,
                                        "label": "freepetbtn",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 303,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,petlight",
                                                "props": { "y": 63, "x": 73, "var": "petlight", "skin": "game/main_hero_light.png", "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 303,
                                                "label": "petlight",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 304,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,petimg",
                                                "props": { "y": 63, "x": 74, "width": 146, "var": "petimg", "skin": "game/main_pet.png", "pivotY": 63, "pivotX": 73, "height": 126 },
                                                "nodeParent": 303,
                                                "label": "petimg",
                                                "isOpen": true,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 300,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 102, "x": 44, "width": 75, "valign": "middle", "text": "Free", "runtime": "Laya.Text", "height": 24, "fontSize": 18, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                        "nodeParent": 300,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 301,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    },
                                                    {
                                                        "type": "Image",
                                                        "searchKey": "Image,peticon",
                                                        "props": { "y": 100, "x": 9, "width": 27, "visible": false, "var": "peticon", "skin": "game/share.png", "height": 24 },
                                                        "nodeParent": 300,
                                                        "label": "peticon",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 327,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": true
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,bottomobj",
                                "props": { "x": 0, "var": "bottomobj", "right": 0, "mouseThrough": true, "left": 0, "height": 140, "bottom": 0 },
                                "nodeParent": 180,
                                "label": "bottomobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 87,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,shopbtn",
                                        "props": { "y": -87, "x": 221, "width": 110, "var": "shopbtn", "skin": "game/main_shop.png", "height": 127, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "shopbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 88,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 100, "x": 16, "width": 81, "valign": "middle", "text": "Stall", "runtime": "Laya.Text", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#905b83", "bold": true, "align": "center" },
                                                "nodeParent": 88,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 89,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 88,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 94,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,doublebtn",
                                        "props": { "y": 64, "x": 415, "width": 110, "var": "doublebtn", "skin": "game/main_video_resource.png", "pivotY": 64, "pivotX": 55, "height": 127 },
                                        "nodeParent": 87,
                                        "label": "doublebtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 90,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 100, "x": 0, "width": 110, "valign": "middle", "text": "Resources", "runtime": "Laya.Text", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#905b83", "bold": true, "align": "center" },
                                                "nodeParent": 90,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 91,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 90,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 93,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,restimeobj",
                                                "props": { "x": 0, "width": 110, "var": "restimeobj", "top": -31, "skin": "game/main_video_timeBG.png", "height": 36 },
                                                "nodeParent": 90,
                                                "label": "restimeobj",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 189,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text,doublerestime",
                                                        "props": { "y": 2, "x": 27, "width": 80, "var": "doublerestime", "valign": "middle", "text": "99m15S", "runtime": "Laya.Text", "height": 34, "fontSize": 15, "font": "Arial", "color": "#ffffff", "bold": true, "align": "center" },
                                                        "nodeParent": 189,
                                                        "label": "doublerestime",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 190,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,buildbtn",
                                        "props": { "y": 64, "x": 545, "width": 110, "var": "buildbtn", "skin": "game/main_building.png", "pivotY": 64, "pivotX": 55, "height": 127 },
                                        "nodeParent": 87,
                                        "label": "buildbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 59,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 100, "x": 14, "width": 81, "valign": "middle", "text": "Build", "runtime": "Laya.Text", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 59,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 92,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite,buildtips",
                                                "props": { "y": 317, "x": -27.4, "visible": false, "var": "buildtips" },
                                                "nodeParent": 59,
                                                "label": "buildtips",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 60,
                                                "child": [
                                                    {
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,buildnum",
                                                        "props": { "y": 10, "x": 2, "width": 28, "var": "buildnum", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "scaleX": 0.9, "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 60,
                                                        "label": "buildnum",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 61,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 59,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 62,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,skinbtn",
                                        "props": { "y": 64, "width": 110, "var": "skinbtn", "skin": "game/main_skin.png", "right": 20, "pivotY": 64, "pivotX": 55, "height": 127 },
                                        "nodeParent": 87,
                                        "label": "skinbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 98,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 100, "x": -1, "width": 111, "valign": "middle", "text": "Characters", "runtime": "Laya.Text", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 98,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 99,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 284, "x": -28, "visible": false },
                                                "nodeParent": 98,
                                                "label": "Sprite",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 101,
                                                "child": [
                                                    {
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,skinnum",
                                                        "props": { "y": 9, "x": 2, "width": 28, "var": "skinnum", "value": "1", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "scaleX": 0.9, "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 101,
                                                        "label": "skinnum",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 102,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 98,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 100,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,storybtn",
                                        "props": { "y": -103.5, "width": 100, "var": "storybtn", "skin": "game/main_storyCharter.png", "right": 25, "pivotY": 64, "pivotX": 50, "height": 127 },
                                        "nodeParent": 87,
                                        "label": "storybtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 103,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 99, "x": 0, "width": 100, "valign": "middle", "text": "Chapters", "runtime": "Laya.Text", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 103,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 104,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 88, "x": 275, "visible": false },
                                                "nodeParent": 103,
                                                "label": "Sprite",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 105,
                                                "child": [
                                                    {
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip,storynum",
                                                        "props": { "y": 8, "x": -1, "width": 28, "var": "storynum", "value": "2", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "scaleX": 0.9, "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 105,
                                                        "label": "storynum",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 106,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 103,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 107,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,vediospeedbtn",
                                        "props": { "y": -103.5, "x": 545, "var": "vediospeedbtn", "skin": "game/main_speedup.png", "height": 132, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "vediospeedbtn",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 143,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 143,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 157,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,speedicon",
                                                "props": { "y": 80, "x": 5.5, "var": "speedicon", "skin": "game/main_speedup_video.png" },
                                                "nodeParent": 143,
                                                "label": "speedicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 193,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,speedtext",
                                                "props": { "y": 99, "x": -1, "wordWrap": true, "width": 111, "var": "speedtext", "valign": "middle", "text": "Acceleration", "runtime": "Laya.Text", "height": 28, "fontSize": 15, "font": "Microsoft YaHei", "color": "#3e44c6", "bold": true, "align": "center" },
                                                "nodeParent": 143,
                                                "label": "speedtext",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 194,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,speedtimeobj",
                                                "props": { "y": -31, "x": 0, "var": "speedtimeobj", "skin": "game/main_speedup_time.png" },
                                                "nodeParent": 143,
                                                "label": "speedtimeobj",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 195,
                                                "child": [
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text,speedtimetext",
                                                        "props": { "y": 5, "x": 25, "width": 81, "var": "speedtimetext", "valign": "middle", "text": "99:99", "runtime": "Laya.Text", "height": 31, "fontSize": 16, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                        "nodeParent": 195,
                                                        "label": "speedtimetext",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 196,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,deskbtn",
                                        "props": { "y": -164.5, "x": 1081, "width": 100, "visible": false, "var": "deskbtn", "pivotY": 64, "pivotX": 50, "height": 127 },
                                        "nodeParent": 87,
                                        "label": "deskbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 211,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 99, "x": -2, "width": 100, "valign": "middle", "runtime": "Laya.Text", "height": 24, "fontSize": 18, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 211,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 212,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": -8, "x": -8, "visible": false, "texture": "game/tipsBG.png" },
                                                "nodeParent": 211,
                                                "label": "Sprite",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 213,
                                                "child": [
                                                    {
                                                        "type": "FontClip",
                                                        "searchKey": "FontClip",
                                                        "props": { "y": 8, "x": -1, "width": 28, "value": "2", "valign": "middle", "text": "2", "spaceX": -15, "skin": "game/num0_9.png", "sheet": "0123456789", "scaleX": 0.9, "height": 26, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                        "nodeParent": 213,
                                                        "label": "FontClip",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 214,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$LOCKED": true,
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnfreediam",
                                        "props": { "y": -272, "x": 675, "var": "btnfreediam", "skin": "game/main_freediamond.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnfreediam",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 234,
                                        "child": [
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 76, "x": 85, "visible": false, "texture": "game/main_speedup_video.png" },
                                                "nodeParent": 234,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 265,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 40, "x": 118, "wordWrap": true, "width": 121, "visible": false, "valign": "middle", "text": "Free", "runtime": "Laya.Text", "leading": 15, "height": 34, "fontSize": 26, "font": "Microsoft YaHei", "color": "#3e44c6", "bold": true, "align": "center" },
                                                "nodeParent": 234,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 266,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnFreeRes",
                                        "props": { "y": -411, "x": 677, "visible": false, "var": "btnFreeRes", "skin": "game/main_freeres.png", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnFreeRes",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 323,
                                        "child": [
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 76, "x": 85, "visible": false, "texture": "game/main_speedup_video.png" },
                                                "nodeParent": 323,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 324,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txtFreeRes",
                                                "props": { "y": 98, "x": 27, "wordWrap": true, "width": 78, "var": "txtFreeRes", "valign": "middle", "text": "30K", "runtime": "Laya.Text", "height": 23, "fontSize": 18, "font": "Microsoft YaHei", "color": "#3e44c6", "bold": true, "align": "center" },
                                                "nodeParent": 323,
                                                "label": "txtFreeRes",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 325,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnspeed_big",
                                        "props": { "y": -40, "x": 603.5, "var": "btnspeed_big", "skin": "game/speedup_share.png", "anchorY": 1, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnspeed_big",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 245,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,btnspeed_textcontent",
                                                "props": { "y": 8, "x": 127, "wordWrap": true, "width": 117, "var": "btnspeed_textcontent", "valign": "middle", "text": "99:99 Being accelerated", "height": 99, "fontSize": 20, "font": "Microsoft YaHei", "color": "#3e44c6", "bold": true, "align": "center" },
                                                "nodeParent": 245,
                                                "label": "btnspeed_textcontent",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 246,
                                                "child": [
                                                    {
                                                        "type": "Image",
                                                        "searchKey": "Image,btnspeed_timeicon",
                                                        "props": { "y": 14.5, "x": -8, "width": 25, "var": "btnspeed_timeicon", "skin": "game/timefree.png", "height": 25 },
                                                        "nodeParent": 246,
                                                        "label": "btnspeed_timeicon",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 248,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,btnspeed_tpyeicon",
                                                "props": { "y": 66, "x": 75, "width": 35, "visible": true, "var": "btnspeed_tpyeicon", "skin": "game/main_speedup_video.png", "height": 29 },
                                                "nodeParent": 245,
                                                "label": "btnspeed_tpyeicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 247,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": true
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnShare",
                                        "props": { "y": -416.5, "x": -323, "visible": false, "var": "btnShare", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnShare",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 268,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 99, "x": 5, "width": 100, "valign": "middle", "runtime": "Laya.Text", "height": 24, "fontSize": 18, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 268,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 270,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btncollect",
                                        "props": { "y": -208.5, "x": -454, "visible": false, "var": "btncollect", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btncollect",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 269,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 99, "x": 5, "width": 100, "valign": "middle", "runtime": "Laya.Text", "height": 24, "fontSize": 18, "font": "Microsoft YaHei", "color": "#3e67bb", "bold": true, "align": "center" },
                                                "nodeParent": 269,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 271,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Box",
                                        "searchKey": "Box,btnstory",
                                        "props": { "y": -411, "x": 675, "width": 88, "visible": false, "var": "btnstory", "height": 116, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnstory",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 326,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,stroylight",
                                                "props": { "y": 58, "x": 44, "var": "stroylight", "skin": "game/record_light.png", "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 326,
                                                "label": "stroylight",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 274,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,stroyimg",
                                                "props": { "y": 0, "x": 0, "skin": "game/main_story_in.png", "name": "stroyimg" },
                                                "nodeParent": 326,
                                                "label": "stroyimg",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 272,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Script",
                                                "switchAble": true,
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "removeAble": true,
                                                "props": { "y": 0, "x": 0, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 326,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 273,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnrank",
                                        "props": { "y": -381.5, "x": 1043, "visible": false, "var": "btnrank", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnrank",
                                        "isOpen": null,
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 314,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnCleanBtn",
                                        "props": { "y": -362, "visible": false, "var": "btnCleanBtn", "left": -377 },
                                        "nodeParent": 87,
                                        "label": "btnCleanBtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 280,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 4, "x": 10, "wordWrap": true, "width": 48, "valign": "middle", "runtime": "Laya.Text", "leading": 3, "height": 44, "fontSize": 18, "font": "Microsoft YaHei", "color": "#2d66be", "bold": true, "align": "center" },
                                                "nodeParent": 280,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 281,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Box",
                                        "searchKey": "Box,btnNewHero",
                                        "props": { "y": 53, "x": 248, "width": 148, "visible": false, "var": "btnNewHero", "height": 159, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnNewHero",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 275,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,herolight",
                                                "props": { "var": "herolight", "skin": "game/main_hero_light.png", "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 275,
                                                "label": "herolight",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 277,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,heroicon",
                                                "props": { "y": 79, "x": 74, "width": 148, "var": "heroicon", "skin": "game/main_hero_icon.png", "height": 159, "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 275,
                                                "label": "heroicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 276,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,herotime",
                                                "props": { "y": 132, "x": 19, "width": 116, "var": "herotime", "valign": "middle", "text": "99:99:99", "runtime": "Laya.Text", "height": 23, "fontSize": 18, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" },
                                                "nodeParent": 275,
                                                "label": "herotime",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 278,
                                                "child": [
                                                    {
                                                        "type": "Image",
                                                        "searchKey": "Image,herotimeicon",
                                                        "props": { "y": 0, "x": -17, "width": 20, "var": "herotimeicon", "skin": "game/offline_time.png", "height": 20 },
                                                        "nodeParent": 278,
                                                        "label": "herotimeicon",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 279,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,newyearbtn",
                                        "props": { "y": -207.5, "x": -338, "width": 114, "visible": false, "var": "newyearbtn", "height": 125, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "newyearbtn",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 316,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,newyeartxt",
                                                "props": { "y": 84, "x": 16, "width": 81, "var": "newyeartxt", "valign": "middle", "runtime": "Laya.Text", "height": 20, "fontSize": 16, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 316,
                                                "label": "newyeartxt",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 317,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 101, "x": 0, "texture": "game/main_2021_tips.png" },
                                                "nodeParent": 316,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 329,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,remaintime",
                                                "props": { "y": 105, "x": 12, "width": 89, "var": "remaintime", "valign": "middle", "runtime": "Laya.Text", "height": 16, "fontSize": 14, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 316,
                                                "label": "remaintime",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 328,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Box",
                                        "searchKey": "Box,btnChrismas",
                                        "props": { "y": 57, "x": 85, "width": 177, "var": "btnChrismas", "height": 166, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 87,
                                        "label": "btnChrismas",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 332,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image,chrismaslight",
                                                "props": { "var": "chrismaslight", "skin": "game/main_hero_light.png", "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 332,
                                                "label": "chrismaslight",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 333,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 83, "x": 88, "width": 177, "skin": "game/main_christmas_icon.png", "height": 166, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 332,
                                                "label": "Image",
                                                "isOpen": false,
                                                "isDirectory": true,
                                                "isAniNode": true,
                                                "hasChild": true,
                                                "compId": 334,
                                                "child": [
                                                    {
                                                        "type": "Image",
                                                        "searchKey": "Image",
                                                        "props": { "y": 133, "x": 32, "skin": "game/main_speedup_video.png" },
                                                        "nodeParent": 334,
                                                        "label": "Image",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 335,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    },
                                                    {
                                                        "type": "Text",
                                                        "searchKey": "Text",
                                                        "props": { "y": 132, "x": 57, "width": 96, "valign": "middle", "text": "Free", "runtime": "Laya.Text", "height": 22, "fontSize": 18, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                        "nodeParent": 334,
                                                        "label": "Text",
                                                        "isDirectory": false,
                                                        "isAniNode": true,
                                                        "hasChild": false,
                                                        "compId": 336,
                                                        "child": [
                                                        ],
                                                        "$HIDDEN": false
                                                    }],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,nighttips",
                                "props": { "y": 502, "visible": false, "var": "nighttips", "skin": "game/night_tips.png", "right": 183 },
                                "nodeParent": 180,
                                "label": "nighttips",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 313,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,sailbtn",
                                "props": { "x": 375, "width": 293, "visible": false, "var": "sailbtn", "skin": "game/sail_btn.png", "pivotY": 57, "pivotX": 147, "height": 113, "centerY": 0 },
                                "nodeParent": 180,
                                "label": "sailbtn",
                                "isOpen": false,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 109,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,sailbtntext",
                                        "props": { "y": 19, "x": 9, "width": 278, "var": "sailbtntext", "valign": "middle", "text": "救援打工人", "strokeColor": "#d86503", "stroke": 5, "runtime": "Laya.Text", "height": 75, "fontSize": 45, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 109,
                                        "label": "sailbtntext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 110,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,sinkbtn",
                                "props": { "x": 375, "width": 293, "visible": false, "var": "sinkbtn", "skin": "game/sail_btn.png", "pivotY": 57, "pivotX": 147, "height": 113, "centerY": 0 },
                                "nodeParent": 180,
                                "label": "sinkbtn",
                                "isOpen": false,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 129,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 30, "x": 71, "valign": "middle", "text": "Sink!", "strokeColor": "#d86503", "stroke": 5, "runtime": "Laya.Text", "fontSize": 60, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 129,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 130,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,taskobj",
                                "props": { "y": 114, "x": 532, "width": 218, "var": "taskobj", "height": 76 },
                                "nodeParent": 180,
                                "label": "taskobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 118,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,tasktips",
                                        "props": { "y": 0, "x": 53, "width": 145, "visible": false, "var": "tasktips", "skin": "game/taskName_BG.png", "sizeGrid": "0,16,0,15,1", "height": 24 },
                                        "nodeParent": 118,
                                        "label": "tasktips",
                                        "isOpen": false,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 120,
                                        "child": [
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite,taskTips",
                                                "props": { "y": -55, "x": 280, "width": 25, "visible": false, "name": "taskTips", "height": 25 },
                                                "nodeParent": 120,
                                                "label": "taskTips",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 121,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 7, "x": 1, "width": 142, "valign": "middle", "text": "Mission Progress", "runtime": "Laya.Text", "height": 16, "fontSize": 14, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "alpha": 0.8, "align": "center" },
                                                "nodeParent": 120,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 122,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,proobj",
                                        "props": { "y": 24, "x": 46, "width": 176, "skin": "game/taskbar2.png", "sizeGrid": "0,19,0,19,1", "name": "proobj", "height": 36 },
                                        "nodeParent": 118,
                                        "label": "proobj",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 119,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,procore",
                                                "props": { "y": 3, "x": 3, "width": 0, "var": "procore", "skin": "game/taskbar1.png", "sizeGrid": "0,15,0,16,1", "height": 30 },
                                                "nodeParent": 119,
                                                "label": "procore",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 123,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,pronum",
                                                "props": { "y": 5, "x": 4, "width": 170, "var": "pronum", "valign": "middle", "text": "22%", "runtime": "Laya.Text", "height": 25, "fontSize": 25, "font": "Arial", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 119,
                                                "label": "pronum",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 124,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 17, "x": 0, "texture": "game/task_icon.png" },
                                        "nodeParent": 118,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 117,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "HBox",
                                        "searchKey": "HBox,starobj",
                                        "props": { "y": 83, "x": 113, "var": "starobj", "space": 8, "anchorY": 0.5, "anchorX": 0.5, "align": "middle" },
                                        "nodeParent": 118,
                                        "label": "starobj",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 125,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,doneobj",
                                        "props": { "y": 82, "x": 218, "width": 218, "visible": false, "var": "doneobj", "skin": "game/task_doneBG.png", "sizeGrid": "18,18,15,18,1", "height": 100 },
                                        "nodeParent": 118,
                                        "label": "doneobj",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 126,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,donetitle",
                                                "props": { "y": 2, "x": 3, "wordWrap": true, "width": 182, "var": "donetitle", "valign": "middle", "text": "建造萝卜萝卜完成", "runtime": "Laya.Text", "padding": "0", "leading": 0, "height": 93, "fontSize": 18, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 126,
                                                "label": "donetitle",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 127,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "x": 60,
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 36, "x": 187, "width": 28, "texture": "game/task_done.png", "height": 28 },
                                                "nodeParent": 126,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 128,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,oppomoregamebtn",
                                "props": { "y": 560, "x": 863, "visible": false, "var": "oppomoregamebtn" },
                                "nodeParent": 180,
                                "label": "oppomoregamebtn",
                                "isOpen": true,
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 286,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,lotterybtn",
                                "props": { "y": 428, "x": 677, "visible": false, "var": "lotterybtn", "height": 132, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 180,
                                "label": "lotterybtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 142,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 0, "x": 0, "texture": "game/ad_bar2.png" },
                                        "nodeParent": 142,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 146,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite,lotterypro",
                                        "props": { "y": 8, "x": 7, "var": "lotterypro", "texture": "game/ad_bar1.png" },
                                        "nodeParent": 142,
                                        "label": "lotterypro",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 147,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": -4, "x": -10, "visible": false, "texture": "game/ad_video.png" },
                                        "nodeParent": 142,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 148,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": -9, "x": 43, "texture": "game/ad_spin.png" },
                                        "nodeParent": 142,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 149,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 94, "x": 14, "width": 146, "valign": "middle", "text": "Lucky draw", "strokeColor": "#cf5c0f", "stroke": 4, "runtime": "Laya.Text", "height": 27, "fontSize": 20, "font": "Microsoft YaHei", "color": "#fdfdfd", "bold": true, "align": "center" },
                                        "nodeParent": 142,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 150,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 142,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 151,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,speedbtn",
                                "props": { "y": 573, "x": 677, "width": 163, "visible": false, "var": "speedbtn", "height": 132, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 180,
                                "label": "speedbtn",
                                "isOpen": false,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 203,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 0, "x": 0, "texture": "game/ad_bar2.png" },
                                        "nodeParent": 203,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 204,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite,speedpro",
                                        "props": { "y": 8, "x": 7, "var": "speedpro", "texture": "game/ad_bar1.png" },
                                        "nodeParent": 203,
                                        "label": "speedpro",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 205,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": -5, "x": -8, "texture": "game/ad_video.png" },
                                        "nodeParent": 203,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 206,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": -10.5, "x": 49, "texture": "game/ad_time.png" },
                                        "nodeParent": 203,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 207,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 203,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 208,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 86, "x": 7, "wordWrap": true, "width": 153, "valign": "middle", "text": "Speed up for a minute", "strokeColor": "#cf5c0f", "stroke": 4, "runtime": "Laya.Text", "height": 37, "fontSize": 20, "font": "Microsoft YaHei", "color": "#fdfdfd", "bold": true, "align": "center" },
                                        "nodeParent": 203,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 210,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,sleepbtn",
                                "props": { "y": 716, "x": 677, "visible": false, "var": "sleepbtn", "height": 132, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 180,
                                "label": "sleepbtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 144,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 0, "x": 0, "texture": "game/ad_bar2.png" },
                                        "nodeParent": 144,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 158,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite,sleeppro",
                                        "props": { "y": 8, "x": 7, "var": "sleeppro", "texture": "game/ad_bar1.png" },
                                        "nodeParent": 144,
                                        "label": "sleeppro",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 159,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite,icon",
                                        "props": { "y": -9, "x": 38, "texture": "game/ad_sleep.png", "name": "icon" },
                                        "nodeParent": 144,
                                        "label": "icon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 161,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite,sleepvedioicon",
                                        "props": { "y": -4, "x": -10, "visible": false, "var": "sleepvedioicon", "texture": "game/ad_video.png" },
                                        "nodeParent": 144,
                                        "label": "sleepvedioicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 160,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 83, "x": 9, "wordWrap": true, "width": 150, "valign": "middle", "text": "Skip Sleep Time", "strokeColor": "#cf5c0f", "stroke": 4, "runtime": "Laya.Text", "height": 37, "fontSize": 20, "font": "Microsoft YaHei", "color": "#fdfdfd", "bold": true, "align": "center" },
                                        "nodeParent": 144,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 258,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 144,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 162,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "VBox",
                                "searchKey": "VBox,buffbox",
                                "props": { "y": 351, "x": 684, "width": 162, "var": "buffbox", "space": 10, "right": -96, "height": 130, "align": "left" },
                                "nodeParent": 180,
                                "label": "buffbox",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 145,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Animation",
                                "searchKey": "Animation,guidslide",
                                "props": { "y": 726, "x": 367, "visible": false, "var": "guidslide", "source": "animate/guide_hand_Slide.ani", "mouseThrough": true, "mouseEnabled": false, "autoPlay": true },
                                "nodeParent": 180,
                                "label": "guidslide",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 182,
                                "child": [
                                ],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Text",
                        "searchKey": "Text,cleardata",
                        "props": { "y": 26, "x": -346, "width": 220, "visible": false, "var": "cleardata", "valign": "middle", "strokeColor": "#ffffff", "stroke": 2, "height": 58, "fontSize": 40, "font": "Microsoft YaHei", "color": "#2857d1", "bold": true, "align": "center" },
                        "nodeParent": 2,
                        "label": "cleardata",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 184,
                        "child": [
                        ],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Button",
                        "searchKey": "Button,btn_musicState",
                        "props": { "y": 0, "x": 0, "var": "btn_musicState", "stateNum": "1", "skin": "game/btn_sound_on.png" },
                        "nodeParent": 2,
                        "label": "btn_musicState",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 338,
                        "child": [
                        ],
                        "$HIDDEN": false
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }],
                "$HIDDEN": false
            }, e.MainUIUI = C, s("ui.view.MainUIUI", C);
            class x extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(x.uiView);
                }
            }
            x.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 77,
                "selecteID": 84,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/MapFindUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 150,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/info_uibg.png",
                    "game/close_white.png",
                    "game/map_charpter1.png",
                    "game/map_new_line.png",
                    "game/b_btn_blue.png",
                    "game/b_btn_arrow.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "y": 0, "x": 0, "top": 0, "skin": "game/black.png", "sizeGrid": "21,20,18,23,1", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 64,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 267, "x": 93, "width": 564, "var": "window", "skin": "game/info_uibg.png", "sizeGrid": "94,60,28,60", "height": 906 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 77,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 37, "x": 526, "var": "btnclose", "skin": "game/close_white.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 77,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 78,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttitle",
                                "props": { "y": 4, "x": 4, "wordWrap": true, "width": 502, "var": "txttitle", "valign": "middle", "text": "Chapter 1 - After the Flood", "runtime": "Laya.Text", "height": 75, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 77,
                                "label": "txttitle",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 79,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 104, "x": 86, "skin": "game/map_charpter1.png" },
                                "nodeParent": 77,
                                "label": "Image",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 80,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,imgship",
                                        "props": { "y": 16, "x": 15, "width": 362, "var": "imgship", "skin": "game/black.png", "height": 361 },
                                        "nodeParent": 80,
                                        "label": "imgship",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 146,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box",
                                "props": { "y": 500, "right": 15, "left": 15, "height": 68 },
                                "nodeParent": 77,
                                "label": "Box",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 81,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,line_left",
                                        "props": { "y": 42, "x": 83, "skin": "game/map_new_line.png", "name": "line_left", "left": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 81,
                                        "label": "line_left",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 82,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,line_right",
                                        "props": { "y": 42, "x": 461, "skin": "game/map_new_line.png", "skewX": 180, "rotation": 180, "right": 0, "name": "line_right", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 81,
                                        "label": "line_right",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 83,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtnewfind",
                                        "props": { "y": 20, "x": 137, "width": 259, "var": "txtnewfind", "valign": "middle", "text": "Crew Found", "runtime": "Laya.Text", "height": 45, "fontSize": 30, "font": "Microsoft YaHei", "color": "#487bab", "bold": true, "align": "center" },
                                        "nodeParent": 81,
                                        "label": "txtnewfind",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 84,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,listfind",
                                "props": { "y": 588, "x": 28, "width": 500, "var": "listfind", "spaceX": 19, "selectEnable": false, "repeatY": 1, "repeatX": 10, "height": 157 },
                                "nodeParent": 77,
                                "label": "listfind",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 87,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box",
                                "props": { "y": 818, "x": 282, "width": 530, "height": 80, "centerX": 0, "bottom": 48, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 77,
                                "label": "Box",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 108,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btnleft",
                                        "props": { "width": 70, "var": "btnleft", "top": 0, "skin": "game/b_btn_blue.png", "sizeGrid": "0,30,0,30", "left": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "btnleft",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 85,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 17, "skin": "game/b_btn_arrow.png", "centerX": 0 },
                                                "nodeParent": 85,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 103,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "type": "Script",
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 85,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 148,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btnright",
                                        "props": { "width": 70, "var": "btnright", "top": 0, "skin": "game/b_btn_blue.png", "sizeGrid": "0,30,0,30", "right": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "btnright",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 106,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 39, "skin": "game/b_btn_arrow.png", "rotation": 180, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 106,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 107,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "type": "Script",
                                                "source": "src/script/ScaleButtonScript.ts",
                                                "searchKey": "Script,ScaleButtonScript",
                                                "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                                "nodeParent": 106,
                                                "label": "ScaleButtonScript",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 149,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "type": "Box",
                                        "searchKey": "Box,dotbox",
                                        "props": { "width": 370, "var": "dotbox", "height": 27, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 108,
                                        "label": "dotbox",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 126,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.MapFindUIUI = x, s("ui.view.MapFindUIUI", x);
            class M extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(M.uiView);
                }
            }
            M.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 75,
                "selecteID": 76,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/MapUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 103,
                "loadList3D": [
                ],
                "loadList": [
                    "game/build_uiBG.jpg",
                    "game/res_num_bg.png",
                    "game/res_icon_bg.png",
                    "game/res_gem_icon.png",
                    "game/res_wood_icon.png",
                    "game/mapi_title.png",
                    "game/buildUI_bg.png",
                    "game/close.png",
                    "game/map_charpter1.png",
                    "game/map_new_line.png",
                    "game/b_btn_yellow.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "y": 0, "x": 0, "top": 0, "skin": "game/build_uiBG.jpg", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 64,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,diamondobj",
                        "props": { "y": 65, "x": 39, "var": "diamondobj" },
                        "nodeParent": 2,
                        "label": "diamondobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 65,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 65,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 67,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 65,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 68,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 12, "x": 9, "texture": "game/res_gem_icon.png" },
                                        "nodeParent": 68,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 69,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,diamondnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "diamondnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 65,
                                "label": "diamondnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 70,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,resobj",
                        "props": { "y": 65, "x": 267, "var": "resobj" },
                        "nodeParent": 2,
                        "label": "resobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 66,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 66,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 71,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 66,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 72,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": 5, "x": 9, "var": "moodicon", "skin": "game/res_wood_icon.png" },
                                        "nodeParent": 72,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 73,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,resnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "resnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 66,
                                "label": "resnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 74,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,title",
                        "props": { "y": 159, "skin": "game/mapi_title.png", "name": "title", "centerX": 0 },
                        "nodeParent": 2,
                        "label": "title",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 75,
                        "child": [
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttitle",
                                "props": { "y": 2, "x": 28, "wordWrap": true, "width": 334, "var": "txttitle", "valign": "middle", "text": "Lost Temple", "strokeColor": "#ffffff", "stroke": 4, "runtime": "Laya.Text", "height": 81, "fontSize": 35, "font": "Microsoft YaHei", "color": "#c33936", "bold": true, "align": "center" },
                                "nodeParent": 75,
                                "label": "txttitle",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 76,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 267, "x": 20, "width": 710, "var": "window", "skin": "game/buildUI_bg.png", "sizeGrid": "55,60,66,60", "height": 911 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 77,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 31, "x": 677, "var": "btnclose", "skin": "game/close.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 77,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 78,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttips",
                                "props": { "y": 18, "x": 80, "wordWrap": true, "width": 550, "var": "txttips", "valign": "middle", "text": "After sailing 2 times into the new sea", "runtime": "Laya.Text", "height": 83, "fontSize": 36, "font": "Microsoft YaHei", "color": "#397ec0", "bold": true, "align": "center" },
                                "nodeParent": 77,
                                "label": "txttips",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 79,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,imgmap",
                                "props": { "y": 298, "x": 355, "var": "imgmap", "skin": "game/map_charpter1.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 77,
                                "label": "imgmap",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 80,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box",
                                "props": { "y": 493, "x": 69, "width": 571, "height": 68 },
                                "nodeParent": 77,
                                "label": "Box",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 81,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,line_left",
                                        "props": { "y": 42, "x": 83, "skin": "game/map_new_line.png", "name": "line_left", "left": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 81,
                                        "label": "line_left",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 82,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,line_right",
                                        "props": { "y": 42, "x": 461, "skin": "game/map_new_line.png", "skewX": 180, "rotation": 180, "right": 0, "name": "line_right", "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 81,
                                        "label": "line_right",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 83,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtnewfind",
                                        "props": { "y": 21, "x": 156, "width": 259, "var": "txtnewfind", "valign": "middle", "text": "New sea found", "runtime": "Laya.Text", "height": 45, "fontSize": 30, "font": "Microsoft YaHei", "color": "#487bab", "bold": true, "align": "center" },
                                        "nodeParent": 81,
                                        "label": "txtnewfind",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 84,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,listfind",
                                "props": { "y": 578, "x": 44, "width": 622, "var": "listfind", "spaceX": 19, "selectEnable": false, "repeatY": 1, "repeatX": 10, "height": 157 },
                                "nodeParent": 77,
                                "label": "listfind",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 87,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnfind",
                                "props": { "y": 810, "x": 355, "width": 180, "var": "btnfind", "skin": "game/b_btn_yellow.png", "sizeGrid": "0,72,0,79", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 77,
                                "label": "btnfind",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 85,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtfind",
                                        "props": { "y": 18, "x": 10, "width": 160, "var": "txtfind", "valign": "middle", "text": "Found", "runtime": "Laya.Text", "height": 45, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 85,
                                        "label": "txtfind",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 86,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 85,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 102,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.MapUIUI = M, s("ui.view.MapUIUI", M);
            class S extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(S.uiView);
                }
            }
            S.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 5,
                "selecteID": 9,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/RewardUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 15,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/normal_frameBG.png",
                    "game/builditem_iconBG.png",
                    "game/game_wood.png",
                    "game/close_white.png",
                    "game/achiment_btn.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "19,16,23,15,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "Image",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,window",
                        "props": { "y": 667, "x": 375, "var": "window", "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 5,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,bg",
                                "props": { "y": 0, "x": 0, "skin": "game/normal_frameBG.png", "sizeGrid": "93,0,25,0,1", "name": "bg", "height": 351 },
                                "nodeParent": 5,
                                "label": "bg",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 4,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text",
                                "props": { "y": 12, "x": 146, "width": 260, "valign": "middle", "text": "Reward", "runtime": "Laya.Text", "height": 53, "fontSize": 42, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "Text",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 9,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 88, "x": 230, "texture": "game/builditem_iconBG.png" },
                                "nodeParent": 5,
                                "label": "Sprite",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 6,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 23, "x": 22, "texture": "game/game_wood.png" },
                                        "nodeParent": 6,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 8,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,rewardnum",
                                "props": { "y": 193, "x": 197, "width": 159, "var": "rewardnum", "valign": "middle", "text": "1k", "runtime": "Laya.Text", "height": 34, "fontSize": 32, "font": "Microsoft YaHei", "color": "#474444", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "rewardnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 14,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,closebtn",
                                "props": { "y": 12, "x": 494, "var": "closebtn", "texture": "game/close_white.png" },
                                "nodeParent": 5,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,getbtn",
                                "props": { "y": 258, "x": 202, "var": "getbtn", "skin": "game/achiment_btn.png" },
                                "nodeParent": 5,
                                "label": "getbtn",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 10,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,desc",
                                        "props": { "y": 12, "x": 24, "width": 100, "var": "desc", "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 46, "fontSize": 32, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 10,
                                        "label": "desc",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 11,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.MoneyRewardUIUI = S, s("ui.view.MoneyRewardUIUI", S);
            class k extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(k.uiView);
                }
            }
            k.uiView = {
                type: "BaseView",
                props: {
                    y: 0,
                    x: 0,
                    width: 750,
                    runtime: "view/MoregameUI.ts",
                    height: 1334
                },
                compId: 2,
                child: [{
                    type: "Box",
                    props: {
                        y: 120,
                        x: -481,
                        var: "window"
                    },
                    compId: 93,
                    child: [{
                        type: "Sprite",
                        props: {
                            y: 230,
                            x: 481,
                            var: "closebtn",
                            texture: "game/main_moregame.png"
                        },
                        compId: 94
                    }, {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 482,
                            skin: "game/moregame_uibg.png",
                            sizeGrid: "20,24,21,23,1",
                            name: "uibg",
                            height: 564
                        },
                        compId: 95
                    }, {
                        type: "Box",
                        props: {
                            y: 34,
                            x: 31,
                            var: "imgobj"
                        },
                        compId: 96
                    }]
                }],
                loadList: ["game/main_moregame.png", "game/moregame_uibg.png"],
                loadList3D: []
            }, e.MoregameUIUI = k, s("ui.view.MoregameUIUI", k);
            class A extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(A.uiView);
                }
            }
            A.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 13,
                "selecteID": 14,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/MoreResUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 21,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/achiment_UI_bg.png",
                    "game/share_woodtitle.png",
                    "game/b_btn_green.png",
                    "game/share_wood_img.png",
                    "game/b_btn_redGet.png",
                    "game/video_big.png",
                    "game/share.png",
                    "game/res_wood_icon.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "29,18,22,17,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "Image",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 4,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 660, "var": "window", "skin": "game/achiment_UI_bg.png", "sizeGrid": "34,35,41,40", "height": 788, "centerY": -60, "centerX": 0 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 5,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,title",
                                "props": { "y": 36, "x": 149, "valign": "middle", "text": "Free", "skin": "game/share_woodtitle.png", "name": "title", "fontSize": 44, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "title",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 880, "x": 248, "var": "btnclose", "skin": "game/b_btn_green.png", "bottom": -90 },
                                "nodeParent": 5,
                                "label": "btnclose",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 7,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 5, "x": 1, "width": 158, "valign": "middle", "text": "Back", "runtime": "Laya.Text", "height": 72, "fontSize": 36, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 7,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 9,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,icon",
                                "props": { "y": 143, "x": 78, "skin": "game/share_wood_img.png", "name": "icon" },
                                "nodeParent": 5,
                                "label": "icon",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 10,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnfree",
                                "props": { "x": 122, "width": 415, "var": "btnfree", "skin": "game/b_btn_green.png", "sizeGrid": "0,75,0,72", "height": 90, "bottom": 181 },
                                "nodeParent": 5,
                                "label": "btnfree",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 11,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 9, "x": 87, "width": 241, "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 72, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 11,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 12,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnvedio",
                                "props": { "x": 122, "width": 415, "var": "btnvedio", "skin": "game/b_btn_redGet.png", "sizeGrid": "0,75,0,72", "height": 90, "bottom": 70 },
                                "nodeParent": 5,
                                "label": "btnvedio",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 13,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 9, "x": 87, "wordWrap": true, "width": 327, "valign": "middle", "text": "Watch the ad to receive x4", "runtime": "Laya.Text", "height": 72, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 13,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 14,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 22, "x": 29, "skin": "game/video_big.png" },
                                        "nodeParent": 13,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 15,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnshare",
                                "props": { "x": -705, "width": 415, "visible": false, "var": "btnshare", "skin": "game/b_btn_redGet.png", "sizeGrid": "0,75,0,72", "height": 90, "bottom": 156 },
                                "nodeParent": 5,
                                "label": "btnshare",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 16,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 9, "x": 87, "width": 241, "valign": "middle", "text": "分享录屏获得2倍", "runtime": "Laya.Text", "height": 72, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 16,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 17,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 23, "x": 29, "width": 47, "skin": "game/share.png", "height": 43 },
                                        "nodeParent": 16,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 18,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 431.5, "x": 224, "skin": "game/res_wood_icon.png" },
                                "nodeParent": 5,
                                "label": "Image",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 19,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 10, "x": 57, "width": 241, "valign": "middle", "text": "Wood +500", "runtime": "Laya.Text", "height": 39, "fontSize": 32, "font": "Microsoft YaHei", "color": "#7c7272", "bold": true, "align": "left" },
                                        "nodeParent": 19,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 20,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.MoreResUIUI = A, s("ui.view.MoreResUIUI", A);
            class L extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(L.uiView);
                }
            }
            L.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 4,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/NewHeroUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 27,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/achiment_UI_bg.png",
                    "game/close.png",
                    "game/hero_title.png",
                    "game/hero_charbg.png",
                    "game/hero_timeiconbg.png",
                    "game/hero_timebgx.png",
                    "game/b_btn_green.png",
                    "game/share.png",
                    "game/video_big.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bgmask",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "18,16,20,25,1", "right": 0, "name": "bgmask", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bgmask",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 658, "var": "window", "skin": "game/achiment_UI_bg.png", "sizeGrid": "29,31,45,32,1", "height": 905, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 0, "x": 593, "var": "btnclose", "skin": "game/close.png" },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,imgtitle",
                                "props": { "y": 36, "x": 114, "var": "imgtitle", "skin": "game/hero_title.png" },
                                "nodeParent": 4,
                                "label": "imgtitle",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,viewwindow",
                                "props": { "y": 150, "x": 56.5, "width": 545, "var": "viewwindow", "skin": "game/hero_charbg.png", "height": 365 },
                                "nodeParent": 4,
                                "label": "viewwindow",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,onlinetimeobj",
                                "props": { "y": 569, "width": 609, "visible": false, "var": "onlinetimeobj", "height": 93, "centerX": -885 },
                                "nodeParent": 4,
                                "label": "onlinetimeobj",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 8,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,onlinetimetip2",
                                        "props": { "y": -15, "x": -685, "width": 565, "var": "onlinetimetip2", "valign": "middle", "runtime": "Laya.Text", "height": 30, "fontSize": 24, "font": "Microsoft YaHei", "color": "#0983a1", "bold": true, "align": "center" },
                                        "nodeParent": 8,
                                        "label": "onlinetimetip2",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 9,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,onlinetimetip",
                                                "props": { "y": 0, "x": 148, "width": 57, "var": "onlinetimetip", "valign": "middle", "runtime": "Laya.Text", "height": 30, "fontSize": 24, "font": "Microsoft YaHei", "color": "#fb2800", "bold": true, "align": "center" },
                                                "nodeParent": 9,
                                                "label": "onlinetimetip",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 22,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,timeprogressobj",
                                        "props": { "y": 40, "x": 101, "width": 400, "var": "timeprogressobj", "sizeGrid": "12,22,7,14,1", "height": 47 },
                                        "nodeParent": 8,
                                        "label": "timeprogressobj",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 10,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,timeprogressbar",
                                                "props": { "y": 1, "x": 0, "width": 400, "var": "timeprogressbar", "sizeGrid": "9,14,9,10,1" },
                                                "nodeParent": 10,
                                                "label": "timeprogressbar",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 11,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,onlinetimetext",
                                                "props": { "y": 5, "x": 4, "width": 392, "var": "onlinetimetext", "valign": "middle", "runtime": "Laya.Text", "height": 39, "fontSize": 26, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 10,
                                                "label": "onlinetimetext",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 12,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnshare",
                                "props": { "y": 705, "x": 329, "width": 400, "var": "btnshare", "skin": "game/b_btn_green.png", "sizeGrid": "15,69,58,74", "height": 80, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnshare",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 17,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,shareicon",
                                        "props": { "y": 15, "x": 26, "width": 46, "var": "shareicon", "skin": "game/share.png", "height": 42 },
                                        "nodeParent": 17,
                                        "label": "shareicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 18,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,btnsharetext",
                                        "props": { "y": 7, "x": 83, "width": 295, "var": "btnsharetext", "valign": "middle", "text": "分享录屏免费获得", "runtime": "Laya.Text", "height": 64, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 17,
                                        "label": "btnsharetext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 19,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,getbtn",
                                "props": { "y": 705, "x": 329, "width": 400, "visible": false, "var": "getbtn", "skin": "game/b_btn_green.png", "sizeGrid": "15,69,58,74", "height": 80, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "getbtn",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 24,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,getvideo",
                                        "props": { "y": 16.5, "x": 28, "visible": false, "var": "getvideo", "skin": "game/video_big.png" },
                                        "nodeParent": 24,
                                        "label": "getvideo",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 26,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 7, "x": 52, "width": 295, "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 64, "fontSize": 35, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 24,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 25,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnvedio",
                                "props": { "y": 803, "width": 400, "var": "btnvedio", "skin": "game/b_btn_green.png", "sizeGrid": "15,69,58,74", "height": 80, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "btnvedio",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 13,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,vedioicon",
                                        "props": { "y": 15, "x": 7, "var": "vedioicon", "skin": "game/video_big.png" },
                                        "nodeParent": 13,
                                        "label": "vedioicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 14,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,vediotext",
                                        "props": { "y": 7, "x": 56, "width": 341, "var": "vediotext", "valign": "middle", "text": "Watch Ads to get(0/2)", "runtime": "Laya.Text", "height": 64, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 13,
                                        "label": "vediotext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 16,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,tips",
                                "props": { "y": 532, "x": 28, "wordWrap": true, "width": 602, "visible": false, "var": "tips", "valign": "middle", "text": "Sign in tomorrow to receive a new character!", "runtime": "Laya.Text", "height": 113, "fontSize": 30, "font": "Microsoft YaHei", "color": "#0983a1", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "tips",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 20,
                                "child": [
                                ]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.NewHeroUIUI = L, s("ui.view.NewHeroUIUI", L);
            class T extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(T.uiView);
                }
            }
            T.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/NewYearUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        y: 0,
                        x: 0,
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "21,20,24,21,1",
                        right: 0,
                        name: "bg",
                        left: 0,
                        bottom: 0
                    },
                    compId: 64
                }, {
                    type: "Image",
                    props: {
                        y: 667,
                        x: 375,
                        width: 601,
                        var: "window",
                        skin: "game/newyear_uibg.png",
                        sizeGrid: "95,0,43,0,1",
                        height: 881,
                        centerY: 0,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 77,
                    child: [{
                        type: "Image",
                        props: {
                            y: 37,
                            x: 563,
                            var: "btnclose",
                            skin: "game/close_white.png",
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 78
                    }, {
                        type: "Text",
                        props: {
                            y: 19,
                            x: 100,
                            width: 400,
                            var: "txttitle",
                            valign: "middle",
                            text: "春节嘉年华",
                            height: 45,
                            fontSize: 36,
                            font: "Microsoft YaHei",
                            color: "#ffffff",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 79
                    }, {
                        type: "Image",
                        props: {
                            y: 104,
                            x: 43,
                            skin: "game/newyear_2021img.png"
                        },
                        compId: 80,
                        child: [{
                            type: "Image",
                            props: {
                                y: 245,
                                x: 49,
                                width: 417,
                                skin: "game/newyear_timebg.png",
                                sizeGrid: "0,29,0,28",
                                height: 52
                            },
                            compId: 152
                        }, {
                            type: "Text",
                            props: {
                                y: 256,
                                x: 71,
                                width: 211,
                                valign: "middle",
                                text: "活动结束剩余时间",
                                height: 37,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#4e3035",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 153
                        }, {
                            type: "Text",
                            props: {
                                y: 257,
                                x: 286,
                                width: 174,
                                var: "remaintime",
                                valign: "middle",
                                text: "5D 12:12:12",
                                height: 37,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#e6222b",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 154
                        }]
                    }, {
                        type: "Box",
                        props: {
                            y: 417,
                            x: 62
                        },
                        compId: 81,
                        child: [{
                            type: "Image",
                            props: {
                                y: 20,
                                x: 0,
                                skin: "game/newyear_reward_titlebg.png"
                            },
                            compId: 82
                        }, {
                            type: "Text",
                            props: {
                                y: 20,
                                x: 109,
                                width: 259,
                                valign: "middle",
                                text: "活动奖励",
                                height: 45,
                                fontSize: 30,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 84
                        }]
                    }, {
                        type: "List",
                        props: {
                            y: 507,
                            x: 50,
                            width: 500,
                            var: "listfind",
                            spaceX: 19,
                            selectEnable: !1,
                            repeatY: 1,
                            repeatX: 10,
                            height: 231
                        },
                        compId: 87
                    }, {
                        type: "Image",
                        props: {
                            y: 754,
                            x: 174,
                            width: 245,
                            var: "enterbtn",
                            skin: "game/b_btn_yellow.png",
                            sizeGrid: "39,76,31,73",
                            height: 93
                        },
                        compId: 85,
                        child: [{
                            type: "Text",
                            props: {
                                y: 22,
                                x: 24,
                                width: 197,
                                valign: "middle",
                                text: "进入嘉年华",
                                height: 45,
                                fontSize: 36,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 151
                        }, {
                            type: "Script",
                            props: {
                                y: 10,
                                x: 10,
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 148
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/newyear_uibg.png", "game/close_white.png", "game/newyear_2021img.png", "game/newyear_timebg.png", "game/newyear_reward_titlebg.png", "game/b_btn_yellow.png"],
                loadList3D: []
            }, e.NewYearUIUI = T, s("ui.view.NewYearUIUI", T);
            class B extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(B.uiView);
                }
            }
            B.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 5,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/OfflineUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 36,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/newyear_uibg.png",
                    "game/offine_img.png",
                    "game/res_wood_icon.png",
                    "game/offline_timeBG.png",
                    "game/offline_line.png",
                    "game/offline_time.png",
                    "game/close_white.png",
                    "game/b_btn_green.png",
                    "game/res_gem_icon.png",
                    "game/b_btn_yellow.png",
                    "game/video2.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "20,26,21,23,1", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ],
                        "$HIDDEN": false
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,window",
                        "props": { "var": "window", "height": 681, "centerY": 0, "centerX": 0 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 5,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,bg",
                                "props": { "y": 0, "x": 0, "width": 601, "skin": "game/newyear_uibg.png", "sizeGrid": "96,0,21,0,1", "name": "bg", "height": 698 },
                                "nodeParent": 5,
                                "label": "bg",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 4,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 25, "x": 84, "width": 433, "valign": "middle", "text": "Welcome back", "runtime": "Laya.Text", "height": 36, "fontSize": 38, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 4,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 6,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 96, "x": 66, "texture": "game/offine_img.png" },
                                        "nodeParent": 4,
                                        "label": "Sprite",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 8,
                                        "child": [
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 279, "x": 106, "texture": "game/res_wood_icon.png" },
                                                "nodeParent": 8,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 20,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 499, "x": 107, "width": 386, "skin": "game/offline_timeBG.png", "sizeGrid": "25,29,25,33,1" },
                                        "nodeParent": 4,
                                        "label": "Image",
                                        "isOpen": null,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 9,
                                        "child": [
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 0, "x": 191, "texture": "game/offline_line.png" },
                                                "nodeParent": 9,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 10,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            },
                                            {
                                                "type": "Sprite",
                                                "searchKey": "Sprite",
                                                "props": { "y": 12, "x": 13, "texture": "game/offline_time.png" },
                                                "nodeParent": 9,
                                                "label": "Sprite",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 16,
                                                "child": [
                                                ],
                                                "$HIDDEN": false
                                            }],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 454, "x": 41, "width": 518, "valign": "middle", "text": "Offline, your crews will still work", "runtime": "Laya.Text", "height": 36, "fontSize": 22, "font": "Microsoft YaHei", "color": "#8d8e90", "bold": true, "align": "center" },
                                        "nodeParent": 4,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 15,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,closebtn",
                                "props": { "y": 18, "x": 534, "var": "closebtn", "texture": "game/close_white.png" },
                                "nodeParent": 5,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 7,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,rewardnum",
                                "props": { "y": 385, "x": 231, "width": 139, "var": "rewardnum", "valign": "middle", "text": "+25.9k", "runtime": "Laya.Text", "height": 36, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffd503", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "rewardnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 27,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,double",
                                "props": { "y": 385, "x": 368, "width": 31, "visible": false, "var": "double", "valign": "middle", "text": "x2", "runtime": "Laya.Text", "height": 36, "fontSize": 30, "font": "Microsoft YaHei", "color": "#12ff03", "bold": true, "align": "left" },
                                "nodeParent": 5,
                                "label": "double",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 28,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,offtime",
                                "props": { "y": 516, "x": 161, "width": 135, "var": "offtime", "valign": "middle", "text": "000:01:33", "runtime": "Laya.Text", "height": 36, "fontSize": 25, "font": "Microsoft YaHei", "color": "#f5260d", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "offtime",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 18,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,maxtime",
                                "props": { "y": 516, "x": 306, "width": 186, "var": "maxtime", "valign": "middle", "text": "MAX 24H", "runtime": "Laya.Text", "height": 36, "fontSize": 25, "font": "Microsoft YaHei", "color": "#828282", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "maxtime",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 19,
                                "child": [
                                ],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,diamondbtn",
                                "props": { "y": 622, "x": 196, "width": 182, "var": "diamondbtn", "texture": "game/b_btn_green.png", "pivotY": 40, "pivotX": 91, "height": 90 },
                                "nodeParent": 5,
                                "label": "diamondbtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 13,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 39, "x": 2, "wordWrap": true, "width": 178, "valign": "middle", "text": "Diamond collection", "runtime": "Laya.Text", "height": 40, "fontSize": 22, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 13,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 14,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 8.25, "x": 48, "texture": "game/res_gem_icon.png", "scaleY": 0.8, "scaleX": 0.8 },
                                        "nodeParent": 13,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 21,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 12, "x": 91, "width": 55, "valign": "middle", "text": "50", "runtime": "Laya.Text", "height": 28, "fontSize": 22, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "left" },
                                        "nodeParent": 13,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 22,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 13,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 35,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,videobtn",
                                "props": { "y": 622, "x": 408, "width": 182, "var": "videobtn", "texture": "game/b_btn_yellow.png", "pivotY": 40, "pivotX": 91, "height": 90 },
                                "nodeParent": 5,
                                "label": "videobtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 23,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 40, "x": 4, "wordWrap": true, "width": 174, "valign": "middle", "text": "Resources doubled", "runtime": "Laya.Text", "height": 38, "fontSize": 22, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 23,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 24,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 8, "x": 75, "texture": "game/video2.png" },
                                        "nodeParent": 23,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 25,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 23,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 34,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,getbtn",
                                "props": { "y": 622, "x": 300, "width": 214, "visible": false, "var": "getbtn", "skin": "game/b_btn_green.png", "sizeGrid": "32,83,31,73,1", "pivotY": 40, "pivotX": 107, "height": 90 },
                                "nodeParent": 5,
                                "label": "getbtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 29,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 30, "x": 50, "width": 113, "valign": "middle", "text": "Claim", "runtime": "Laya.Text", "height": 26, "fontSize": 35, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 29,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 30,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 29,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 33,
                                        "child": [
                                        ],
                                        "$HIDDEN": false
                                    }],
                                "$HIDDEN": false
                            }],
                        "$HIDDEN": false
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }],
                "$HIDDEN": false
            }, e.OfflineUIUI = B, s("ui.view.OfflineUIUI", B);
            class U extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(U.uiView);
                }
            }
            U.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/PassRedMoneyUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,16,23,15,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 667,
                        x: 375,
                        var: "window",
                        centerY: 0,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 5,
                    child: [{
                        type: "Sprite",
                        props: {
                            texture: "game/red_pocket_uibg.png",
                            name: "bg"
                        },
                        compId: 4
                    }, {
                        type: "Sprite",
                        props: {
                            y: 19,
                            x: 108,
                            texture: "game/red_pocket_done_title.png"
                        },
                        compId: 6
                    }, {
                        type: "Sprite",
                        props: {
                            y: 163,
                            x: 211,
                            texture: "game/icon.png"
                        },
                        compId: 8
                    }, {
                        type: "Sprite",
                        props: {
                            y: 10,
                            x: 500,
                            var: "closebtn",
                            texture: "game/red_pocket_vlose.png"
                        },
                        compId: 7
                    }, {
                        type: "Sprite",
                        props: {
                            y: 383,
                            x: 198.5,
                            var: "openbtn",
                            texture: "game/red_pocket_claim_btn.png"
                        },
                        compId: 12
                    }, {
                        type: "Sprite",
                        props: {
                            y: 601,
                            x: 211,
                            texture: "game/red_pocket_get2.png"
                        },
                        compId: 13
                    }]
                }],
                loadList: ["game/black.png", "game/red_pocket_uibg.png", "game/red_pocket_done_title.png", "game/icon.png", "game/red_pocket_vlose.png", "game/red_pocket_claim_btn.png", "game/red_pocket_get2.png"],
                loadList3D: []
            }, e.PassRedMoneyUIUI = U, s("ui.view.PassRedMoneyUIUI", U);
            class D extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(D.uiView);
                }
            }
            D.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/PrivacyUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "21,19,23,22,1",
                        right: 0,
                        name: "bg",
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Image",
                    props: {
                        width: 660,
                        var: "window",
                        skin: "game/achiment_UI_bg.png",
                        sizeGrid: "42,49,57,50,1",
                        height: 870,
                        centerY: -59,
                        centerX: 0
                    },
                    compId: 4,
                    child: [{
                        type: "Text",
                        props: {
                            y: 72,
                            x: 65,
                            width: 530,
                            valign: "middle",
                            text: "木筏世界迷你版应用隐私声明",
                            height: 78,
                            fontSize: 36,
                            font: "Microsoft YaHei",
                            color: "#177ba9",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 5
                    }, {
                        type: "Text",
                        props: {
                            y: 168,
                            x: 65,
                            wordWrap: !0,
                            width: 530,
                            valign: "top",
                            text: "       为了向您展示您感兴趣的广告，【木筏世界迷你版应用】将收集和处理您的以下信息，并仅在上述的目的范围内分享给第三方广告服务平台：                    1）  设备及使用信息：设备标识符、操作系统的设置信息、设备的硬件信息、应用的基本信息及使用信息、网络信息、运营商信息。                                  2）广告互动信息：对广告的浏览、点击、关闭和播放信息。打开和关闭应用的时间、应用使用频率、应用错误日志。                                                        上述数据将会传输并保存至【中华人民共和国境内】的服务器，保存期限为2年，超出这一保留时间后将删除，但法律法规另有要求除外。",
                            leading: 15,
                            height: 634,
                            fontSize: 23,
                            font: "Microsoft YaHei",
                            color: "#177ba9",
                            bold: !0,
                            align: "left",
                            runtime: "Laya.Text"
                        },
                        compId: 6
                    }, {
                        type: "Sprite",
                        props: {
                            y: 690,
                            x: 102,
                            var: "confirmbtn",
                            texture: "game/b_btn_green.png"
                        },
                        compId: 7,
                        child: [{
                            type: "Text",
                            props: {
                                y: 21,
                                x: 40,
                                wordWrap: !0,
                                width: 82,
                                valign: "middle",
                                text: "Confirm",
                                leading: 15,
                                height: 37,
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 8
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 690,
                            x: 389,
                            var: "cancelbtn",
                            texture: "game/b_btn_green.png"
                        },
                        compId: 9,
                        child: [{
                            type: "Text",
                            props: {
                                y: 21,
                                x: 40,
                                wordWrap: !0,
                                width: 82,
                                valign: "middle",
                                text: "Cancel",
                                leading: 15,
                                height: 37,
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 10
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/achiment_UI_bg.png", "game/b_btn_green.png"],
                loadList3D: []
            }, e.PrivacyUIUI = D, s("ui.view.PrivacyUIUI", D);
            class G extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(G.uiView);
                }
            }
            G.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/PurseUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,16,23,15,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 667,
                        x: 375,
                        width: 637,
                        var: "window",
                        centerY: 0,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 637,
                            skin: "game/red_pocketuibg.png",
                            sizeGrid: "61,58,50,51,1",
                            name: "bg",
                            height: 924
                        },
                        compId: 4,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 26,
                                x: 187,
                                texture: "game/red_pocket_wallet.png"
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 127,
                                x: 66,
                                width: 504,
                                skin: "game/red_pocket_2.png",
                                sizeGrid: "69,45,56,43,1",
                                height: 162
                            },
                            compId: 15,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 11,
                                    x: 173,
                                    width: 159,
                                    valign: "middle",
                                    text: "红包余额",
                                    height: 32,
                                    fontSize: 30,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 46
                            }]
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 15,
                            x: 567,
                            var: "closebtn",
                            texture: "game/red_pocket_vlose.png"
                        },
                        compId: 7
                    }, {
                        type: "Text",
                        props: {
                            y: 190,
                            x: 155,
                            width: 326,
                            var: "money",
                            valign: "middle",
                            text: "0.54",
                            height: 73,
                            fontSize: 60,
                            font: "Microsoft YaHei",
                            color: "#431213",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 47
                    }, {
                        type: "Box",
                        props: {
                            y: 305,
                            x: 65,
                            var: "moneyobj"
                        },
                        compId: 20,
                        child: [{
                            type: "Text",
                            props: {
                                y: 0,
                                x: 0,
                                width: 135,
                                valign: "middle",
                                text: "提现方式",
                                height: 50,
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 48
                        }, {
                            type: "Sprite",
                            props: {
                                y: 53,
                                x: 0,
                                texture: "game/red_pocket_qq.png"
                            },
                            compId: 49
                        }, {
                            type: "Text",
                            props: {
                                y: 71,
                                x: 368,
                                width: 135,
                                valign: "middle",
                                text: "提现金额",
                                height: 50,
                                fontSize: 28,
                                font: "Microsoft YaHei",
                                color: "#ffeef8",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 51
                        }, {
                            type: "Image",
                            props: {
                                y: 121,
                                x: 0,
                                width: 507,
                                skin: "game/red_pocket_walletbg.png",
                                sizeGrid: "43,48,48,47,1",
                                height: 183
                            },
                            compId: 50
                        }, {
                            type: "List",
                            props: {
                                y: 146,
                                x: 30,
                                var: "moneylist",
                                spaceY: 20,
                                spaceX: 46,
                                repeatY: 2,
                                repeatX: 3
                            },
                            compId: 65,
                            child: [{
                                type: "Image",
                                props: {
                                    var: "money1",
                                    skin: "game/red_pocket_walletui1.png"
                                },
                                compId: 52,
                                child: [{
                                    type: "Text",
                                    props: {
                                        y: 6,
                                        x: 7,
                                        width: 105,
                                        valign: "middle",
                                        text: "0.05元",
                                        height: 50,
                                        fontSize: 28,
                                        font: "Microsoft YaHei",
                                        color: "#e34641",
                                        bold: !0,
                                        align: "center",
                                        runtime: "Laya.Text"
                                    },
                                    compId: 53
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    x: 165,
                                    var: "money2",
                                    skin: "game/red_pocket_walletui2.png"
                                },
                                compId: 54,
                                child: [{
                                    type: "Text",
                                    props: {
                                        y: 6,
                                        x: 7,
                                        width: 105,
                                        valign: "middle",
                                        text: "0.1元",
                                        height: 50,
                                        fontSize: 28,
                                        font: "Microsoft YaHei",
                                        color: "#e34641",
                                        bold: !0,
                                        align: "center",
                                        runtime: "Laya.Text"
                                    },
                                    compId: 55
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 1,
                                    x: 330,
                                    var: "money3",
                                    skin: "game/red_pocket_walletui2.png"
                                },
                                compId: 56,
                                child: [{
                                    type: "Text",
                                    props: {
                                        y: 6,
                                        x: 7,
                                        width: 105,
                                        valign: "middle",
                                        text: "1元",
                                        height: 50,
                                        fontSize: 28,
                                        font: "Microsoft YaHei",
                                        color: "#e34641",
                                        bold: !0,
                                        align: "center",
                                        runtime: "Laya.Text"
                                    },
                                    compId: 57
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 79,
                                    var: "money4",
                                    skin: "game/red_pocket_walletui2.png"
                                },
                                compId: 58,
                                child: [{
                                    type: "Text",
                                    props: {
                                        y: 6,
                                        x: 7,
                                        width: 105,
                                        valign: "middle",
                                        text: "20元",
                                        height: 50,
                                        fontSize: 28,
                                        font: "Microsoft YaHei",
                                        color: "#e34641",
                                        bold: !0,
                                        align: "center",
                                        runtime: "Laya.Text"
                                    },
                                    compId: 61
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 79,
                                    x: 165,
                                    var: "money5",
                                    skin: "game/red_pocket_walletui2.png"
                                },
                                compId: 59,
                                child: [{
                                    type: "Text",
                                    props: {
                                        y: 6,
                                        x: 7,
                                        width: 105,
                                        valign: "middle",
                                        text: "50元",
                                        height: 50,
                                        fontSize: 28,
                                        font: "Microsoft YaHei",
                                        color: "#e34641",
                                        bold: !0,
                                        align: "center",
                                        runtime: "Laya.Text"
                                    },
                                    compId: 62
                                }]
                            }, {
                                type: "Image",
                                props: {
                                    y: 80,
                                    x: 330,
                                    var: "money6",
                                    skin: "game/red_pocket_walletui2.png"
                                },
                                compId: 60,
                                child: [{
                                    type: "Text",
                                    props: {
                                        y: 6,
                                        x: 7,
                                        width: 105,
                                        valign: "middle",
                                        text: "100元",
                                        height: 50,
                                        fontSize: 28,
                                        font: "Microsoft YaHei",
                                        color: "#e34641",
                                        bold: !0,
                                        align: "center",
                                        runtime: "Laya.Text"
                                    },
                                    compId: 63
                                }]
                            }]
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 625,
                            x: 198,
                            width: 240,
                            var: "withdrawbtn",
                            skin: "game/red_pocket_btn_g.png",
                            sizeGrid: "0,42,0,44,1",
                            height: 105
                        },
                        compId: 13,
                        child: [{
                            type: "Text",
                            props: {
                                y: 9,
                                x: 26,
                                width: 188,
                                valign: "middle",
                                text: "立即提现",
                                height: 83,
                                fontSize: 36,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 17
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 740,
                            x: 32,
                            width: 573,
                            skin: "game/red_pocket_10bg.png",
                            sizeGrid: "17,26,19,27",
                            height: 170
                        },
                        compId: 10,
                        child: [{
                            type: "Text",
                            props: {
                                y: 16,
                                x: 12,
                                width: 550,
                                valign: "top",
                                text: "活动规则:",
                                height: 26,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 11
                        }, {
                            type: "Text",
                            props: {
                                y: 42,
                                x: 12,
                                wordWrap: !0,
                                width: 553,
                                valign: "top",
                                text: "1、提现将在周一至周五工作日24小时内审批到账，周末不处理审批，请耐心等待。",
                                leading: 10,
                                height: 58,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 18
                        }, {
                            type: "Text",
                            props: {
                                y: 110,
                                x: 12,
                                wordWrap: !0,
                                width: 550,
                                valign: "top",
                                text: "2、两次提现间隔需大于1小时，若不足1小时，则需等待满一小时才能提现成功。",
                                leading: 10,
                                height: 53,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 19
                        }]
                    }]
                }, {
                    type: "Box",
                    props: {
                        visible: !1,
                        var: "tipsobj",
                        top: 0,
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 67,
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            top: 0,
                            skin: "game/black.png",
                            sizeGrid: "19,16,23,15,1",
                            right: 0,
                            name: "bg",
                            left: 0,
                            bottom: 0
                        },
                        compId: 68
                    }, {
                        type: "Image",
                        props: {
                            width: 637,
                            skin: "game/red_pocketuibg.png",
                            sizeGrid: "53,49,52,46,1",
                            height: 421,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 66,
                        child: [{
                            type: "Text",
                            props: {
                                y: 56,
                                x: 53,
                                width: 529,
                                var: "tipsdesc",
                                valign: "middle",
                                text: "累计观看5个视频可提现",
                                height: 75,
                                fontSize: 36,
                                font: "Microsoft YaHei",
                                color: "#ffeef8",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 69
                        }, {
                            type: "Image",
                            props: {
                                y: 144,
                                x: 19,
                                width: 597,
                                skin: "game/red_pocket_tipsbg.png",
                                sizeGrid: "46,43,49,45,1",
                                height: 133
                            },
                            compId: 70
                        }, {
                            type: "Text",
                            props: {
                                y: 173,
                                x: 53,
                                width: 529,
                                var: "tipspro",
                                valign: "middle",
                                text: "已观看视频(0/5)",
                                height: 75,
                                fontSize: 30,
                                font: "Microsoft YaHei",
                                color: "#ffeef8",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 71
                        }, {
                            type: "Image",
                            props: {
                                y: 297,
                                x: 198,
                                width: 240,
                                var: "videobtn",
                                skin: "game/red_pocket_btn_g.png",
                                sizeGrid: "0,42,0,44,1",
                                height: 105
                            },
                            compId: 72,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 11,
                                    x: 52,
                                    width: 188,
                                    var: "videotext",
                                    valign: "middle",
                                    text: "观看视频",
                                    height: 83,
                                    fontSize: 36,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 73
                            }, {
                                type: "Sprite",
                                props: {
                                    y: 26,
                                    x: 17,
                                    texture: "game/video_big.png"
                                },
                                compId: 74
                            }]
                        }, {
                            type: "Sprite",
                            props: {
                                y: 7,
                                x: 567,
                                var: "hidebtn",
                                texture: "game/red_pocket_vlose.png"
                            },
                            compId: 75
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/red_pocketuibg.png", "game/red_pocket_wallet.png", "game/red_pocket_2.png", "game/red_pocket_vlose.png", "game/red_pocket_qq.png", "game/red_pocket_walletbg.png", "game/red_pocket_walletui1.png", "game/red_pocket_walletui2.png", "game/red_pocket_btn_g.png", "game/red_pocket_10bg.png", "game/red_pocket_tipsbg.png", "game/video_big.png"],
                loadList3D: []
            }, e.PurseUIUI = G, s("ui.view.PurseUIUI", G);
            class H extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(H.uiView);
                }
            }
            H.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 11,
                "selecteID": 12,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/QuestUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 55,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/achiment_UI_bg.png",
                    "game/task_title.png",
                    "game/achi_uibg.png",
                    "game/task_book.png",
                    "game/Toyicon_03.png",
                    "game/close.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "var": "bg", "top": 0, "skin": "game/black.png", "sizeGrid": "20,24,20,26,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,window",
                        "props": { "y": 667, "x": 375, "var": "window", "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 5,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,bg",
                                "props": { "y": 1, "x": -8, "width": 620, "skin": "game/achiment_UI_bg.png", "sizeGrid": "46,54,60,53,1", "name": "bg", "height": 799 },
                                "nodeParent": 5,
                                "label": "bg",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 39, "x": 173, "texture": "game/task_title.png" },
                                        "nodeParent": 9,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 10,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 125, "x": 53, "width": 514, "skin": "game/achi_uibg.png", "sizeGrid": "21,20,23,20,1", "height": 511 },
                                        "nodeParent": 9,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 19,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 657, "x": 87, "texture": "game/task_book.png" },
                                "nodeParent": 5,
                                "label": "Sprite",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 11,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 6, "x": 93, "wordWrap": true, "width": 363, "valign": "middle", "text": "We finally found refuge.Let us have a good sleep.", "styleSkin": "game/Toyicon_03.png", "runtime": "Laya.Text", "leading": 10, "height": 74, "fontSize": 22, "font": "Microsoft YaHei", "color": "#51688c", "bold": true, "align": "left" },
                                        "nodeParent": 11,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 12,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Box",
                                "searchKey": "Box,questobj",
                                "props": { "y": 179, "x": 52, "var": "questobj", "selectEnable": false, "repeatY": 3, "repeatX": 1 },
                                "nodeParent": 5,
                                "label": "questobj",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 22,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,closebtn",
                                "props": { "y": 2, "x": 542, "var": "closebtn", "texture": "game/close.png" },
                                "nodeParent": 5,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 23,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,desc",
                                "props": { "y": 337, "x": 60, "wordWrap": true, "width": 492, "visible": false, "var": "desc", "valign": "middle", "text": "The current task has been done. Please go on building the rest!", "styleSkin": "game/Toyicon_03.png", "runtime": "Laya.Text", "leading": 10, "height": 74, "fontSize": 28, "font": "Microsoft YaHei", "color": "#51688c", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "desc",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 54,
                                "child": [
                                ]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.QuestUIUI = H, s("ui.view.QuestUIUI", H);
            class P extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(P.uiView);
                }
            }
            P.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 4,
                "selecteID": 5,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/RandomResultUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 21,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/achiment_UI_bg.png",
                    "game/rnadom_reward_title.png",
                    "game/close.png",
                    "game/buildBannar_bg.png",
                    "game/random_itembg.png",
                    "game/reward_chest.png",
                    "game/res_gem_icon.png",
                    "game/b_btn_yellow.png",
                    "game/video_big.png",
                    "game/reward_wood.png",
                    "game/res_wood_icon.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bgmask",
                        "props": { "y": 0, "x": 0, "top": 0, "skin": "game/black.png", "sizeGrid": "20,20,20,20,1", "right": 0, "name": "bgmask", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bgmask",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "y": 515, "width": 685, "var": "window", "skin": "game/achiment_UI_bg.png", "sizeGrid": "45,49,52,58", "height": 648, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,title",
                                "props": { "y": 31, "x": 140, "skin": "game/rnadom_reward_title.png", "name": "title" },
                                "nodeParent": 4,
                                "label": "title",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 5,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnclose",
                                "props": { "y": 0, "x": 620, "var": "btnclose", "skin": "game/close.png" },
                                "nodeParent": 4,
                                "label": "btnclose",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 6,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,demobj",
                                "props": { "y": 117, "width": 581, "var": "demobj", "skin": "game/buildBannar_bg.png", "sizeGrid": "31,21,43,18", "height": 207, "centerX": 0 },
                                "nodeParent": 4,
                                "label": "demobj",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 7,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,demiconbg",
                                        "props": { "y": 36, "x": 22, "width": 133, "skin": "game/random_itembg.png", "name": "demiconbg", "height": 134 },
                                        "nodeParent": 7,
                                        "label": "demiconbg",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 8,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 23, "x": 20, "skin": "game/reward_chest.png" },
                                                "nodeParent": 8,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 9,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,demicon",
                                        "props": { "y": 83, "x": 206, "skin": "game/res_gem_icon.png", "name": "demicon" },
                                        "nodeParent": 7,
                                        "label": "demicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 10,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,demresult",
                                        "props": { "y": 67, "x": 256, "width": 92, "var": "demresult", "valign": "middle", "text": "x999", "runtime": "Laya.Text", "height": 72, "fontSize": 30, "font": "Microsoft YaHei", "color": "#000000", "bold": true, "align": "left" },
                                        "nodeParent": 7,
                                        "label": "demresult",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 11,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btngetdem",
                                        "props": { "y": 24, "x": 390, "width": 181, "var": "btngetdem", "skin": "game/b_btn_yellow.png", "sizeGrid": "26,79,51,77", "height": 159 },
                                        "nodeParent": 7,
                                        "label": "btngetdem",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 12,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 49, "x": 60, "width": 60, "skin": "game/video_big.png", "height": 60 },
                                                "nodeParent": 12,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 13,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,woodobj",
                                "props": { "y": 364, "width": 581, "var": "woodobj", "skin": "game/buildBannar_bg.png", "sizeGrid": "31,21,43,18", "height": 207, "centerX": 0 },
                                "nodeParent": 4,
                                "label": "woodobj",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 14,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,woodiconbg",
                                        "props": { "y": 36, "x": 22, "skin": "game/random_itembg.png", "name": "woodiconbg" },
                                        "nodeParent": 14,
                                        "label": "woodiconbg",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 15,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 22, "x": 17, "skin": "game/reward_wood.png" },
                                                "nodeParent": 15,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 16,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,woodicon",
                                        "props": { "y": 76, "x": 203, "skin": "game/res_wood_icon.png", "name": "woodicon" },
                                        "nodeParent": 14,
                                        "label": "woodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 17,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "searchKey": "Text,woodresult",
                                        "props": { "y": 67, "x": 256, "width": 98, "var": "woodresult", "valign": "middle", "text": "x999", "runtime": "Laya.Text", "height": 72, "fontSize": 30, "font": "Microsoft YaHei", "color": "#000000", "bold": true, "align": "left" },
                                        "nodeParent": 14,
                                        "label": "woodresult",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 18,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,btngetwood",
                                        "props": { "y": 24, "x": 390, "width": 180, "var": "btngetwood", "skin": "game/b_btn_yellow.png", "sizeGrid": "26,79,51,77", "height": 159 },
                                        "nodeParent": 14,
                                        "label": "btngetwood",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 19,
                                        "child": [
                                            {
                                                "type": "Image",
                                                "searchKey": "Image",
                                                "props": { "y": 49, "x": 60, "width": 60, "skin": "game/video_big.png", "height": 60 },
                                                "nodeParent": 19,
                                                "label": "Image",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 20,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.RandomResultUIUI = P, s("ui.view.RandomResultUIUI", P);
            class V extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(V.uiView);
                }
            }
            V.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/RankUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        var: "bg",
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "20,20,20,20,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        var: "window",
                        centerY: 0,
                        centerX: 0
                    },
                    compId: 4,
                    child: [{
                        type: "Image",
                        props: {
                            width: 662,
                            skin: "game/achiment_UI_bg.png",
                            sizeGrid: "42,46,54,44,1",
                            height: 968
                        },
                        compId: 5,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 42,
                                x: 136,
                                texture: "game/qq_ranktitle.png"
                            },
                            compId: 6
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 589,
                            var: "closebtn",
                            texture: "game/close.png"
                        },
                        compId: 7
                    }, {
                        type: "WXOpenDataViewer",
                        props: {
                            y: 152,
                            x: 44,
                            width: 570,
                            var: "openviewer",
                            iconSign: "wx",
                            height: 664,
                            runtime: "laya.ui.WXOpenDataViewer"
                        },
                        compId: 8
                    }, {
                        type: "Sprite",
                        props: {
                            y: 842,
                            x: 44,
                            var: "prebtn",
                            texture: "game/b_btn_green.png"
                        },
                        compId: 9,
                        child: [{
                            type: "Text",
                            props: {
                                y: 21,
                                x: 33,
                                text: "Page Up",
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                runtime: "Laya.Text"
                            },
                            compId: 10
                        }, {
                            type: "Script",
                            props: {
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 13
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 842,
                            x: 451,
                            var: "nextbtn",
                            texture: "game/b_btn_green.png"
                        },
                        compId: 11,
                        child: [{
                            type: "Text",
                            props: {
                                y: 21,
                                x: 33,
                                text: "Page Down",
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                runtime: "Laya.Text"
                            },
                            compId: 12
                        }, {
                            type: "Script",
                            props: {
                                y: 0,
                                x: 0,
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 16
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 842,
                            x: 226,
                            width: 209,
                            var: "sharebtn",
                            texture: "game/b_btn_green.png",
                            height: 80
                        },
                        compId: 20,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 14,
                                x: 14,
                                texture: "game/share.png",
                                scaleY: .8,
                                scaleX: .8
                            },
                            compId: 23
                        }, {
                            type: "Text",
                            props: {
                                y: 24,
                                x: 67,
                                text: "分享好友",
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                runtime: "Laya.Text"
                            },
                            compId: 21
                        }, {
                            type: "Script",
                            props: {
                                y: 0,
                                x: 0,
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 22
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/achiment_UI_bg.png", "game/qq_ranktitle.png", "game/close.png", "game/b_btn_green.png", "game/share.png"],
                loadList3D: []
            }, e.RankUIUI = V, s("ui.view.RankUIUI", V);
            class j extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(j.uiView);
                }
            }
            j.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/RedMoneyAnyOneUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,16,23,15,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        width: 636,
                        var: "window",
                        pivotY: 287,
                        pivotX: 318,
                        height: 574,
                        centerY: 0,
                        centerX: 0
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 636,
                            skin: "game/red_pocketuibg.png",
                            sizeGrid: "61,58,50,51,1",
                            name: "bg",
                            height: 574
                        },
                        compId: 4,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 26,
                                x: 154,
                                texture: "game/red_pocket_get_title.png"
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 127,
                                x: 28,
                                width: 581,
                                skin: "game/red_pocket_getbg.png",
                                sizeGrid: "46,47,46,44,1",
                                height: 403
                            },
                            compId: 15
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 15,
                            x: 567,
                            var: "closebtn",
                            texture: "game/red_pocket_vlose.png"
                        },
                        compId: 7
                    }, {
                        type: "Box",
                        props: {
                            y: 145,
                            x: 44,
                            name: "proobj"
                        },
                        compId: 48,
                        child: [{
                            type: "Text",
                            props: {
                                x: 68,
                                width: 412,
                                valign: "middle",
                                text: "红包达到指定数量即可提现一次",
                                height: 36,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#a56c58",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 46
                        }, {
                            type: "Image",
                            props: {
                                y: 58,
                                x: 0,
                                width: 381,
                                skin: "game/red_pocket_countbar2.png",
                                sizeGrid: "0,39,0,39,1",
                                name: "probg",
                                height: 47
                            },
                            compId: 47
                        }, {
                            type: "Image",
                            props: {
                                y: 62,
                                x: 4,
                                width: 0,
                                var: "procore",
                                skin: "game/red_pocket_countbar.png",
                                sizeGrid: "0,39,0,39,1",
                                height: 39
                            },
                            compId: 49
                        }, {
                            type: "Text",
                            props: {
                                y: 65,
                                x: 15,
                                width: 357,
                                var: "protext",
                                valign: "middle",
                                text: "0/5",
                                height: 36,
                                fontSize: 26,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 52
                        }, {
                            type: "Image",
                            props: {
                                y: 45,
                                x: 399,
                                width: 146,
                                var: "withdrawbtn",
                                skin: "game/red_pocket_btn_g.png",
                                sizeGrid: "43,41,45,39",
                                height: 67
                            },
                            compId: 50,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 15,
                                    x: 47,
                                    valign: "middle",
                                    text: "提现",
                                    height: 36,
                                    fontSize: 26,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 51
                            }]
                        }]
                    }, {
                        type: "Box",
                        props: {
                            y: 326,
                            x: 52,
                            var: "redobj"
                        },
                        compId: 20,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: -10,
                                x: -8.5,
                                visible: !1,
                                var: "selecticon",
                                texture: "game/red_pocket_select.png"
                            },
                            compId: 61
                        }, {
                            type: "Sprite",
                            props: {
                                var: "red1",
                                texture: "game/red_pocket.png"
                            },
                            compId: 53,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 98,
                                    x: 16.2353515625,
                                    valign: "middle",
                                    text: "0.05元",
                                    height: 36,
                                    fontSize: 26,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 54
                            }]
                        }, {
                            type: "Sprite",
                            props: {
                                y: 0,
                                x: 140,
                                var: "red2",
                                texture: "game/red_pocket.png"
                            },
                            compId: 55,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 98,
                                    x: 11,
                                    width: 91,
                                    valign: "middle",
                                    text: "0.5元",
                                    height: 36,
                                    fontSize: 26,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 56
                            }]
                        }, {
                            type: "Sprite",
                            props: {
                                y: 0,
                                x: 280,
                                var: "red3",
                                texture: "game/red_pocket.png"
                            },
                            compId: 57,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 98,
                                    x: 16.2353515625,
                                    width: 81.529296875,
                                    valign: "middle",
                                    text: "5元",
                                    height: 36,
                                    fontSize: 26,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 58
                            }]
                        }, {
                            type: "Sprite",
                            props: {
                                y: 0,
                                x: 420,
                                var: "red4",
                                texture: "game/red_pocket.png"
                            },
                            compId: 59,
                            child: [{
                                type: "Text",
                                props: {
                                    y: 98,
                                    x: 16.2353515625,
                                    width: 81.529296875,
                                    valign: "middle",
                                    text: "10元",
                                    height: 36,
                                    fontSize: 26,
                                    font: "Microsoft YaHei",
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center",
                                    runtime: "Laya.Text"
                                },
                                compId: 60
                            }]
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/red_pocketuibg.png", "game/red_pocket_get_title.png", "game/red_pocket_getbg.png", "game/red_pocket_vlose.png", "game/red_pocket_countbar2.png", "game/red_pocket_countbar.png", "game/red_pocket_btn_g.png", "game/red_pocket_select.png", "game/red_pocket.png"],
                loadList3D: []
            }, e.RedMoneyAnyOneUIUI = j, s("ui.view.RedMoneyAnyOneUIUI", j);
            class R extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(R.uiView);
                }
            }
            R.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/RedMoneyWeekUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,16,23,15,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        width: 637,
                        var: "window",
                        pivotY: 457,
                        pivotX: 319,
                        height: 914,
                        centerY: 0,
                        centerX: 0
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            width: 637,
                            skin: "game/red_pocketuibg.png",
                            sizeGrid: "61,58,50,51,1",
                            name: "bg",
                            height: 914
                        },
                        compId: 4,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 26,
                                x: 187,
                                texture: "game/red_pocket_7day_title.png"
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 127,
                                x: 28,
                                width: 581,
                                skin: "game/red_pocket_7day_ui.png",
                                sizeGrid: "46,47,46,44,1",
                                height: 403
                            },
                            compId: 15
                        }]
                    }, {
                        type: "Sprite",
                        props: {
                            y: 15,
                            x: 567,
                            var: "closebtn",
                            texture: "game/red_pocket_vlose.png"
                        },
                        compId: 7
                    }, {
                        type: "Box",
                        props: {
                            y: 171,
                            x: 53,
                            var: "redobj"
                        },
                        compId: 20
                    }, {
                        type: "Image",
                        props: {
                            y: 577,
                            x: 67,
                            width: 284,
                            var: "openbtn",
                            skin: "game/red_pocket_btn_g.png",
                            sizeGrid: "0,45,0,42",
                            height: 105
                        },
                        compId: 12,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 31.5,
                                x: 31,
                                texture: "game/red_pocket_video.png"
                            },
                            compId: 16
                        }, {
                            type: "Text",
                            props: {
                                y: 35.5,
                                x: 89,
                                width: 159,
                                var: "videocount",
                                valign: "middle",
                                text: "看视频(0/5)",
                                height: 34,
                                fontSize: 30,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 14
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 577,
                            x: 397,
                            width: 170,
                            var: "withdrawbtn",
                            skin: "game/red_pocket_btn_y.png",
                            sizeGrid: "0,42,0,44,1",
                            height: 105
                        },
                        compId: 13,
                        child: [{
                            type: "Text",
                            props: {
                                y: 9,
                                x: 25,
                                width: 120,
                                var: "withdrawtext",
                                valign: "middle",
                                text: "提现",
                                height: 83,
                                fontSize: 30,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 17
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 719,
                            x: 32,
                            width: 573,
                            skin: "game/red_pocket_10bg.png",
                            sizeGrid: "17,26,19,27",
                            height: 158
                        },
                        compId: 10,
                        child: [{
                            type: "Text",
                            props: {
                                y: 16,
                                x: 12,
                                width: 550,
                                valign: "top",
                                text: "活动规则:",
                                height: 26,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 11
                        }, {
                            type: "Text",
                            props: {
                                y: 42,
                                x: 12,
                                wordWrap: !0,
                                width: 553,
                                valign: "top",
                                text: "1.每天观看一定次数视频广告,即可获得红包（可立即提现）,第五天、第六天和第七天最高可获得40元红包",
                                leading: 10,
                                height: 58,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 18
                        }, {
                            type: "Text",
                            props: {
                                y: 110,
                                x: 12,
                                wordWrap: !0,
                                width: 550,
                                valign: "top",
                                text: "2.本提现奖励金额不做任何门槛,可立即提现.",
                                leading: 10,
                                height: 53,
                                fontSize: 22,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 19
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/red_pocketuibg.png", "game/red_pocket_7day_title.png", "game/red_pocket_7day_ui.png", "game/red_pocket_vlose.png", "game/red_pocket_btn_g.png", "game/red_pocket_video.png", "game/red_pocket_btn_y.png", "game/red_pocket_10bg.png"],
                loadList3D: []
            }, e.RedMoneyWeekUIUI = R, s("ui.view.RedMoneyWeekUIUI", R);
            class E extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(E.uiView);
                }
            }
            E.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/RewardUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,16,23,15,1",
                        right: 0,
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 667,
                        x: 375,
                        var: "window",
                        centerY: 0,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            skin: "game/normal_frameBG.png",
                            sizeGrid: "93,0,25,0,1",
                            name: "bg",
                            height: 351
                        },
                        compId: 4
                    }, {
                        type: "Text",
                        props: {
                            y: 12,
                            x: 197,
                            width: 159,
                            valign: "middle",
                            text: "奖励",
                            height: 53,
                            fontSize: 42,
                            font: "Microsoft YaHei",
                            color: "#ffffff",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 9
                    }, {
                        type: "Sprite",
                        props: {
                            y: 88,
                            x: 230,
                            texture: "game/builditem_iconBG.png"
                        },
                        compId: 6,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 23,
                                x: 22,
                                texture: "game/game_wood.png"
                            },
                            compId: 8
                        }]
                    }, {
                        type: "Text",
                        props: {
                            y: 193,
                            x: 197,
                            width: 159,
                            var: "rewardnum",
                            valign: "middle",
                            text: "1k",
                            height: 34,
                            fontSize: 32,
                            font: "Microsoft YaHei",
                            color: "#474444",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 14
                    }, {
                        type: "Sprite",
                        props: {
                            y: 12,
                            x: 494,
                            var: "closebtn",
                            texture: "game/close_white.png"
                        },
                        compId: 7
                    }, {
                        type: "Image",
                        props: {
                            y: 258,
                            x: 202,
                            var: "getbtn",
                            skin: "game/achiment_btn.png"
                        },
                        compId: 10,
                        child: [{
                            type: "Text",
                            props: {
                                y: 12,
                                x: 24,
                                width: 100,
                                var: "desc",
                                valign: "middle",
                                text: "Claim",
                                height: 46,
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 11
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/normal_frameBG.png", "game/builditem_iconBG.png", "game/game_wood.png", "game/close_white.png", "game/achiment_btn.png"],
                loadList3D: []
            }, e.RewardUIUI = E, s("ui.view.RewardUIUI", E);
            class O extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(O.uiView);
                }
            }
            O.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 37,
                "selecteID": 45,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/SeaBoxUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 65,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/newyear_uibg.png",
                    "game/task_title.png",
                    "game/close_white.png",
                    "game/chest_img.png",
                    "game/game_wood.png",
                    "game/b_btn_green.png",
                    "game/res_gem_icon.png",
                    "comp/image.png",
                    "game/b_btn_yellow.png",
                    "game/video2.png",
                    "game/box_share.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "var": "bg", "top": 0, "skin": "game/black.png", "sizeGrid": "23,24,27,24,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,window",
                        "props": { "width": 576, "var": "window", "skin": "game/newyear_uibg.png", "sizeGrid": "91,254,14,196,1", "height": 643, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttitle",
                                "props": { "y": 13, "x": 86, "width": 404, "var": "txttitle", "valign": "middle", "text": "The gift of the sea", "styleSkin": "game/task_title.png", "runtime": "Laya.Text", "height": 64, "fontSize": 44, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "txttitle",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 33,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,closebtn",
                                "props": { "y": 19, "x": 511, "var": "closebtn", "skin": "game/close_white.png" },
                                "nodeParent": 4,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 34,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,icon",
                                "props": { "y": 104, "x": 53.5, "var": "icon", "skin": "game/chest_img.png" },
                                "nodeParent": 4,
                                "label": "icon",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 35,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": 242, "x": 119, "width": 53, "var": "moodicon", "skin": "game/game_wood.png", "height": 53 },
                                        "nodeParent": 35,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 49,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,txtresult",
                                        "props": { "y": 247, "x": 167, "width": 210, "var": "txtresult", "valign": "middle", "text": "Wood +3k", "runtime": "Laya.Text", "height": 51, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 35,
                                        "label": "txtresult",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 48,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,txttips",
                                "props": { "y": 418, "x": 14, "wordWrap": true, "width": 545, "var": "txttips", "valign": "middle", "text": "No matter how barren the waters are, there is new hope\t", "styleSkin": "game/task_title.png", "runtime": "Laya.Text", "height": 95, "fontSize": 26, "font": "Microsoft YaHei", "color": "#7a7a7a", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "txttips",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 36,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnopen",
                                "props": { "y": 563, "x": 168, "width": 221, "var": "btnopen", "skin": "game/b_btn_green.png", "sizeGrid": "39,82,40,79,1", "pivotY": 45, "pivotX": 114, "height": 90 },
                                "nodeParent": 4,
                                "label": "btnopen",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 37,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,damicon",
                                        "props": { "y": 10, "x": 59, "width": 33, "var": "damicon", "skin": "game/res_gem_icon.png", "height": 32 },
                                        "nodeParent": 37,
                                        "label": "damicon",
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 41,
                                        "child": [
                                            {
                                                "type": "Text",
                                                "searchKey": "Text,txtcount",
                                                "props": { "y": 3, "x": 24.5, "width": 87, "var": "txtcount", "valign": "middle", "text": "999", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 34, "fontSize": 30, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 41,
                                                "label": "txtcount",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 42,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,damtext",
                                        "props": { "y": 41, "x": 1, "wordWrap": true, "width": 218, "var": "damtext", "valign": "middle", "text": "Open the treasure chest", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 41, "fontSize": 22, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 37,
                                        "label": "damtext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 45,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 37,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 50,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnvedio",
                                "props": { "y": 563, "x": 420, "width": 221, "var": "btnvedio", "skin": "game/b_btn_yellow.png", "sizeGrid": "39,82,40,79,1", "pivotY": 45, "pivotX": 114, "height": 90 },
                                "nodeParent": 4,
                                "label": "btnvedio",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 38,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,adicon",
                                        "props": { "y": 10, "x": 95, "var": "adicon", "skin": "game/video2.png" },
                                        "nodeParent": 38,
                                        "label": "adicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 39,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,adtext",
                                        "props": { "y": 42, "x": 2, "wordWrap": true, "width": 216, "var": "adtext", "valign": "middle", "text": "Open the treasure chest", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 39, "fontSize": 22, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 38,
                                        "label": "adtext",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 47,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 38,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 51,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnshare",
                                "props": { "y": 513, "x": 915, "width": 228, "visible": false, "var": "btnshare", "sizeGrid": "32,83,31,73,1", "pivotY": 45, "pivotX": 114, "height": 89 },
                                "nodeParent": 4,
                                "label": "btnshare",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 56,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 7, "x": 96 },
                                        "nodeParent": 56,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 57,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 50, "x": 64, "width": 100, "valign": "middle", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 28, "fontSize": 22, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 56,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 58,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 56,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 59,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,btnfree",
                                "props": { "y": 563, "x": 308, "width": 187, "var": "btnfree", "skin": "game/b_btn_green.png", "sizeGrid": "32,83,31,73,1", "pivotY": 45, "pivotX": 114, "height": 89 },
                                "nodeParent": 4,
                                "label": "btnfree",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 60,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 1, "x": 2, "wordWrap": true, "width": 184, "valign": "middle", "text": "Open the treasure chest", "styleSkin": "comp/image.png", "runtime": "Laya.Text", "height": 80, "fontSize": 25, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 60,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 63,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 60,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 64,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.SeaBoxUIUI = O, s("ui.view.SeaBoxUIUI", O);
            class z extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(z.uiView);
                }
            }
            z.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 93,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/ShopUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 96,
                "loadList3D": [
                ],
                "loadList": [
                    "game/build_uiBG.jpg",
                    "game/res_num_bg.png",
                    "game/res_icon_bg.png",
                    "game/res_gem_icon.png",
                    "game/res_wood_icon.png",
                    "game/buildUI_bg.png",
                    "game/build_title.png",
                    "game/shop_biggift.png",
                    "game/shop_doubleBG.png",
                    "game/b_btn_redGet.png",
                    "game/video2.png",
                    "game/close.png",
                    "game/bannar_bg.png",
                    "game/bannarL_1_friend.png",
                    "game/bannarR_1_good.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/build_uiBG.jpg", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ],
                        "$HIDDEN": true
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,diamondobj",
                        "props": { "y": 65, "x": 39, "var": "diamondobj" },
                        "nodeParent": 2,
                        "label": "diamondobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 36,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 36,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 38,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 36,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 39,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 12, "x": 9, "texture": "game/res_gem_icon.png" },
                                        "nodeParent": 39,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 40,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,diamondnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "diamondnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 36,
                                "label": "diamondnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 41,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,resobj",
                        "props": { "y": 65, "x": 267, "var": "resobj" },
                        "nodeParent": 2,
                        "label": "resobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 37,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 37,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 42,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 37,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 43,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": 5, "x": 9, "var": "moodicon", "skin": "game/res_wood_icon.png" },
                                        "nodeParent": 43,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 44,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,resnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "resnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 37,
                                "label": "resnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 45,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "x": 32, "width": 685, "var": "bg", "top": 240, "skin": "game/buildUI_bg.png", "sizeGrid": "46,54,57,48,1", "bottom": 290 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,title",
                                "props": { "y": -94, "x": 216.5, "texture": "game/build_title.png", "name": "title" },
                                "nodeParent": 4,
                                "label": "title",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 20, "x": 81, "text": "Stall", "strokeColor": "#ffffff", "stroke": 5, "runtime": "Laya.Text", "fontSize": 45, "font": "Microsoft YaHei", "color": "#d14644", "bold": true },
                                        "nodeParent": 9,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 88,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,supergift",
                                "props": { "x": 26.5, "var": "supergift", "top": 35, "skin": "game/shop_biggift.png" },
                                "nodeParent": 4,
                                "label": "supergift",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 63,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 221, "x": 531, "texture": "game/shop_doubleBG.png" },
                                        "nodeParent": 63,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 65,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,videobtn",
                                        "props": { "y": 221, "x": 191, "width": 249, "var": "videobtn", "skin": "game/b_btn_redGet.png", "sizeGrid": "0,26,0,28", "height": 70 },
                                        "nodeParent": 63,
                                        "label": "videobtn",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 89,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Sprite",
                                                "searchKey": "Sprite,adicon",
                                                "props": { "y": 14, "x": 5, "width": 39, "var": "adicon", "texture": "game/video2.png", "height": 37 },
                                                "nodeParent": 89,
                                                "label": "adicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 90,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,videotext",
                                                "props": { "y": 4, "x": 48, "wordWrap": true, "width": 203, "var": "videotext", "valign": "middle", "text": "Watch the ad to receive (0/5)", "runtime": "Laya.Text", "height": 60, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 89,
                                                "label": "videotext",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 91,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,listobj",
                                "props": { "x": 48, "width": 589, "var": "listobj", "top": 379, "spaceY": 27, "spaceX": 35, "selectEnable": false, "repeatY": 2, "repeatX": 3, "height": 375, "elasticEnabled": true, "bottom": 53 },
                                "nodeParent": 4,
                                "label": "listobj",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 67,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,closebtn",
                                "props": { "y": -11, "x": 628, "width": 58, "var": "closebtn", "texture": "game/close.png", "height": 55 },
                                "nodeParent": 4,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 34,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,htobj",
                        "props": { "x": -703, "width": 601, "visible": false, "var": "htobj", "skin": "game/bannar_bg.png", "sizeGrid": "53,41,50,30,1", "height": 179, "bottom": 290 },
                        "nodeParent": 2,
                        "label": "htobj",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 93,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 19, "x": -45, "width": 45, "skin": "game/bannarL_1_friend.png", "sizeGrid": "12,0,14,0" },
                                "nodeParent": 93,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 94,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 19, "x": 601, "texture": "game/bannarR_1_good.png" },
                                "nodeParent": 93,
                                "label": "Sprite",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 95,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "List",
                                "searchKey": "List,hutlist",
                                "props": { "y": 21, "x": 0, "width": 589, "var": "hutlist", "spaceY": 0, "spaceX": 10, "selectEnable": false, "repeatY": 1, "repeatX": 1, "height": 158, "elasticEnabled": true },
                                "nodeParent": 93,
                                "label": "hutlist",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 92,
                                "child": [
                                ]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.ShopUIUI = z, s("ui.view.ShopUIUI", z);
            class N extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(N.uiView);
                }
            }
            N.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/SignUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "20,16,22,17,1",
                        right: 0,
                        name: "bg",
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Box",
                    props: {
                        y: 609,
                        x: 375,
                        var: "window",
                        centerY: -58,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 5,
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 0,
                            width: 620,
                            skin: "game/buildUI_bg.png",
                            sizeGrid: "42,57,63,53,1",
                            name: "bg",
                            height: 681
                        },
                        compId: 4,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 36,
                                x: 166,
                                texture: "game/sign_title.png"
                            },
                            compId: 24
                        }, {
                            type: "Sprite",
                            props: {
                                y: 2,
                                x: 551,
                                var: "btnclose",
                                texture: "game/close.png"
                            },
                            compId: 7
                        }]
                    }, {
                        type: "Box",
                        props: {
                            y: 131,
                            x: 70,
                            width: 0,
                            var: "signObj",
                            height: 0
                        },
                        compId: 8
                    }, {
                        type: "Image",
                        props: {
                            y: 567,
                            x: 189,
                            width: 203,
                            var: "receivebtn",
                            skin: "game/b_btn_green.png",
                            sizeGrid: "32,83,31,73,1",
                            pivotY: 40,
                            pivotX: 102,
                            label: "label",
                            height: 90
                        },
                        compId: 9,
                        child: [{
                            type: "Text",
                            props: {
                                y: 27,
                                x: 69.5,
                                valign: "middle",
                                text: "Claim",
                                styleSkin: "game/sign_title.png",
                                strokeColor: "#279f11",
                                stroke: 4,
                                fontSize: 30,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 22
                        }, {
                            type: "Script",
                            props: {
                                y: 10,
                                x: 10,
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 47
                        }]
                    }, {
                        type: "Box",
                        props: {
                            y: 697,
                            x: 322,
                            width: 140,
                            visible: !1,
                            var: "receivebtn_tt",
                            styleSkin: "game/b_btn_green.png",
                            sizeGrid: "32,83,31,73,1",
                            label: "label",
                            height: 37,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 53,
                        child: [{
                            type: "Text",
                            props: {
                                y: 0,
                                x: 0,
                                width: 138,
                                valign: "middle",
                                text: "Claim",
                                styleSkin: "game/sign_title.png",
                                height: 33,
                                fontSize: 32,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 54
                        }, {
                            type: "Script",
                            props: {
                                y: 10,
                                x: 10,
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 55
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 569,
                            x: 428,
                            width: 217,
                            var: "doublebtn",
                            skin: "game/b_btn_yellow.png",
                            sizeGrid: "32,83,31,73,1",
                            pivotY: 41,
                            pivotX: 109,
                            label: "label",
                            height: 90
                        },
                        compId: 18,
                        child: [{
                            type: "Image",
                            props: {
                                y: 40,
                                x: 32,
                                width: 39,
                                var: "videoicon",
                                skin: "game/ad_video.png",
                                pivotY: 16,
                                pivotX: 16,
                                height: 34
                            },
                            compId: 20
                        }, {
                            type: "Text",
                            props: {
                                y: 26.5,
                                x: 71,
                                valign: "middle",
                                text: "Claim X2",
                                styleSkin: "game/sign_title.png",
                                strokeColor: "#cc561f",
                                stroke: 4,
                                fontSize: 30,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 23
                        }, {
                            type: "Script",
                            props: {
                                y: 10,
                                x: 10,
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 48
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 565,
                            width: 303,
                            visible: !1,
                            var: "doublebtn_tt",
                            skin: "game/b_btn_yellow.png",
                            sizeGrid: "14,71,60,73",
                            label: "label",
                            height: 111,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 56,
                        child: [{
                            type: "Image",
                            props: {
                                y: 51,
                                x: 55,
                                width: 45,
                                skin: "game/ad_video.png",
                                height: 41,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 57
                        }, {
                            type: "Text",
                            props: {
                                y: 30,
                                x: 85,
                                width: 171,
                                valign: "middle",
                                text: "Claim X2",
                                styleSkin: "game/sign_title.png",
                                strokeColor: "#cc561f",
                                stroke: 5,
                                height: 50,
                                fontSize: 36,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 58
                        }, {
                            type: "Script",
                            props: {
                                y: 10,
                                x: 10,
                                runtime: "script/ScaleButtonScript.ts"
                            },
                            compId: 59
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/buildUI_bg.png", "game/sign_title.png", "game/close.png", "game/b_btn_green.png", "game/b_btn_yellow.png", "game/ad_video.png"],
                loadList3D: []
            }, e.SignUIUI = N, s("ui.view.SignUIUI", N);
            class Y extends n {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(Y.uiView);
                }
            }
            Y.uiView = {
                "x": 0,
                "type": "View",
                "selectedBox": 13,
                "selecteID": 15,
                "searchKey": "View",
                "props": { "width": 729, "height": 1188 },
                "nodeParent": -1,
                "maxID": 18,
                "loadList3D": [
                ],
                "loadList": [
                    "game/story_img_3.png",
                    "game/story_img_mask.png",
                    "game/story_textbg.png",
                    "game/b_btn_green.png",
                    "game/Video_record.png",
                    "game/taskbar2.png"],
                "label": "View",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,storypage,storypage",
                        "props": { "width": 729, "var": "storypage", "skin": "game/story_img_3.png", "name": "storypage", "height": 1120 },
                        "nodeParent": 2,
                        "label": "storypage",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 8,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,unlockmask,unlockmask",
                                "props": { "x": 36, "var": "unlockmask", "skin": "game/story_img_mask.png", "name": "unlockmask", "centerY": 12 },
                                "nodeParent": 8,
                                "label": "unlockmask",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,tipbg",
                                        "props": { "y": 421, "x": 103, "width": 450, "skin": "game/story_textbg.png", "sizeGrid": "45,37,42,45,1", "name": "tipbg", "height": 139, "centerY": 0, "centerX": 0 },
                                        "nodeParent": 9,
                                        "label": "tipbg",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 10,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,txtunlock1",
                                                "props": { "y": 2, "x": 5, "wordWrap": true, "width": 440, "var": "txtunlock1", "valign": "middle", "text": "Watch the video to unlock the comic", "runtime": "Laya.Text", "height": 64, "fontSize": 35, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 10,
                                                "label": "txtunlock1",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 11,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text,txtunlock2,txtunlock2",
                                                "props": { "y": 69, "x": 5, "wordWrap": true, "width": 440, "var": "txtunlock2", "valign": "middle", "text": "Know the truth about the world", "runtime": "Laya.Text", "name": "txtunlock2", "height": 60, "fontSize": 35, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 10,
                                                "label": "txtunlock2",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 12,
                                                "child": [
                                                ]
                                            }]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image,btnunockpage,btnunockpage",
                                        "props": { "y": 629, "x": 328, "width": 290, "var": "btnunockpage", "skin": "game/b_btn_green.png", "sizeGrid": "0,71,0,73", "name": "btnunockpage", "height": 80, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                                        "nodeParent": 9,
                                        "label": "btnunockpage",
                                        "isOpen": true,
                                        "isDirectory": true,
                                        "isAniNode": true,
                                        "hasChild": true,
                                        "compId": 13,
                                        "child": [
                                            {
                                                "x": 60,
                                                "type": "Image",
                                                "searchKey": "Image,typeicon,typeicon",
                                                "props": { "y": 37, "x": 54, "width": 44, "var": "typeicon", "skin": "game/Video_record.png", "name": "typeicon", "height": 45, "anchorY": 0.5, "anchorX": 0.5 },
                                                "nodeParent": 13,
                                                "label": "typeicon",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 14,
                                                "child": [
                                                ]
                                            },
                                            {
                                                "x": 60,
                                                "type": "Text",
                                                "searchKey": "Text",
                                                "props": { "y": 5, "x": 62, "wordWrap": true, "width": 223, "valign": "middle", "text": "Unlock comics", "runtime": "Laya.Text", "height": 68, "fontSize": 36, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                                "nodeParent": 13,
                                                "label": "Text",
                                                "isDirectory": false,
                                                "isAniNode": true,
                                                "hasChild": false,
                                                "compId": 15,
                                                "child": [
                                                ]
                                            }]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,slidetipobj,slidetipobj",
                                "props": { "width": 300, "var": "slidetipobj", "skin": "game/taskbar2.png", "sizeGrid": "12,15,10,16,1", "name": "slidetipobj", "height": 65, "centerX": 0, "bottom": -65 },
                                "nodeParent": 8,
                                "label": "slidetipobj",
                                "isOpen": null,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 16,
                                "child": [
                                    {
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 3, "x": 4, "width": 291, "valign": "middle", "text": "左右滑动切换页面", "runtime": "Laya.Text", "height": 63, "fontSize": 32, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 16,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 17,
                                        "child": [
                                        ]
                                    }]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.StoryPageItemUI = Y, s("ui.view.StoryPageItemUI", Y);
            class W extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(W.uiView);
                }
            }
            W.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/StoryUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "21,22,30,28,1",
                        right: 0,
                        name: "bgmask",
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "List",
                    props: {
                        y: 682,
                        x: 375,
                        width: 729,
                        var: "pagelist",
                        spaceY: 1,
                        spaceX: 5,
                        name: "pagelist",
                        height: 1188,
                        elasticEnabled: !0,
                        centerY: 15,
                        centerX: 0,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 5,
                    child: [{
                        type: "View",
                        props: {
                            width: 729,
                            var: "listview",
                            runtime: "view/StoryPageItem.ts",
                            renderType: "render",
                            height: 1188
                        },
                        compId: 6
                    }, {
                        type: "Image",
                        props: {
                            y: 0,
                            x: 650,
                            var: "btnclose",
                            skin: "game/story_close.png"
                        },
                        compId: 8
                    }]
                }],
                loadList: ["game/black.png", "game/story_close.png"],
                loadList3D: []
            }, e.StoryUIUI = W, s("ui.view.StoryUIUI", W);
            class X extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(X.uiView);
                }
            }
            X.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 11,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/SurvivorInfoUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 12,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/info_uibg.png",
                    "game/close_white.png",
                    "game/info_messagebg.png",
                    "game/character_01.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/black.png", "sizeGrid": "21,20,24,21,1", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,window",
                        "props": { "y": 667, "x": 375, "var": "window", "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 5,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,bg",
                                "props": { "width": 464, "skin": "game/info_uibg.png", "sizeGrid": "94,221,21,193,1", "name": "bg", "height": 353 },
                                "nodeParent": 5,
                                "label": "bg",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 4,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite,closebtn",
                                        "props": { "y": 17, "x": 406, "var": "closebtn", "texture": "game/close_white.png" },
                                        "nodeParent": 4,
                                        "label": "closebtn",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 6,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 17, "x": 130, "width": 203, "valign": "middle", "text": "Details", "runtime": "Laya.Text", "height": 54, "fontSize": 36, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 4,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 7,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 158, "x": 194, "width": 245, "skin": "game/info_messagebg.png", "sizeGrid": "23,25,27,23,1", "height": 159 },
                                        "nodeParent": 4,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 10,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,icon",
                                "props": { "y": 86, "x": 11, "var": "icon", "skin": "game/character_01.png" },
                                "nodeParent": 5,
                                "label": "icon",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 8,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,iconname",
                                "props": { "y": 79, "x": 166, "wordWrap": true, "width": 289, "var": "iconname", "valign": "middle", "text": "Sam", "runtime": "Laya.Text", "height": 80, "fontSize": 30, "font": "Microsoft YaHei", "color": "#5f5a57", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "iconname",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 9,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,desc",
                                "props": { "y": 161, "x": 199, "wordWrap": true, "width": 237, "var": "desc", "valign": "middle", "runtime": "Laya.Text", "leading": 6, "height": 157, "fontSize": 18, "font": "Microsoft YaHei", "color": "#7c7977", "bold": true, "align": "center" },
                                "nodeParent": 5,
                                "label": "desc",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 11,
                                "child": [
                                ]
                            }]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.SurvivorInfoUIUI = X, s("ui.view.SurvivorInfoUIUI", X);
            class F extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(F.uiView);
                }
            }
            F.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 2,
                "selecteID": 6,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/SurvivorUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 111,
                "loadList3D": [
                ],
                "loadList": [
                    "game/build_uiBG.jpg",
                    "game/res_num_bg.png",
                    "game/res_icon_bg.png",
                    "game/res_gem_icon.png",
                    "game/res_wood_icon.png",
                    "game/buildUI_bg.png",
                    "game/build_title.png",
                    "game/close.png",
                    "game/floorBG.png",
                    "game/tips.png",
                    "game/floorBG2.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "top": 0, "skin": "game/build_uiBG.jpg", "right": 0, "name": "bg", "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ],
                        "$HIDDEN": true
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,diamondobj",
                        "props": { "y": 65, "x": 39, "var": "diamondobj" },
                        "nodeParent": 2,
                        "label": "diamondobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 36,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 36,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 38,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 36,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 39,
                                "child": [
                                    {
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 12, "x": 9, "texture": "game/res_gem_icon.png" },
                                        "nodeParent": 39,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 40,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,diamondnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "diamondnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 36,
                                "label": "diamondnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 41,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,resobj",
                        "props": { "y": 65, "x": 267, "var": "resobj" },
                        "nodeParent": 2,
                        "label": "resobj",
                        "isOpen": null,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 37,
                        "child": [
                            {
                                "type": "Image",
                                "searchKey": "Image",
                                "props": { "y": 7, "x": 55, "width": 145, "skin": "game/res_num_bg.png", "sizeGrid": "16,18,19,20,1", "height": 51 },
                                "nodeParent": 37,
                                "label": "Image",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 42,
                                "child": [
                                ]
                            },
                            {
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "texture": "game/res_icon_bg.png" },
                                "nodeParent": 37,
                                "label": "Sprite",
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 43,
                                "child": [
                                    {
                                        "type": "Image",
                                        "searchKey": "Image,moodicon",
                                        "props": { "y": 5, "x": 9, "var": "moodicon", "skin": "game/res_wood_icon.png" },
                                        "nodeParent": 43,
                                        "label": "moodicon",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 44,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "type": "Text",
                                "searchKey": "Text,resnum",
                                "props": { "y": 15, "x": 62, "width": 133, "var": "resnum", "valign": "middle", "text": "100k", "runtime": "Laya.Text", "height": 41, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 37,
                                "label": "resnum",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 45,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "y": 265, "x": 32, "width": 685, "skin": "game/buildUI_bg.png", "sizeGrid": "46,54,57,48,1", "name": "bg", "height": 967 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,title",
                                "props": { "y": -122, "x": 223, "width": 212, "skin": "game/build_title.png", "name": "title", "height": 73 },
                                "nodeParent": 4,
                                "label": "title",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 9,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 0, "x": 0, "width": 211, "valign": "middle", "text": "Warder", "strokeColor": "#ffffff", "stroke": 5, "runtime": "Laya.Text", "height": 73, "fontSize": 38, "font": "Microsoft YaHei", "color": "#b42624", "bold": true, "align": "center" },
                                        "nodeParent": 9,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 110,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,closebtn",
                                "props": { "y": 0, "x": 628, "width": 58, "var": "closebtn", "texture": "game/close.png", "height": 55 },
                                "nodeParent": 4,
                                "label": "closebtn",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 34,
                                "child": [
                                ]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,tabobj",
                        "props": { "y": 238, "x": 61, "width": 590, "var": "tabobj", "height": 70 },
                        "nodeParent": 2,
                        "label": "tabobj",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 6,
                        "child": [
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,firstbtn",
                                "props": { "y": 0, "x": -2, "width": 140, "var": "firstbtn", "skin": "game/floorBG.png", "height": 70 },
                                "nodeParent": 6,
                                "label": "firstbtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 5,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 12, "x": 14, "width": 112, "valign": "middle", "text": "Partner", "runtime": "Laya.Text", "height": 46, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 5,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 7,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": 50, "x": 895, "visible": false },
                                        "nodeParent": 5,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 63,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,secondbtn",
                                "props": { "y": 0, "x": 164, "width": 140, "var": "secondbtn", "skin": "game/floorBG2.png", "height": 70 },
                                "nodeParent": 6,
                                "label": "secondbtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 48,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 24, "x": 5, "text": "Entourage", "runtime": "Laya.Text", "fontSize": 25, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 48,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 49,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Sprite",
                                        "searchKey": "Sprite",
                                        "props": { "y": -120, "x": 734, "visible": false },
                                        "nodeParent": 48,
                                        "label": "Sprite",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 64,
                                        "child": [
                                        ]
                                    }]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "List",
                        "searchKey": "List,firstlist",
                        "props": { "y": 350, "x": 84, "width": 584, "var": "firstlist", "spaceY": 35, "spaceX": 32, "selectEnable": false, "repeatY": 3, "repeatX": 3, "height": 745, "elasticEnabled": true },
                        "nodeParent": 2,
                        "label": "firstlist",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 8,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "List",
                        "searchKey": "List,secondlist",
                        "props": { "y": 350, "x": 84, "width": 584, "visible": false, "var": "secondlist", "spaceY": 35, "spaceX": 32, "selectEnable": false, "repeatY": 3, "repeatX": 3, "height": 745, "elasticEnabled": true },
                        "nodeParent": 2,
                        "label": "secondlist",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 56,
                        "child": [
                        ]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.SurvivorUIUI = F, s("ui.view.SurvivorUIUI", F);
            class Q extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(Q.uiView);
                }
            }
            Q.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/TipsUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "20,21,25,24,1",
                        right: 0,
                        name: "bgmask",
                        left: 0,
                        bottom: 0
                    },
                    compId: 3
                }, {
                    type: "Image",
                    props: {
                        x: 45,
                        var: "tipimg",
                        top: 90,
                        skin: "game/add_desktop.png",
                        centerX: 0
                    },
                    compId: 4
                }],
                loadList: ["game/black.png", "game/add_desktop.png"],
                loadList3D: []
            }, e.TipsUIUI = Q, s("ui.view.TipsUIUI", Q);
            class q extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(q.uiView);
                }
            }
            q.uiView = {
                "x": 0,
                "type": "BaseView",
                "selectedBox": 4,
                "selecteID": 38,
                "searchKey": "BaseView",
                "props": { "width": 750, "top": 0, "runtime": "view/UnlockSkinUI.ts", "right": 0, "left": 0, "height": 1334, "bottom": 0 },
                "nodeParent": -1,
                "maxID": 48,
                "loadList3D": [
                ],
                "loadList": [
                    "game/black.png",
                    "game/new_Lightbg.png",
                    "game/new_nameBG.png",
                    "game/new_title.png",
                    "game/character_01.png",
                    "game/new_rareBG.png",
                    "game/b_btn_green.png",
                    "game/newyear_lantern.png"],
                "label": "BaseView",
                "isOpen": true,
                "isDirectory": true,
                "isAniNode": true,
                "hasChild": true,
                "compId": 2,
                "child": [
                    {
                        "x": 15,
                        "type": "Image",
                        "searchKey": "Image,bg",
                        "props": { "var": "bg", "top": 0, "skin": "game/black.png", "sizeGrid": "23,24,27,24,1", "right": 0, "left": 0, "bottom": 0 },
                        "nodeParent": 2,
                        "label": "bg",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 3,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Box",
                        "searchKey": "Box,window",
                        "props": { "width": 660, "var": "window", "height": 817, "centerY": 0, "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 },
                        "nodeParent": 2,
                        "label": "window",
                        "isOpen": true,
                        "isDirectory": true,
                        "isAniNode": true,
                        "hasChild": true,
                        "compId": 4,
                        "child": [
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite",
                                "props": { "y": 114, "x": 81, "texture": "game/new_Lightbg.png" },
                                "nodeParent": 4,
                                "label": "Sprite",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 35,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Image",
                                        "searchKey": "Image",
                                        "props": { "y": 32, "x": 121, "width": 256, "skin": "game/new_nameBG.png", "sizeGrid": "0,27,0,25", "height": 58 },
                                        "nodeParent": 35,
                                        "label": "Image",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 36,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,titlebg",
                                "props": { "texture": "game/new_title.png", "name": "titlebg" },
                                "nodeParent": 4,
                                "label": "titlebg",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 33,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,title",
                                        "props": { "y": 18, "x": 116, "width": 427, "var": "title", "valign": "middle", "text": "You get", "strokeColor": "#de5957", "stroke": 7, "runtime": "Laya.Text", "height": 94, "fontSize": 80, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 33,
                                        "label": "title",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 34,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,skinname",
                                "props": { "y": 150, "x": 207, "wordWrap": true, "width": 248, "var": "skinname", "valign": "middle", "text": "New crew!", "runtime": "Laya.Text", "height": 53, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "skinname",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 38,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,icon",
                                "props": { "y": 393, "x": 330, "var": "icon", "skin": "game/character_01.png", "anchorY": 0.5, "anchorX": 0.5 },
                                "nodeParent": 4,
                                "label": "icon",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 39,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Text",
                                "searchKey": "Text,desc",
                                "props": { "y": 558, "x": 100, "wordWrap": true, "width": 462, "var": "desc", "valign": "middle", "runtime": "Laya.Text", "height": 71, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                "nodeParent": 4,
                                "label": "desc",
                                "isDirectory": false,
                                "isAniNode": true,
                                "hasChild": false,
                                "compId": 40,
                                "child": [
                                ]
                            },
                            {
                                "x": 30,
                                "type": "Image",
                                "searchKey": "Image,qualitybg",
                                "props": { "y": 629, "x": 250, "var": "qualitybg", "skin": "game/new_rareBG.png" },
                                "nodeParent": 4,
                                "label": "qualitybg",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 41,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text,quality",
                                        "props": { "y": 0, "x": 0, "wordWrap": true, "width": 160, "var": "quality", "valign": "middle", "text": "Ordinary", "runtime": "Laya.Text", "height": 61, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 41,
                                        "label": "quality",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 42,
                                        "child": [
                                        ]
                                    }]
                            },
                            {
                                "x": 30,
                                "type": "Sprite",
                                "searchKey": "Sprite,goonbtn",
                                "props": { "y": 777, "x": 330, "width": 163, "var": "goonbtn", "texture": "game/b_btn_green.png", "pivotY": 40, "pivotX": 82, "height": 80 },
                                "nodeParent": 4,
                                "label": "goonbtn",
                                "isOpen": true,
                                "isDirectory": true,
                                "isAniNode": true,
                                "hasChild": true,
                                "compId": 43,
                                "child": [
                                    {
                                        "x": 45,
                                        "type": "Text",
                                        "searchKey": "Text",
                                        "props": { "y": 0, "x": 0, "wordWrap": true, "width": 160, "valign": "middle", "text": "Continue", "runtime": "Laya.Text", "height": 75, "fontSize": 28, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" },
                                        "nodeParent": 43,
                                        "label": "Text",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 44,
                                        "child": [
                                        ]
                                    },
                                    {
                                        "x": 45,
                                        "type": "Script",
                                        "switchAble": true,
                                        "source": "src/script/ScaleButtonScript.ts",
                                        "searchKey": "Script,ScaleButtonScript",
                                        "removeAble": true,
                                        "props": { "y": 10, "x": 10, "runtime": "script/ScaleButtonScript.ts" },
                                        "nodeParent": 43,
                                        "label": "ScaleButtonScript",
                                        "isDirectory": false,
                                        "isAniNode": true,
                                        "hasChild": false,
                                        "compId": 45,
                                        "child": [
                                        ]
                                    }]
                            }]
                    },
                    {
                        "x": 15,
                        "type": "Sprite",
                        "searchKey": "Sprite",
                        "props": { "y": 418, "x": 55, "texture": "game/newyear_lantern.png" },
                        "nodeParent": 2,
                        "label": "Sprite",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 46,
                        "child": [
                        ]
                    },
                    {
                        "x": 15,
                        "type": "Sprite",
                        "searchKey": "Sprite",
                        "props": { "y": 418, "x": 635, "texture": "game/newyear_lantern.png" },
                        "nodeParent": 2,
                        "label": "Sprite",
                        "isDirectory": false,
                        "isAniNode": true,
                        "hasChild": false,
                        "compId": 47,
                        "child": [
                        ]
                    }],
                "animations": [
                    {
                        "nodes": [
                        ],
                        "name": "ani1",
                        "id": 1,
                        "frameRate": 24,
                        "action": 0
                    }]
            }, e.UnlockSkinUIUI = q, s("ui.view.UnlockSkinUIUI", q);
            class K extends a {
                constructor() {
                    super();
                }
                createChildren() {
                    super.createChildren(), this.createView(K.uiView);
                }
            }
            K.uiView = {
                type: "BaseView",
                props: {
                    width: 750,
                    top: 0,
                    runtime: "view/VedioShareUI.ts",
                    right: 0,
                    left: 0,
                    height: 1334,
                    bottom: 0
                },
                compId: 2,
                child: [{
                    type: "Image",
                    props: {
                        top: 0,
                        skin: "game/black.png",
                        sizeGrid: "19,18,24,16,1",
                        right: 0,
                        name: "bg",
                        left: 0,
                        bottom: 0
                    },
                    compId: 5
                }, {
                    type: "Image",
                    props: {
                        width: 660,
                        var: "window",
                        skin: "game/achiment_UI_bg.png",
                        sizeGrid: "38,76,56,77",
                        height: 869,
                        centerY: -35,
                        centerX: 0
                    },
                    compId: 4,
                    child: [{
                        type: "Image",
                        props: {
                            y: 58,
                            x: 173,
                            skin: "game/share_record_title.png"
                        },
                        compId: 22
                    }, {
                        type: "Image",
                        props: {
                            y: -3,
                            x: 589,
                            var: "closebtn",
                            skin: "game/close.png"
                        },
                        compId: 6
                    }, {
                        type: "Text",
                        props: {
                            y: 539,
                            x: 76,
                            wordWrap: !0,
                            width: 515,
                            valign: "middle",
                            text: "分享更多人看到你伟大的建筑吧每次分享获得       x1",
                            leading: 20,
                            height: 132,
                            fontSize: 36,
                            font: "Microsoft YaHei",
                            color: "#7a7a7a",
                            bold: !0,
                            align: "center",
                            runtime: "Laya.Text"
                        },
                        compId: 8,
                        child: [{
                            type: "Image",
                            props: {
                                y: 63,
                                x: 331,
                                skin: "game/res_gem_icon.png"
                            },
                            compId: 15
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 703,
                            x: 196,
                            width: 267,
                            var: "sharebtn",
                            skin: "game/b_btn_green.png",
                            sizeGrid: "26,58,33,56",
                            label: "label",
                            height: 103
                        },
                        compId: 9,
                        child: [{
                            type: "Sprite",
                            props: {
                                y: 23.5,
                                x: 31,
                                texture: "game/share.png"
                            },
                            compId: 10
                        }, {
                            type: "Text",
                            props: {
                                y: 14,
                                x: 94,
                                width: 144,
                                valign: "middle",
                                text: "分享",
                                height: 75,
                                fontSize: 50,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 13
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: 172,
                            x: 62,
                            skin: "game/share_img.png",
                            name: "img"
                        },
                        compId: 14
                    }, {
                        type: "Image",
                        props: {
                            y: 900,
                            x: 76,
                            width: 479,
                            var: "sharearobj",
                            skin: "game/share_bar2.png",
                            sizeGrid: "0,29,0,25",
                            height: 48
                        },
                        compId: 16,
                        child: [{
                            type: "Image",
                            props: {
                                y: 3,
                                x: 3,
                                width: 474,
                                var: "progressbar",
                                skin: "game/share_bar1.png",
                                sizeGrid: "0,26,0,19",
                                height: 42
                            },
                            compId: 17
                        }, {
                            type: "Text",
                            props: {
                                y: 8,
                                x: 4,
                                width: 403,
                                var: "txtprogress",
                                valign: "middle",
                                text: "5/5",
                                height: 39,
                                fontSize: 35,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "center",
                                runtime: "Laya.Text"
                            },
                            compId: 21
                        }, {
                            type: "Image",
                            props: {
                                y: 24,
                                x: 479,
                                var: "light",
                                skin: "game/ad_chest_light.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 18
                        }, {
                            type: "Image",
                            props: {
                                y: 24,
                                x: 479,
                                var: "gemobj",
                                skin: "game/gems_02.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 19
                        }, {
                            type: "Text",
                            props: {
                                y: 53,
                                x: 3,
                                width: 386,
                                valign: "middle",
                                text: "累计分享5次获得30钻石",
                                height: 46,
                                fontSize: 30,
                                font: "Microsoft YaHei",
                                color: "#ffffff",
                                bold: !0,
                                align: "left",
                                runtime: "Laya.Text"
                            },
                            compId: 20
                        }]
                    }]
                }],
                loadList: ["game/black.png", "game/achiment_UI_bg.png", "game/share_record_title.png", "game/close.png", "game/res_gem_icon.png", "game/b_btn_green.png", "game/share.png", "game/share_img.png", "game/share_bar2.png", "game/share_bar1.png", "game/ad_chest_light.png", "game/gems_02.png"],
                loadList3D: []
            }, e.VedioShareUIUI = K, s("ui.view.VedioShareUIUI", K);
        }(e.view || (e.view = {}));
    }(o || (o = {}));
    class r {
        static sendUrl(e, t, i, o = !1) {
            null == t && (t = {});
            let n = "", a = !0;
            for (let e in t) a ? (a = !1, n += "?") : n += "&", n += e + "=" + t[e];
            let s = e + n, r = new Laya.HttpRequest();
            r.http.timeout = 5e3, r.once(Laya.Event.COMPLETE, this, e => {
                let t = JSON.parse(e);
                t || t >= 0 ? i && i(t) : console.log("json解析失败了 ！ data =" + e);
            }), r.once(Laya.Event.ERROR, this, e => {
                console.warn("error=" + e), i && i(e);
            }), o ? r.send(s, t, "post", "xml") : r.send(s, "", "get", "jsonp");
        }
    }
    var l = {};
    !function (e, t) {
        for (var i in t) e[i] = t[i];
    }(l, function (e) {
        var t = {};
        function n(i) {
            if (t[i]) return t[i].exports;
            var o = t[i] = {
                i: i,
                l: !1,
                exports: {}
            };
            return e[i].call(o.exports, o, o.exports, n), o.l = !0, o.exports;
        }
        return n.m = e, n.c = t, n.d = function (e, t, i) {
            n.o(e, t) || Object.defineProperty(e, t, {
                configurable: !1,
                enumerable: !0,
                get: i
            });
        }, n.r = function (e) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, n.n = function (e) {
            var t = e && e.__esModule ? function () {
                return e.default;
            } : function () {
                return e;
            };
            return n.d(t, "a", t), t;
        }, n.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, n.p = "", n(n.s = 1);
    }([function (e, t, i) {
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var o = function () {
            function t() { }
            return t.lerr = function () {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                e.unshift("====>"), console.error.apply(window, e);
            }, t.llog = function () {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                e.unshift("====>"), console.log.apply(window, e);
            }, t.twoInt = function (e) {
                return e < 10 ? "0" + e : e;
            }, t.todayStr = function () {
                var e = new Date();
                return "" + e.getFullYear() + t.twoInt(e.getMonth() + 1) + t.twoInt(e.getDate());
            }, t.randomInt = function (e, t) {
                return Math.floor(Math.random() * (t - e + 1) + e);
            }, t.saveData = function (e, t) {
                var i = window.localStorage;
                i && i.setItem("kcSdk_" + e, t);
            }, t.loadData = function (e) {
                var t = window.localStorage;
                if (t) {
                    var i = t.getItem("kcSdk_" + e);
                    if (i) return i;
                }
                return null;
            }, t.encodeUTF8 = function (e) {
                var t, i, o, n = [];
                for (t = 0; t < e.length; t++) (i = e.charCodeAt(t)) < 128 ? n.push(i) : i < 2048 ? n.push(192 + (i >> 6 & 31), 128 + (63 & i)) : ((o = 55296 ^ i) >> 10 == 0 ? (i = (o << 10) + (56320 ^ e.charCodeAt(++t)) + 65536,
                    n.push(240 + (i >> 18 & 7), 128 + (i >> 12 & 63))) : n.push(224 + (i >> 12 & 15)),
                    n.push(128 + (i >> 6 & 63), 128 + (63 & i)));
                return n;
            }, t.s = function (e) {
                var i, o, n, a = new Uint8Array(t.encodeUTF8(e)), s = 16 + (a.length + 8 >>> 6 << 4);
                for ((e = new Uint8Array(s << 2)).set(new Uint8Array(a.buffer)), e = new Uint32Array(e.buffer),
                    n = new DataView(e.buffer), i = 0; i < s; i++) e[i] = n.getUint32(i << 2);
                e[a.length >> 2] |= 128 << 24 - 8 * (3 & a.length), e[s - 1] = a.length << 3;
                var r = [], l = [function () {
                    return g[1] & g[2] | ~g[1] & g[3];
                }, function () {
                    return g[1] ^ g[2] ^ g[3];
                }, function () {
                    return g[1] & g[2] | g[1] & g[3] | g[2] & g[3];
                }, function () {
                    return g[1] ^ g[2] ^ g[3];
                }], h = function (e, t) {
                    return e << t | e >>> 32 - t;
                }, d = [1518500249, 1859775393, -1894007588, -899497514], g = [1732584193, -271733879, null, null, -1009589776];
                for (g[2] = ~g[0], g[3] = ~g[1], i = 0; i < e.length; i += 16) {
                    var c = g.slice(0);
                    for (o = 0; o < 80; o++) r[o] = o < 16 ? e[i + o] : h(r[o - 3] ^ r[o - 8] ^ r[o - 14] ^ r[o - 16], 1),
                        n = h(g[0], 5) + l[o / 20 | 0]() + g[4] + r[o] + d[o / 20 | 0] | 0, g[1] = h(g[1], 30),
                        g.pop(), g.unshift(n);
                    for (o = 0; o < 5; o++) g[o] = g[o] + c[o] | 0;
                }
                for (n = new DataView(new Uint32Array(g).buffer), i = 0; i < 5; i++) g[i] = n.getUint32(i << 2);
                return Array.prototype.map.call(new Uint8Array(new Uint32Array(g).buffer), function (e) {
                    return (e < 16 ? "0" : "") + e.toString(16);
                }).join("");
            }, t.b = function (e) {
                var t = [];
                for (var i in e) t.push(i);
                t = t.sort();
                for (var o = "", n = 0; n < t.length; n++) {
                    var a = e[t[n]];
                    "object" == typeof a && (a = this.b(a)), o += t[n] + a;
                }
                return o;
            }, t.a = function (e, i, o) {
                var n = [];
                for (var a in e) null !== e[a] && void 0 !== e[a] ? n.push(a) : delete e[a];
                n = n.sort();
                var s = t.b(e);
                return i && (s += i), s += o || "pH0Xhyenu2e1zdUg", t.s(s);
            }, t.jax = function (e, i, o) {

            }, t;
        }();
        t.jax = o.jax, t.llog = o.llog, t.lerr = o.lerr, t.saveData = o.saveData, t.loadData = o.loadData,
            t.randomInt = o.randomInt, t.todayStr = o.todayStr;
    }, function (e, i, o) {
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = o(0), a = function () {
            function t() {
                this.version = "1.2.0", this.navGap = 3e3, this.lastNavT = 0, this.htHost = "",
                    this.picType = "jpg";
            }
            return t.instance = function () {
                return t.me ? t.me : (t.me = new t(), t.me);
            }, t.prototype.getUid = function () {
                return t.Uid ? t.Uid : (t.Uid = n.loadData("uid"), t.Uid || "null");
            }, t.prototype.setUid = function (e) {
                e && t.Uid !== e && (t.Uid = e, n.saveData("uid", e));
            }, t.prototype.jht = function (e, t, i) {
                t.v = this.version, n.jax(this.htHost + e, t, function (e, t) {
                    return e || !t ? (n.llog("jhtERR", e), i(e || new Error("no re"))) : 0 !== t.re ? (n.llog("jht FAILED!" + JSON.stringify(t)),
                        i(new Error("err:" + t.re))) : void i(null, t);
                });
            }, t.prototype.init = function (e, i, o) {
                var a = this;
                n.llog("HTS init v:" + this.version + "," + e), t.Gid = e;
                var s = n.loadData("htHost");
                s && (this.htHost = s);
                var r = n.loadData("picType");
                r && (this.picType = r);
                var l = {
                    gid: e,
                    uid: this.getUid(),
                    query: i || "null"
                };
                n.llog("init start..." + this.picType + "," + this.htHost), this.jht("init", l, function (e, i) {
                    if (e) o(e); else {
                        n.llog("init done:" + i.re), a.setUid(i.uid), i.iconPre && (t.IconPre = i.iconPre),
                            i.picType && (a.picType = i.picType, n.saveData("picType", i.picType)), i.navGap && (a.navGap = i.navGap);
                        for (var s = [], r = 0; r < i.midArr.length; r++) {
                            var l = i.midArr[r], h = "";
                            i.vArr && i.vArr.length === i.midArr.length && 0 !== parseInt(i.vArr[r]) && (h = "_" + i.vArr[r]),
                                s.push({
                                    iconUrl: i.iconPre + l + h + "." + a.picType,
                                    mid: l
                                });
                        }
                        o(null, s), i.htHost && i.htHost !== a.htHost && (a.htHost = i.htHost, n.saveData("htHost", i.htHost));
                    }
                });
            }, t.prototype.getBox = function (e, i) {
                var o = this;
                if (!t.IconPre) return n.llog("htSdk 未初始化!!" + t.IconPre), i(new Error("htSdk 未初始化"));
                var a = {
                    bid: e
                };
                this.jht("getBox", a, function (n, a) {
                    if (n) return i(n);
                    if (!a.arr || a.arr.length <= 0) return i(new Error("服务配置有误bid:" + e));
                    for (var s = [], r = 0; r < a.arr.length; r++) {
                        for (var l = a.arr[r], h = [], d = 0; d < l.length; d++) {
                            var g = l[d].split("@"), c = "", p = "";
                            g.length >= 4 && "0" !== g[3] && (c = "_" + g[3]), g.length >= 5 && (p = g[4]),
                                h.push({
                                    jumpKey: g[1],
                                    mid: g[0],
                                    iconUrl: t.IconPre + g[0] + c + "." + o.picType,
                                    txt: g[2],
                                    mark: p,
                                    query: "mid=" + g[0] + "&bid=" + e + "&uid=" + t.Uid + "&po=" + r
                                });
                        }
                        s.push(h);
                    }
                    i(null, s);
                });
            }, t.prototype.navTo = function (e, i, o, a) {
                var s = this, r = new Date().getTime();
                if (r - this.lastNavT < this.navGap) n.llog("navTo too"); else {
                    this.lastNavT = r;
                    var l = {
                        gid: e || t.Gid,
                        uid: this.getUid(),
                        bid: i,
                        mid: o
                    };
                    i ? o ? (a && (l.fail = "true"), n.llog("navTo", JSON.stringify(l)), this.jht("navTo", l, function (e, t) {
                        e || s.setUid(t.uid);
                    })) : n.llog("navTo 无mid") : n.llog("navTo 无bid");
                }
            }, t.prototype.navFrom = function (e, i) {
                var o = this;
                if (i) {
                    t.Gid = e;
                    var a = {
                        gid: e,
                        uid: this.getUid(),
                        query: i || "null"
                    };
                    n.llog("navFrom", JSON.stringify(a)), this.jht("navFrom", a, function (e, t) {
                        e || o.setUid(t.uid);
                    });
                } else n.llog("navFrom query is empty!" + i);
            }, t.prototype.jlog = function (e, i, o) {
                var a = this;
                if (t.Gid) {
                    var s = {
                        act: e,
                        gid: t.Gid,
                        uid: this.getUid(),
                        data: i,
                        user: o
                    };
                    n.llog("jlog", JSON.stringify(s)), this.jht("jlog", s, function (e, t) {
                        e || a.setUid(t.uid);
                    });
                } else n.llog("jlog no gid", e, i);
            }, t.prototype.getSharePic = function (e, t) {
                this.jht("getSharePic", {
                    game: e
                }, t);
            }, t.prototype.shareTo = function (e) {
                this.jht("shareTo", {
                    wxPicId: e
                }, function (t) {
                    t ? n.lerr(t) : n.llog("shareTo OK," + e);
                });
            }, t.prototype.shareFrom = function (e) {
                this.jht("shareFrom", {
                    wxPicId: e
                }, function (t) {
                    t ? n.lerr(t) : n.llog("shareFrom OK," + e);
                });
            }, t.prototype.jreq = function (e, t, i) {
                n.jax(e, t, i);
            }, t;
        }();
        i.default = a.instance();
    }]));
    var h = l.default;
    class d {
        constructor() {
            this.htSdk = h;
        }
        static instance() {
            return d.me ? d.me : (d.me = new d(), d.me);
        }
        getUid() {
            return this.htSdk.getUid();
        }
        init(e, t, i) {
            this.htSdk.init(e, t, i);
        }
        getBox(e, t) {
            this.htSdk.getBox(e, t);
        }
        navFrom(e, t) {
            this.htSdk.navFrom(e, t);
        }
        navTo(e, t, i, o) {
            this.htSdk.navTo(e, t, i, o);
        }
        jlog(e, t, i) {
            this.htSdk.jlog(e, t, i);
        }
        getSharePic(e, t) {
            this.htSdk.getSharePic(e, t);
        }
        shareTo(e) {
            this.htSdk.shareTo(e);
        }
        shareFrom(e) {
            this.htSdk.shareFrom(e);
        }
        jreq(e, t, i) {
            this.htSdk.jreq(e, t, i);
        }
    }
    const g = d.instance();
    class c {
        constructor() {
            this.bannerAd = null, this.videoArr = [], this.videoAd = null, this.hbs = window.hbs;
        }
        exitGame() {
            this.hbs.exitApplication({
                success: function () {
                    console.log("exitApplication success");
                },
                fail: function () {
                    console.log("exitApplication fail");
                },
                complete: function () {
                    console.log("exitApplication complete");
                }
            });
        }
        loadSubpackage(e) {
            this.hbs.loadSubpackage(e);
        }
        showBanner(e, t) {
            this.destroyBanner(), this.bannerAd = this.hbs.createBannerAd({
                adUnitId: e
            }), this.bannerAd && (this.bannerAd.show(), this.bannerAd.onShow && this.bannerAd.onShow(() => {
                console.log("######### banner显示成功"), this.bannerAd.offShow(), console.log("####### this.bannerAd =", this.bannerAd);
            }), this.bannerAd.onError && this.bannerAd.onError(e => {
                console.log("######### banner出错", e), this.bannerAd.offError();
            }), this.bannerAd.onHide && this.bannerAd.onHide(() => {
                console.log("######### banner关闭"), this.bannerAd.offHide();
            }));
        }
        destroyBanner() {
            this.bannerAd && (this.bannerAd.offShow && this.bannerAd.offShow(), this.bannerAd.offError && this.bannerAd.offError(),
                this.bannerAd.offHide && this.bannerAd.offHide(), this.bannerAd.offLoad && this.bannerAd.offLoad(),
                this.bannerAd.destroy && this.bannerAd.destroy(), this.bannerAd = null);
        }
        setBannerVisible(e) {
            this.bannerAd && (e ? this.bannerAd.show() : this.bannerAd.hide());
        }
        createNativeAd(e, t) {
            var i = this.hbs.createNativeAd({
                adUnitId: e,
                posId: e
            });
            i.onLoad(e => {
                console.log("####### 原生广告加载成功:", e), i.offLoad(null), null != e.adList ? t && t(e.adList) : t && t(null);
            });
            return i.onError && i.onError(e => {
                console.log("####### 原生广告拉取失败:", e), i.offError && i.offError(null), t && t(null);
            }), i.load(), i;
        }
        closeNativeAd(e) {
            e && (e.offLoad && e.offLoad(null), e.offError && e.offError(null), e.destroy && e.destroy(),
                e = null);
        }
        reportAdShow(e, t) {
            e && e.reportAdShow({
                adId: t
            });
        }
        reportAdClick(e, t) {
            e && e.reportAdClick({
                adId: t
            });
        }
        preLoadVideoAd(e, t = null) {
            var i = this.hbs.createRewardedVideoAd({
                adUnitId: e
            });
            i && (i.onLoad(() => {
                console.log("视频预加载完成");
            }), i.load(), this.videoArr.push(i), t && t());
        }
        showVideoAd(e, t) {
            this.videoAd = this.videoArr.length > 0 ? this.videoArr[0] : null;
            var i = this;
            if (null != this.videoAd) {
                var o = function (e) {
                    e && e.isEnded ? (t && t(!0), console.log("正常播放结束，可以下发游戏奖励")) : (t && t(!1), console.log("播放中途退出，不下发游戏奖励")),
                        i.videoAd.offClose(o), i.closeRewardVedioAd(), i.videoArr.splice(0, 1);
                };
                this.videoAd.onClose(o), this.videoAd.onError(function (e) {
                    console.log(e, "播放视频错误返回"), t && t(!1, -1);
                }), this.videoAd.show();
            }
            this.preLoadVideoAd(Le.CfgMgr.getAdCfg(11).toString());
        }
        closeRewardVedioAd(e = !1, t = null, i = null) {
            this.videoAd && (this.videoAd.offLoad && this.videoAd.offLoad(), this.videoAd.offError && this.videoAd.offError(),
                this.videoAd.offClose && this.videoAd.offClose(), this.videoAd.destroy(), this.videoAd = null,
                t && t(e, i));
        }
        onShow(e) {
            null == e ? this.hbs.onShow(null) : this.hbs.onShow(() => {
                e();
            });
        }
        onHide(e) {
            null == e ? this.hbs.onHide(null) : this.hbs.onHide(() => {
                e && e();
            });
        }
    }
    let p = {
        Res_Load_Progress: "Res_Load_Progress",
        Res_Load_Complete: "Res_Load_Complete",
        UI_UpdateAchieve: "UI_UpdateAchieve",
        UI_UpdateBuildItem: "UI_UpdateBuildItem",
        UI_UpdateBuildItemProgress: "UI_UpdateBuildItemProgress",
        Item_ClickItem: "Item_ClickItem",
        Switch_Page: "Switch_Page",
        UI_UpdateGold: "UI_UpdateGold",
        UI_UpdateMood: "UI_UpdateMood",
        UI_UpdateMoodIcon: "UI_UpdateMoodIcon",
        UI_UpdateMoney: "UI_UpdateMoney",
        UI_UpdateRedbtn: "UI_UpdateRedbtn",
        UI_UpdateDot: "UI_UpdateDot",
        UI_ShipSail: "UI_ShipSail",
        UI_ShipSink: "UI_ShipSink",
        UI_UpdateBuildCount: "UI_UpdateBuildCount",
        UI_UpdateTask: "UI_UpdateTask",
        UI_UpdateQuest: "UI_UpdateQuest",
        UI_UpdateShipStar: "UI_UpdateShipStar",
        UI_ShowBuffButton: "UI_ShowBuffButton",
        UI_UpdateAchieveInfo: "UI_UpdateAchieveInfo",
        UI_UpdateDoubleRes: "UI_UpdateDoubleRes",
        UI_UpdateShopItem: "UI_UpdateShopItem",
        Game_HideBuildItem: "Game_HideBuildItem",
        Game_ShowMatchChest: "Game_ShowMatchChest",
        Game_ResetBallState: "Game_ResetBallState",
        Game_AddMatchTime: "Game_AddMatchTime",
        Game_Pause: "Game_Pause",
        Game_Resume: "Game_Resume",
        Game_ExtentTime: "Game_ExtentTime",
        Game_Reuslt: "Game_Reuslt",
        AD_BannerClose: "AD_BannerClose",
        AD_BannerOpen: "AD_BannerOpen",
        AD_WatchVedioSucces: "AD_WatchVedioSucces",
        AD_GridADShow: "AD_GridADShow",
        AD_GridADHide: "AD_GridADHide",
        AD_NativeAdReport: "AD_NativeAdReport",
        Record_StartAutoRecord: "Record_StartAutoRecord",
        Record_StopAutoRecord: "Record_StopAutoRecord"
    };
    class m {
        constructor() {
            this.bannerAd = null, this.videoAd = null;
        }
        loadSubpackage(e) {
            qg.loadSubpackage(e);
        }
        showBanner(e, t) {
            this.destroyBanner();
            let i = qg.getSystemInfoSync().screenHeight, o = qg.getSystemInfoSync().screenWidth;
            this.bannerAd = qg.createBannerAd({
                adUnitId: e,
                style: {
                    left: 0,
                    top: i - 120,
                    width: o,
                    height: 120
                }
            }), this.bannerAd && (this.bannerAd.onLoad(() => {
                t && t(0), this.setBannerVisible(!0);
            }), this.bannerAd.onError(e => {
                console.log("######### banner出错", e);
            }), this.bannerAd.onClose(() => {
                Le.DataMgr.closeBannerCount++, Le.EventMgr.event(p.AD_BannerClose);
            }), this.bannerAd.onResize(e => {
                let t = qg.getSystemInfoSync().screenHeight, i = qg.getSystemInfoSync().screenWidth;
                var o = (t - i * Laya.stage.displayHeight / Laya.stage.displayWidth) / 2;
                this.bannerAd.style.top = t - e.height - o, this.bannerAd.style.left = 0, this.bannerAd.style.width = i,
                    this.bannerAd.style.height = e.height;
            }));
        }
        destroyBanner() {
            this.bannerAd && (this.bannerAd.offShow && this.bannerAd.offShow(), this.bannerAd.offError && this.bannerAd.offError(),
                this.bannerAd.offHide && this.bannerAd.offHide(), this.bannerAd.offLoad && this.bannerAd.offLoad(),
                this.bannerAd.destroy && this.bannerAd.destroy(), this.bannerAd = null);
        }
        setBannerVisible(e) {
            this.bannerAd && (e ? (this.bannerAd.show(), Le.EventMgr.event(p.AD_BannerOpen)) : (Le.EventMgr.event(p.AD_BannerClose),
                this.bannerAd.hide()));
        }
        createInsertAd(e, t) {
            if ("0" == e) return null;
            var i = null;
            return (i = qg.createInsertAd({
                adUnitId: e
            })) ? (console.log("######## MeiZu 插屏广告创建失败"), i.onLoad(() => {
                console.log("####### MeiZu 插屏广告加载成功:"), i.show(), t && t(!0);
            }), i.onError(e => {
                console.log("####### MeiZu 插屏广告拉取失败:", e), t && t(!1);
            }), i.load()) : console.log("######## MeiZu 插屏广告创建失败"), i;
        }
        reportAdShow(e, t) {
            e && e.reportAdShow({
                adId: t
            });
        }
        reportAdClick(e, t) {
            e && e.reportAdClick({
                adId: t
            });
        }
        showVideoAd(e, t) {
            if (this.closeRewardVedioAd(), window.qg && void 0 !== window.qg.createRewardedVideoAd) {
                var i = qg.createRewardedVideoAd({
                    adUnitId: e
                });
                if (i) {
                    var o = function (e) {
                        console.log("正常播放结束，可以下发游戏奖励 MeiZu"), i.offClose(o);
                    };
                    i.onClose(o), i.onRewarded(function () {
                        console.log("激励视频广告完成，发放奖励 MeiZu"), t && t(!0), Le.SoundMgr.resumeBGM();
                    }), i.onError(function (e) {
                        console.log(e, "错误返回"), t && t(!1, -1);
                    }), i.onLoad(() => {
                        console.log("显示播放视频"), Le.SoundMgr.pauseBGM(), i.show();
                    }), i.load(), this.videoAd = i;
                }
            } else t && t(!0);
        }
        closeRewardVedioAd(e = !1, t = null, i = null) {
            this.videoAd && (this.videoAd.offLoad && this.videoAd.offLoad(), this.videoAd.offError && this.videoAd.offError(),
                this.videoAd.offClose && this.videoAd.offClose(), this.videoAd = null, t && t(e, i));
        }
        onShow(e) {
            null == e ? qg.onShow(null) : qg.onShow(() => {
                e();
            });
        }
        onHide(e) {
            null == e ? qg.onHide(null) : qg.onHide(() => {
                e && e();
            });
        }
    }
    class u {
        constructor() {
            this.bannerAd = null, this.videoAd = null;
        }
        loadSubpackage(e) {
            qg.loadSubpackage(e);
        }
        reportMonitor() { }
        showBanner(e, t) {
            this.destroyBanner(), this.bannerAd = qg.createBannerAd({
                adUnitId: e
            }), this.bannerAd && (this.bannerAd.show(), this.bannerAd.onShow && this.bannerAd.onShow(() => {
                console.log("######### banner显示成功"), this.bannerAd.offShow();
            }), this.bannerAd.onError && this.bannerAd.onError(e => {
                console.log("######### banner出错", e), this.bannerAd.offError();
            }), this.bannerAd.onHide && this.bannerAd.onHide(() => {
                console.log("######### banner关闭"), this.bannerAd.offHide();
            }));
        }
        destroyBanner() {
            this.bannerAd && (this.bannerAd.offShow && this.bannerAd.offShow(), this.bannerAd.offError && this.bannerAd.offError(),
                this.bannerAd.offHide && this.bannerAd.offHide(), this.bannerAd.offLoad && this.bannerAd.offLoad(),
                this.bannerAd.destroy && this.bannerAd.destroy(), this.bannerAd = null);
        }
        setBannerVisible(e) {
            this.bannerAd && (e ? this.bannerAd.show() : this.bannerAd.hide());
        }
        createNativeAd(e, t) {
            var i = qg.createNativeAd({
                adUnitId: e,
                posId: e
            });
            i.onLoad(e => {
                console.log("####### 原生广告加载成功:", e), i.offLoad(null), null != e.adList ? t && t(e.adList) : t && t(null);
            });
            return i.onError && i.onError(e => {
                console.log("####### 原生广告拉取失败:", e), i.offError && i.offError(null), t && t(null);
            }), i.load(), i;
        }
        closeNativeAd(e) {
            e && (e.offLoad && e.offLoad(null), e.offError && e.offError(null), e.destroy && e.destroy(),
                e = null);
        }
        showVideoAd(e, t) {
            if (this.closeRewardVedioAd(), window.qg && void 0 !== window.qg.createRewardedVideoAd) {
                var i = qg.createRewardedVideoAd({
                    adUnitId: e,
                    posId: e
                });
                if (i) {
                    var o = function (e) {
                        e && e.isEnded ? (t && t(!0), console.log("正常播放结束，可以下发游戏奖励")) : (t && t(!1, -1),
                            console.log("播放中途退出，不下发游戏奖励")), i.offClose(o);
                    };
                    i.onClose(o), i.onError(function (e) {
                        console.log(e, "播放视频错误返回"), t && t(!1, -1);
                    }), i.onLoad(() => {
                        console.log("显示播放视频"), i.show(), Le.SoundMgr.pauseBGM();
                    }), i.load(), this.videoAd = i;
                }
            } else t && t(!0);
        }
        closeRewardVedioAd(e = !1, t = null, i = null) {
            this.videoAd && (this.videoAd.offLoad && this.videoAd.offLoad(), this.videoAd.offError && this.videoAd.offError(),
                this.videoAd.offClose && this.videoAd.offClose(), this.videoAd = null, t && t(e, i));
        }
        addIconToDesktop() {
            qg.hasShortcutInstalled({
                success: function (e) {
                    0 == e && qg.installShortcut({
                        success: function () {
                            console.log("#### 创建桌面图标成功！");
                        },
                        fail: function (e) {
                            console.log("#### 创建桌面图标失败！", e);
                        },
                        complete: function () { }
                    });
                },
                fail: function (e) { },
                complete: function () { }
            });
        }
        onShow(e) {
            null == e ? qg.onShow(null) : qg.onShow(() => {
                e();
            });
        }
        onHide(e) {
            null == e ? qg.onHide(null) : qg.onHide(() => {
                e && e();
            });
        }
        createGameBannerAd(e) {
            if ("0" != e) {
                var t = null;
                return qg.getSystemInfoSync().platformVersionCode >= 1076 ? (t = qg.createGameBannerAd({
                    adUnitId: e
                })).show() : console.log("快应用平台版本号低于1076，暂不支持互推盒子相关 API"), t;
            }
        }
        createGamePortalAd(e) {
            if ("0" != e) {
                if (qg.getSystemInfoSync().platformVersionCode >= 1076) {
                    var t = qg.createGamePortalAd({
                        adUnitId: e
                    });
                    t.load().then(function () {
                        console.log("load success"), t.show();
                    }).catch(function (e) {
                        console.log("load fail with:" + e.errCode + "," + e.errMsg);
                    });
                    var i = function () {
                        console.log("互推盒子九宫格广告关闭"), t.hide(), t.offClose(i);
                    };
                    return t.onClose(i), t;
                }
                return console.log("快应用平台版本号低于1076，暂不支持互推盒子相关 API"), Le.UIMgr.showTips("版本号太低无法查看"),
                    null;
            }
        }
    }
    class f {
        constructor() {
            this.showShareMenu();
        }
        setUserCloudStorage(e) {
            window.qq && window.qq.setUserCloudStorage(e);
        }
        loadSubpackage(e) {
            window.qq && window.qq.loadSubpackage(e);
        }
        showShareMenu() {
            window.qq && (window.qq.onShareAppMessage && window.qq.onShareAppMessage(function () {
                return {
                    title: "我和校花在荒岛的日子！",
                    imageUrl: Le.DataMgr.sharecard_config[0].imageurl
                };
            }), window.qq.showShareMenu({
                withShareTicket: !1,
                success() { },
                fail() { },
                complete() { }
            }));
        }
        share(e) {
            window.qq.shareAppMessage({
                title: "我和校花在荒岛的日子！",
                imageUrl: e.imageUrl
            });
            var t = De.getCurrentTime();
            this.onShow(() => {
                De.getCurrentTime() - t >= 3e3 ? e.success && e.success(!0) : e.fail && e.fail(!1),
                    Le.GameMgr.addShowFunc();
            });
        }
        login(e) {
            window.qq.login({
                success: function (t) {
                    var i = {};
                    t.code ? (i.code = 0, i.wxcode = t.code) : (console.log("登录失败！" + t.errMsg), i.code = -1,
                        i.msg = t.errMsg), e && e(i);
                },
                fail: function (t) {
                    var i = {
                        code: -1
                    };
                    i.msg = t.errMsg, e && e(i);
                },
                complete: function (e) { }
            });
        }
        getLaunchOptionsSync() {
            return window.qq.getLaunchOptionsSync();
        }
        showBanner(e, t = null, i = !1) {
            if (i && this.closeBannerAd(!0), null == this.bannerAd) {
                var o = window.qq.getSystemInfoSync(), n = Math.floor, a = n(1 * o.windowWidth), s = n((o.windowWidth - a) / 2), r = (o.screenHeight,
                    window.qq.createBannerAd({
                        adUnitId: e,
                        style: {
                            left: s,
                            top: o.screenHeight - 120,
                            width: a
                        }
                    }));
                r && (r.onResize(this.bannerOnResize.bind(this)), r.onError(this.bannerOnError.bind(this)),
                    r.onLoad(this.bannerOnLoad.bind(this)), this.bannerAd = r, this.adUnitId = e, this.finishCallback = t);
            } else this.setBannerVisible(!0), t && t(0);
        }
        setBannerVisible(e) {
            this.bannerAd && (e ? (console.log("####### 显示banner"), this.bannerAd.show(), Le.EventMgr.event(p.AD_BannerOpen)) : (console.log("####### 隐藏banner"),
                this.bannerAd.hide(), Le.EventMgr.event(p.AD_BannerClose)));
        }
        bannerOnResize(e) {
            if (this.bannerAd) {
                var t = window.platform0.getSystemInfoSync();
                this.bannerAd.style.top = t.screenHeight - this.bannerAd.style.realHeight, this.bannerAd.style.left = .5 * (t.windowWidth - this.bannerAd.style.realWidth);
            }
        }
        bannerOnError(e) {
            console.log("banner 异常", e), this.finishCallback && this.finishCallback(e.errCode);
        }
        bannerOnLoad() {
            this.finishCallback && this.finishCallback(0);
        }
        closeBannerAd(e = !1) {
            e ? (this.bannerAd.offHide && this.bannerAd.offHide(), this.bannerAd.offShow && this.bannerAd.offShow(),
                this.bannerAd.offResize && this.bannerAd.offResize(), this.bannerAd.offError && this.bannerAd.offError(),
                this.bannerAd.offLoad && this.bannerAd.offLoad(), this.bannerAd.offClose && this.bannerAd.offClose(),
                this.bannerAd.destroy && this.bannerAd.destroy(), this.bannerAd = null, this.adUnitId = null,
                Le.EventMgr.event(p.AD_BannerClose)) : this.setBannerVisible(!1);
        }
        createInsertAd(e, t = null) {
            if (!window.qq.createInterstitialAd) return console.log("####### 不支持插屏接口"), t && t(!1),
                null;
            let i = window.qq.createInterstitialAd({
                adUnitId: e
            });
            i.onLoad(() => {
                console.log("####### 插屏广告加载成功:"), t && t(!0);
            });
            var o = () => {
                i.destroy(), i.offClose(o);
            };
            return i.onClose(o), i;
        }
        createAppBox(e) {
            this.closeAppBox(), this.appBox = window.qq.createAppBox({
                adUnitId: e
            }), null == this.appBox ? console.warn("创建广告盒子失败") : (this.appBox.onClose(e => {
                this.closeAppBox();
            }), this.appBox.load().then(() => {
                var e = this.appBox.show();
                console.log("广告盒子显示结果", e);
            }));
        }
        closeAppBox() {
            null != this.appBox && (this.appBox.offLoad(), this.appBox.offError(), this.appBox.offClose(),
                this.appBox = null);
        }
        createBlockAd(e, t) {
            if (console.log("######## window.qq =", window.qq), window.qq.createBlockAd) {
                this.blockAd = window.qq.createBlockAd({
                    adUnitId: e,
                    style: {
                        left: t.x,
                        top: t.y
                    },
                    size: 1,
                    orientation: "vertical"
                }), this.blockAd.onResize(i), console.log("##### 创建积木广告"), this.blockAd.show();
                var i = function (e) {
                    console.log("#### 积木广告的真实宽高:", e), this.blockAd.offResize(i);
                };
            }
        }
        createRewardedVideoAd(e, t, i) {
            if (this.closeRewardVedioAd(), this.videoAd = window.qq.createRewardedVideoAd({
                adUnitId: e
            }), console.log("创建视频广告", this.videoAd, e), null != this.videoAd) {
                if (this.videoAd.onLoad(e => {
                    console.log("视频广告加载成功", e);
                }), this.videoAd.onError((e => {
                    console.log("视频广告加载出错", e), this.closeRewardVedioAd(!1, t, e);
                }).bind(this)), this.videoAd.onClose(e => {
                    console.log("视频广告关闭", e), this.closeRewardVedioAd(e && e.isEnded, t);
                }), i) return this.videoAd;
                this.showRewardedVideoAd();
            } else console.warn("创建视频广告失败");
        }
        showRewardedVideoAd() {
            this.videoAd && this.videoAd.load().then(() => {
                var e = this.videoAd.show();
                console.log("视频广告显示结果", e);
            });
        }
        closeRewardVedioAd(e = !1, t = null, i = null) {
            this.videoAd && (this.videoAd.offLoad && this.videoAd.offLoad(), this.videoAd.offError && this.videoAd.offError(),
                this.videoAd.offClose && this.videoAd.offClose(), this.videoAd = null, t && t(e, i));
        }
        onShow(e) {
            window.qq.onShow(function (t) {
                e && e(t);
            });
        }
        onHide(e) {
            window.qq.onHide(function (t) {
                e && e(t);
            });
        }
        getSystemInfoSync() {
            return window.qq.getSystemInfoSync();
        }
    }
    class y {
        constructor() {
            // this.platform0 = window.tt, this.systeminfo = this.platform0.getSystemInfoSync(), 
            // this.platform0.showShareMenu && this.platform0.showShareMenu({
            //     withShareTicket: !0,
            //     success(e) {
            //         console.log("已成功显示转发按钮", e);
            //     },
            //     fail(e) {
            //         console.log("showShareMenu 调用失败", e.errMsg);
            //     },
            //     complete(e) {
            //         console.log("showShareMenu 调用完成", e);
            //     }
            // });
        }
        createMoreGameBanner() {
            // if (null == this.moregameBanner) {
            //     var e = this.platform0.createMoreGamesBanner({
            //         style: {
            //             left: (this.systeminfo.windowWidth - 128) / 2,
            //             top: this.systeminfo.windowHeight - 72,
            //             width: 128
            //         },
            //         appLaunchOptions: []
            //     });
            //     e.onResize(t => {
            //         e.style.top = this.systeminfo.windowHeight - t.height, e.style.left = (this.systeminfo.windowWidth - t.width) / 2;
            //     }), e.onTap(() => {
            //         console.log("更多游戏banner 点击跳转游戏盒子");
            //     }), this.moregameBanner = e;
            // }
            // return this.moregameBanner.show(), this.moregameBanner;
        }
        createBannerAd(e, t, i) {
            // if (null != e && "" != e && "0" != e) {
            //     if (1 == i) this.destroyBannerAd(); else if (null != this._bannerAd) return void this.showBannerAd();
            //     this.bannerCallBack = t, this._bannerAd = this.platform0.createBannerAd({
            //         adUnitId: e,
            //         style: {
            //             top: this.systeminfo.windowHeight - 72,
            //             width: 128,
            //             left: (this.systeminfo.windowWidth - 128) / 2
            //         }
            //     }), this._bannerAd.onResize && this._bannerAd.onResize(this.onBannerResize.bind(this)), 
            //     this._bannerAd.onLoad && this._bannerAd.onLoad(this.onBannerLoad.bind(this)), this._bannerAd.onShow && this._bannerAd.onShow(this.onBannerShow.bind(this)), 
            //     this._bannerAd.onHide && this._bannerAd.onHide(this.onBannerHide.bind(this)), this._bannerAd.onError && this._bannerAd.onError(this.onBannerError.bind(this));
            // }
        }
        showBannerAd() {
            // null != this._bannerAd && this._bannerAd.show && this._bannerAd.show();
        }
        hideBannerAd() {
            // null != this._bannerAd && this._bannerAd.hide && this._bannerAd.show();
        }
        destroyBannerAd() {
            // null != this._bannerAd && (console.log("头条banner广告销毁"), this._bannerAd.offHide && this._bannerAd.offHide(), 
            // this._bannerAd.offShow && this._bannerAd.offShow(), this._bannerAd.offResize && this._bannerAd.offResize(), 
            // this._bannerAd.offError && this._bannerAd.offError(), this._bannerAd.offLoad && this._bannerAd.offLoad(), 
            // this._bannerAd.destroy && this._bannerAd.destroy(), this._bannerAd = null);
        }
        setBannerVisible(e) {
            // e ? this.showBannerAd() : this.hideBannerAd();
        }
        onBannerLoad(e) {
            // console.log("头条banner广告加载成功", e), this._bannerAd.show();
        }
        onBannerShow(e) {
            // console.log("头条banner广告显示成功", e), this.bannerCallBack && this.bannerCallBack(0);
        }
        onBannerHide(e) {
            // console.log("头条banner广告隐藏成功", e);
        }
        onBannerError(e) {
            // console.log("头条banner广告组件出现问题", e), this.bannerCallBack && this.bannerCallBack(0), 
            // this.destroyBannerAd();
        }
        onBannerResize(e) {
            // this._bannerAd && (this._bannerAd.style.top = this.systeminfo.windowHeight - e.height, 
            // this._bannerAd.style.left = (this.systeminfo.windowWidth - e.width) / 2);
        }
        showVideoAd(e, t) {
            null != e && "" != e && "0" != e && (this.vedioCallBack = t, null == this._vedioAd && (this._vedioAd = this.platform0.createRewardedVideoAd({
                adUnitId: e
            }), this._vedioAd.onLoad && this._vedioAd.onLoad(this.onVedioLoad.bind(this)), this._vedioAd.onClose && this._vedioAd.onClose(this.onVedioClose.bind(this)),
                this._vedioAd.onError && this._vedioAd.onError(this.onVedioError.bind(this))), this._vedioAd.load());
        }
        closeVedioAd() { }
        onVedioLoad(e) {
            // console.log("头条视频广告加载成功", e), this._vedioAd.show();
        }
        onVedioClose(e) {
            // console.log("头条视频广告关闭", e), Le.SoundMgr.resumeBGM(), this.vedioCallBack && this.vedioCallBack(e.isEnded);
        }
        onVedioError(e) {
            // console.log("头条视频广告组件出现问题", e), Le.SoundMgr.resumeBGM(), this.vedioCallBack && this.vedioCallBack(!1, e);
        }
        createNativeAd(e, t) { }
        closeNativeAd() { }
        onNativeAdLoad(e) { }
        onNativeAdError(e) { }
        onHide(e) {
            // this.platform0.onHide(e);
        }
        onShow(e) {
            // this.platform0.onShow(e);
        }
        addIconToDesktop(e) { }
    }
    class b {
        constructor() {
            this.bannerAd = null, this.videoAd = null;
        }
        loadSubpackage(e) {
            qg.loadSubpackage(e);
        }
        showBanner(e, t) {
            this.destroyBanner(), this.bannerAd = qg.createBannerAd({
                adUnitId: e
            }), this.bannerAd && (this.bannerAd.show(), this.bannerAd.onShow && this.bannerAd.onShow(() => {
                console.log("######### banner显示成功"), this.bannerAd.offShow(), console.log("####### this.bannerAd =", this.bannerAd);
            }), this.bannerAd.onError && this.bannerAd.onError(e => {
                console.log("######### banner出错", e), this.bannerAd.offError();
            }), this.bannerAd.onHide && this.bannerAd.onHide(() => {
                console.log("######### banner关闭"), this.bannerAd.offHide();
            }));
        }
        destroyBanner() {
            this.bannerAd && (this.bannerAd.offShow && this.bannerAd.offShow(), this.bannerAd.offError && this.bannerAd.offError(),
                this.bannerAd.offHide && this.bannerAd.offHide(), this.bannerAd.offLoad && this.bannerAd.offLoad(),
                this.bannerAd.destroy && this.bannerAd.destroy(), this.bannerAd = null);
        }
        setBannerVisible(e) {
            this.bannerAd && (e ? this.bannerAd.show() : this.bannerAd.hide());
        }
        createNativeAd(e, t) {
            var i = qg.createNativeAd({
                adUnitId: e,
                posId: e
            });
            i.onLoad(e => {
                console.log("####### 原生广告加载成功:", e), i.offLoad(null), null != e.adList ? t && t(e.adList) : t && t(null);
            });
            return i.onError && i.onError(e => {
                console.log("####### 原生广告拉取失败:", e), i.offError && i.offError(null), t && t(null);
            }), i.load(), i;
        }
        closeNativeAd(e) {
            e && (e.offLoad && e.offLoad(null), e.offError && e.offError(null), e.destroy && e.destroy(),
                e = null);
        }
        reportAdShow(e, t) {
            e && e.reportAdShow({
                adId: t
            });
        }
        reportAdClick(e, t) {
            e && e.reportAdClick({
                adId: t
            });
        }
        showVideoAd(e, t) {
            if (this.closeRewardVedioAd(), window.qg && void 0 !== window.qg.createRewardedVideoAd) {
                var i = qg.createRewardedVideoAd({
                    posId: e
                });
                if (i) {
                    var o = function (e) {
                        e && e.isEnded ? (t && t(!0), console.log("正常播放结束，可以下发游戏奖励")) : (t && t(!1), console.log("播放中途退出，不下发游戏奖励")),
                            i.offClose(o), Le.GameMgr.addShowFunc();
                    };
                    i.onClose(o), i.onError(function (e) {
                        console.log(e, "播放视频错误返回"), t && t(!1, -1);
                    }), i.onLoad(() => {
                        console.log("显示播放视频"), i.show(), qg.offShow(null);
                    }), this.videoAd = i;
                }
            } else t && t(!0);
        }
        closeRewardVedioAd(e = !1, t = null, i = null) {
            this.videoAd && (this.videoAd.offLoad && this.videoAd.offLoad(), this.videoAd.offError && this.videoAd.offError(),
                this.videoAd.offClose && this.videoAd.offClose(), this.videoAd = null, t && t(e, i));
        }
        onShow(e) {
            null == e ? qg.onShow(null) : qg.onShow(() => {
                e();
            });
        }
        onHide(e) {
            null == e ? qg.onHide(null) : qg.onHide(() => {
                e && e();
            });
        }
    }
    class v {
        constructor() {

        }
        onGridAdLoad() {
            this._gridAd && this._gridAd.show(), Le.EventMgr.event(p.AD_GridADShow);
        }
        onGridAdError(e) {
            this.destroyGridAd(), console.log("格子广告异常", e);
        }
        createGridAd() {

        }
        destroyGridAd() {

        }
        updateCustomAd() {
            this._customAdShow && this._customAdLoaded ? (this._customTime += De.deltaTime(),
                this._customTime > 2.5 && (this._customAdisShow = !1, this._customTime = 0, this.destroyCustomAd())) : this._customAdShow || Le.UIMgr.getCurrentUI() == i.MainUI && (this._customTime += De.deltaTime(),
                    this._customTime >= 8 && (this._customTime = 0, this.createCustomAd()));
        }
        createCustomAd() {

        }
        hideCustomAd() {
        }
        destroyCustomAd() {

        }
        onCustomAdLoad() {

        }
        onCustomAdError(e) {
        }
        bannerCallBack() {
        }
        onBannerLoad() {
        }
        onBannerError(e) {
        }
        createBannerAd(e = null) {
        }
        eventBannerOpen(e) {
        }
        setBannerVisible(e) {
        }
        showBannerAd(e, t = null) {
        }
        closeBannerAd() {
        }
        loadSubpackage(e) {
        }
        reportUserBehaviorBranchAnalytics(e) {
        }
        showShareMenu(e, t) {
        }
        onShare(e) {
            this.compareVersion(this.version, "1.1.0") < 0 ? this.showModal(this.STR_LOW_SDK) : (this._shareData = e,
                this._shareTime = De.getCurrentTime(), this._shareFlag = !0, this.platform0.shareAppMessage({
                    title: e.title,
                    imageUrl: e.imageUrl
                }));
        }
        onShow(e, t = !0) {
        }
        onHide(e, t = !0) {
        }
        onGameShow(e) {
            if (this._shareFlag) {
                this._shareFlag = !1, this._shareCount++;
                De.getCurrentTime(), this._shareTime;
                1 == this._shareCount ? (Le.UIMgr.showTips("分享异常，请重新分享！"), this._shareData.success(!1)) : (Le.UIMgr.showTips("分享成功！"),
                    this._shareData.success(!0), 3 == this._shareCount && (this._shareCount = 0));
            }
            this._onShowFuc && this._onShowFuc(e);
        }
        onGameHide() {
            // this._shareTime = De.getCurrentTime(), this._onHideFuc && this._onHideFuc();
        }
        getSystemInfoSync() {
            // return null == this.systeminfo && (this.systeminfo = this.platform0.getSystemInfoSync()), 
            // this.systeminfo;
        }
        compareVersion(e, t) {
            // e = e.split("."), t = t.split(".");
            // const i = Math.max(e.length, t.length);
            // for (;e.length < i; ) e.push("0");
            // for (;t.length < i; ) t.push("0");
            // for (let o = 0; o < i; o++) {
            //     const i = parseInt(e[o]), n = parseInt(t[o]);
            //     if (i > n) return 1;
            //     if (i < n) return -1;
            // }
            // return 0;
        }
        showModal(e, t = "提示") {
            // console.warn(e), this.platform0.showModal({
            //     title: t,
            //     content: e
            // });
        }
    }
    class I {
        constructor() { }
        isLogin() {
            return !0;
        }
        login(e) {
            e && e.success && e.success({
                code: 1,
                wxcode: "qqq"
            });
        }
        launchInfo() {
            return {};
        }
        startLoading(e) {
            return !0;
        }
        onLoading(e) { }
        authenticLogin(e, t, i) {
            void 0 !== e && e(!0);
        }
        hideAuthenticLoginBtn() { }
        createFeedbackButton(e) { }
        setFeedbackButtonVisible(e) { }
        openCustomerServiceConversation(e) { }
        authorize(e, t) { }
        isAuthorize(e) {
            e && e(!0);
        }
        destroyButton() { }
        onShow(e) { }
        onHide(e) { }
        onShare(e) { }
        isSharing() { }
        navigateToMiniProgram(e) { }
        getLaunchOptionsSync() { }
        createBannerAd(e, t) { }
        closeBannerAd() { }
        setBannerVisible(e) { }
        createRewardedVideoAd(e, t, i) {
            t && t(!0);
        }
        startRecorderVedio() { }
        stopRecorderVedio() { }
        clipVideo(e) { }
        createAppBox() { }
        vibrateShort() { }
        vibrateLong() { }
        createInnerAudioContext() { }
        setUserCloudStorage(e) { }
        getOpenDataContext() { }
        postMessage(e) { }
        onMessage(e) { }
        getSystemInfoSync() {
            return {
                brand: "PC",
                model: "web",
                benchmarkLevel: 100
            };
        }
        submitRankScore() { }
        canPlayAd() { }
    }
    let w = {
        Game: "res/atlas/game.atlas",
        Invite: "res/atlas/invite.atlas",
        Rank: "res/atlas/rank.atlas"
    }, _ = {
        Global: "jsons/Global.json",
        Ad: "jsons/Ad.json",
        Component: "jsons/Component.json",
        Quest: "jsons/Quest.json",
        EventQuest: "jsons/EventQuest.json",
        Achieve: "jsons/Achieve.json",
        Shop: "jsons/Shop.json",
        Map: "jsons/Map.json",
        EventMap: "jsons/EventMap.json",
        Island: "jsons/Island.json",
        Boatman: "jsons/Boatman.json",
        Bottle: "jsons/Bottle.json",
        Ship1: "jsons/Ship1.json",
        Ship2: "jsons/Ship2.json",
        Ship3: "jsons/Ship3.json",
        Ship4: "jsons/Ship4.json",
        Ship5: "jsons/Ship5.json",
        Ship6: "jsons/Ship6.json",
        Ship7: "jsons/Ship7.json",
        EventShip1: "jsons/EventShip1.json",
        Ship1Data: "jsons/Ship1Data.json",
        Ship2Data: "jsons/Ship2Data.json",
        Ship3Data: "jsons/Ship3Data.json",
        Ship4Data: "jsons/Ship4Data.json",
        Ship5Data: "jsons/Ship5Data.json",
        Ship6Data: "jsons/Ship6Data.json",
        Ship7Data: "jsons/Ship7Data.json",
        Event_Ship1Data: "jsons/Event_Ship1Data.json"
    }, C = {
        BuildItem: "prefab/buildItem.json",
        SignItem: "prefab/signItem.json",
        QuestItem: "prefab/questItem.json",
        BubbleItem: "prefab/bubbleItem.json",
        AchieveItem: "prefab/achieveItem.json",
        ShopItem: "prefab/shopItem.json",
        SurvivorItem: "prefab/survivorItem.json",
        IslandItem: "prefab/islanditem.json",
        MapUlockItem: "prefab/unlockitem.json",
        ChapterItem: "prefab/chapteritem.json",
        ChapterQuestItem: "prefab/chapterquestitem.json",
        CollectRes: "prefab/collectRes.json",
        NativeAdItem: "prefab/nativeAdItem.json",
        MoregameItem: "prefab/moregameItem.json",
        RedmoneyItem: "prefab/redmoneyitem.json",
        DialogboxItem: "prefab/dialogboxitem.json",
        VedioItemBox: "prefab/vediochestboxobj.json",
        SwitchPage: "prefab/switchPage.json",
        CarouselIcon: "pkview/items/carouselIcon.json",
        CarouselItem: "pkview/items/carouselItem.json",
        GameBoxItem: "pkview/items/gameBoxItem.json"
    }, x = {
        Item: "3dprefabs/Conventional/Item.lh",
        Effect: "3dprefabs/Conventional/fx.lh",
        Player: "3dprefabs/Conventional/Player.lh",
        Components: "3dprefabs/Conventional/Components.lh"
    }, M = {
        Scene1: "3dscenes/Conventional/Scene1.ls",
        Scene2: "3dscenes/Conventional/Scene2.ls",
        Scene3: "3dscenes/Conventional/Scene3.ls",
        Scene4: "3dscenes/Conventional/Scene4.ls",
        CrystalBall: "3dscenes/Conventional/CrystalBall.ls"
    }, S = {
        WoodFly: "effect/wood_fly.part"
    }, k = {}, A = {
        AchimentBg: "game/achiment_uitextureBG.jpg",
        BuildBg: "game/build_uiBG.jpg",
        LotteryBg: "game/luckySbinBG.jpg",
        ShopGift: "game/shop_biggift.png",
        FrameBg: "game/normal_frameBG.png",
        LightBg: "game/new_Lightbg.png"
    };
    class L {
        constructor(e) {
            this.gameobject = null, this._nativeAd = null, this._adInfo = null, this._loadAdCount = 0,
                this.adicon = null, this.icon = null, this.closebtn = null, this.clickbtn = null,
                this.clickTxt = null, this.title = null, this.desc = null, this.adbtn = null;
            let t = Le.ResMgr.GetRes(C.NativeAdItem);
            this.gameobject = t.create(), e.addChild(this.gameobject), this.gameobject.zOrder = 1e5,
                this.gameobject.visible = !1, this.gameobject.width = Laya.stage.displayWidth, this.adicon = this.gameobject.getChildByName("adicon"),
                this.closebtn = this.gameobject.getChildByName("closebtn"), this.icon = this.gameobject.getChildByName("icon"),
                this.clickbtn = this.gameobject.getChildByName("clickbtn"), this.clickTxt = this.clickbtn.getChildByName("clickTxt"),
                this.title = this.gameobject.getChildByName("title"), this.desc = this.gameobject.getChildByName("desc"),
                this.adbtn = this.gameobject.getChildByName("adbtn"), this.closebtn.on(Laya.Event.CLICK, this, this.closeClickHandle),
                this.createAd(), this.gameobject.pos(0, Laya.stage.displayHeight - 120, !0);
        }
        createAd() {
        }
        showNativecallback(e) {
            null == e || e[0].iconUrlList.length <= 0 ? (this._loadAdCount++, 2 == this._loadAdCount ? this._nativeAd = Te.createNativeAd(Le.CfgMgr.getAdCfg(23).toString(), this.showNativecallback.bind(this)) : (this.gameobject.visible = !1,
                this._nativeAd = null)) : (this.gameobject.visible = !0, this._adInfo = e[0], this.adicon.width = Laya.stage.displayWidth,
                    this.icon.skin = this._adInfo.icon, this.clickTxt.text = this._adInfo.clickBtnTxt,
                    this.title.text = this._adInfo.title, this.desc.text = this._adInfo.desc, this.adbtn.on(Laya.Event.MOUSE_DOWN, this, this.nativeAdClickHandle),
                    this._nativeAd.reportAdShow({
                        adId: this._adInfo.adId
                    }));
        }
        updateInfo() {
            this.createAd();
        }
        setVisible(e) {
            this._nativeAd && (this.gameobject.visible = e);
        }
        nativeAdClickHandle() {
            this._nativeAd.reportAdClick({
                adId: this._adInfo.adId
            }), this.close();
        }
        closeClickHandle() {
            Le.DataMgr.closeBannerCount++, this.close();
        }
        close() {
            Le.BannerMgr.closeBanner();
        }
        destroy() {
            this._nativeAd && Te.closeNativeAd(this._nativeAd), Laya.timer.clearAll(this), this.adbtn.off(Laya.Event.CLICK, this, this.nativeAdClickHandle),
                this.gameobject.destroy();
        }
    }
    class T {
        constructor() {
            this._showBanner = !1, this._closeBanner = !1, this._nativeBanner = null;
        }
        createBanner(o = null) {
            t.Platform == e.WXAd ? (this._showBanner = !0, o = Le.CfgMgr.getAdCfg(1).toString(),
                Te.createBannerAd(o, e => {
                    0 != e && Te.createBannerAd(Le.CfgMgr.getAdCfg(1).toString(), null, !0);
                }, !0)) : t.Platform == e.QQAd ? (this._showBanner = !0, Le.UIMgr.getCurrentUI().id != i.MainUI.id && Te.createBannerAd(o, e => {
                    0 != e && Te.createBannerAd(Le.CfgMgr.getAdCfg(1).toString());
                })) : t.Platform == e.OPAd ? (this._showBanner = !0, this._closeBanner || (null == this._nativeBanner ? (Le.GameMgr.gameRunningTime >= 60 && (this._nativeBanner = new L(Laya.stage)),
                    this.updateBanner()) : this.setBannerVisible(!0))) : t.Platform == e.VivoAd ? (this._showBanner = !0,
                        Te.createBannerAd(Le.CfgMgr.getAdCfg(1).toString()), Laya.timer.loop(15e3, this, this.updateNativeBannerHandle)) : t.Platform == e.MeiZu && (this._showBanner = !0,
                            Te.createBannerAd(Le.CfgMgr.getAdCfg(1).toString()), Laya.timer.loop(15e3, this, this.updateMeizuBannerHandle),
                            Le.EventMgr.on(p.AD_BannerClose, this, this.closeMeizuBanner));
        }
        updateMeizuBannerHandle() {
            this._showBanner && Te.createBannerAd(Le.CfgMgr.getAdCfg(1).toString());
        }
        closeMeizuBanner() {
            this._closeBanner = !0, Laya.timer.clear(this, this.updateMeizuBannerHandle), Le.EventMgr.off(p.AD_BannerClose, this, this.closeMeizuBanner),
                Te.setBannerVisible(!1), Laya.timer.once(2e4, this, () => {
                    this._closeBanner = !1, this.createBanner();
                });
        }
        updateBanner() {
            Laya.timer.loop(1e3 * Le.CfgMgr.getGlobalCfg("OppoRefreshBannertime"), this, this.updateNativeBannerHandle);
        }
        updateNativeBannerHandle() {
            this._showBanner && (t.Platform == e.VivoAd ? Te.createBannerAd(Le.CfgMgr.getAdCfg(1).toString()) : t.Platform == e.OPAd && (Le.GameMgr.gameRunningTime >= 60 && null == this._nativeBanner ? this._nativeBanner = new L(Laya.stage) : this._nativeBanner && this._nativeBanner.updateInfo()));
        }
        closeBanner() {
            this._closeBanner = !0, Laya.timer.clear(this, this.updateNativeBannerHandle), this.setBannerVisible(!1),
                Laya.timer.once(1e3 * Le.CfgMgr.getGlobalCfg("OppoCloseBannertime"), this, () => {
                    this._closeBanner = !1, this.createBanner(), this.updateBanner();
                });
        }
        setBannerVisible(e) {
            this._nativeBanner && this._nativeBanner.setVisible(e);
        }
        hidebanner() {
            this._showBanner = !1, this.setBannerVisible(!1);
        }
    }
    class B {
        constructor() {
            this.shipsArr = [], this.eventShipsArr = [], this.shipsDataArr = {};
        }
        initConfigs() {
            this.initGlobalData(), this.initAdData(), this.componentCfg = this.initData(_.Component),
                this.questCfg = this.initData(_.Quest), this.eventQuestCfg = this.initData(_.EventQuest),
                this.achieveCfg = this.initData(_.Achieve), this.shopCfg = this.initData(_.Shop),
                this.mapCfg = this.initData(_.Map), this.eventMapCfg = this.initData(_.EventMap),
                this.islandCfg = this.initData(_.Island), this.boatmanCfg = this.initData(_.Boatman),
                this.bottleCfg = this.initData(_.Bottle), this.initShipData(), this.initEventShipData();
        }
        initEventShipData() {
            for (let t = 1; t <= 1; t++) {
                var e = this.initData("jsons/EventShip" + t + ".json");
                this.eventShipsArr.push(e);
            }
        }
        initShipData() {
            var e = this.globalCfg.TotalLevel;
            for (let i = 1; i <= e; i++) {
                var t = this.initData("jsons/Ship" + i + ".json");
                this.shipsArr.push(t);
            }
            for (let e = 1; e < 10; e++) {
                var i, o = "jsons/Ship" + e + "Data.json";
                if (null != (i = Laya.loader.getRes(o))) this.shipsDataArr["Ship" + e + "Data"] = i,
                    o = "jsons/Event_Ship" + e + "Data.json", null != (i = Laya.loader.getRes(o)) && (this.shipsDataArr["Event_Ship" + e + "Data"] = i);
            }
        }
        initAdData() {
            this.adCfg = new Object();
            let e = Laya.loader.getRes(_.Ad);
            if (null == e) console.warn("兼容错误，找不到" + _.Ad + "表"); else {
                this.adCfg.length = e.length;
                for (let i = 0; i < e.length; i++) this.adCfg[e[i].Id] = e[i][t.Platform];
            }
        }
        initData(e) {
            var t = new Object();
            let i = Laya.loader.getRes(e);
            if (null == i) return console.warn("兼容错误，找不到" + e + "表"), null;
            t.length = i.length;
            for (let e = 0; e < i.length; e++) t[i[e].Id] = i[e];
            return t;
        }
        initGlobalData() {
            this.globalCfg = new Object();
            let e = Laya.loader.getRes(_.Global);
            if (null == e) console.warn("兼容错误，找不到" + _.Global + "表"); else {
                this.globalCfg.length = e.length;
                for (let t = 0; t < e.length; t++) this.globalCfg[e[t].key] = e[t].value;
            }
        }
        getShopCfg(e) {
            return this.shopCfg[e];
        }
        getAchieveCfg(e) {
            return this.achieveCfg[e];
        }
        getLevelShipCfg(e) {
            return this.shipsArr[e - 1];
        }
        getEventLevelShipCfg(e) {
            return this.eventShipsArr[e - 1];
        }
        getComponentCfg(e) {
            return this.componentCfg[e];
        }
        getAdCfg(e) {
            var t = this.adCfg[e];
            return null == t && (t = ""), t;
        }
        getEventQuestCfg(e) {
            return this.eventQuestCfg[e];
        }
        getQuestCfg(e) {
            return this.questCfg[e];
        }
        getMapCfg(e) {
            return this.mapCfg[e];
        }
        getEventMapCfg(e) {
            return this.eventMapCfg[e];
        }
        getIslandCfg(e) {
            return this.islandCfg[e];
        }
        getBoatmanCfg(e) {
            return this.boatmanCfg[e];
        }
        getGlobalCfg(e) {
            let t = this.globalCfg[e];
            return t || 0;
        }
    }
    let U = {
        Level: 1,
        Active: 2
    }, D = {
        Free: 0,
        Unlock: 1,
        Transparent: 2
    }, G = {
        Idle: 0,
        WaitBuild: 1,
        Building: 2,
        BuildOver: 4,
        Finish: 5
    }, H = {
        Building: 0,
        Sailing: 1,
        Stop: 2,
        Sinking: 3
    }, P = {
        idle: "idle",
        walk: "walk",
        build: "build",
        sit_onTheChair: "sit_onTheChair",
        sleep: "sleep",
        gathering: "gathering",
        rowing_right: "rowing_right",
        rowing_left: "rowing_left",
        swimming: "swimming",
        swim_help: "swim_help",
        swim_jumpIntoSea: "swim_jumpIntoSea",
        swim_upToShip: "swim_upToShip",
        play_swing: "play_swing",
        happy_dance: "happy_dance",
        climb_stairs: "climb_stairs",
        happy: "happy",
        guide_PickUp: "guide_PickUp",
        ani_obj_idle: "ani_obj_idle",
        ani_obj_play: "ani_obj_play"
    }, V = {
        Building: 1,
        Collection: 2,
        SeaWood: 3,
        Row_Left: 4,
        Row_Right: 6,
        Save: 7,
        Sleep: 8,
        Cat: 9,
        Swing: 10
    }, j = {
        None: 0,
        Board: 1,
        Collect: 2,
        Sails: 3,
        Bed: 4,
        UpStairs: 5,
        DownStairs: 6,
        Oars_Left: 7,
        Oars_Right: 8,
        Wall: 9,
        Swing: 10
    }, R = {
        GameTime: 1,
        CollectMood: 2,
        CollectRes: 3,
        CollectCrew: 4,
        CollectAnimal: 5,
        CollectBox: 6,
        TimeTravel: 7,
        Speed: 8,
        BuildBoard: 9,
        SailCount: 10,
        PlayVedio: 11
    }, E = {
        NewPlayer: 1,
        Balance: 2,
        AnyOne: 3,
        Week: 4
    };
    class O {
        constructor() {
            this.sharecard_config = [{
                shareid: 335,
                imageurl: "",
                title: ""
            }], this._data = {}, this._data_key = "Idle-Arks-Build-At-Sea-", this.initData();
        }
        get data() {
            return this._data;
        }
        init() {
            this.initData();
            for (const t in this._data) {
                var e = this.getLocaldata(t);
                null != e && "" != e && (this._data[t] = e), this.saveData(t);
            }
            var t = De.getCurrentDate();
            this.closebannerDate != t && (this.closebannerDate = t, this.closeBannerCount = 0,
                this.showInsertAdCount = 0), this._data.curDate != t && (this.playVideoCount = 0,
                    this._data.curDate = t, this.saveData("curDate"), this.redMoneyGetCount >= 7 && (this.redMoneyGetCount = 0),
                    this.loginTime <= 0 || De.getCurrentTime() - this.loginTime < 864e5 ? this.loginCount++ : this.loginCount = 1,
                    this.loginTime = De.getCurrentTime());
        }
        initData() {
            this._data = {
                goldCount: 10,
                moodCount: -1,
                eventMoodCount: 600,
                moneyCount: 0,
                level: 1,
                levelStage: 1,
                eventLevel: 1,
                eventLevelStage: 1,
                curDate: "",
                loginCount: 0,
                loginTime: 0,
                signDate: "",
                signTotalCount: 0,
                signCount: 0,
                unlockCompoentDic: {},
                unlockEventCompoentDic: {},
                archieveIndexDic: {},
                archieveValDic: {},
                doubleTime: 0,
                doubleMaxRes: 0,
                gameCloseTime: 0,
                sinkCount: 0,
                eventSinkCount: 0,
                unlockBoatmanDic: {},
                savedplayer: 0,
                videoCountDic: 0,
                vedioGiftGet: {},
                balanceWithdrawIndex: 0,
                anyoneWithdrawCount: 0,
                getDayGoldDate: "",
                shopVideoCount: 0,
                playVedioTime: "",
                playVideoCount: 0,
                redMoneyGetCount: 0,
                redMoneyGetDate: "",
                clickBoxCount: 0,
                firstRedDate: "",
                boxRedMoneyCount: 0,
                superGiftGet: 0,
                showInsertAdCount: 0,
                closeBannerCount: 0,
                closebannerDate: "",
                gameTime: 0,
                guideProDic: {},
                musicId: 1,
                musicList: [1],
                matchCount: 0,
                lotterycount: 0,
                lotterytime: "",
                seaboxcount: 0,
                sharecount: 0,
                shareresult: {},
                sharetime: "",
                seaboxDate: "",
                boxvediocoount: 0,
                shareVedioCount: 0,
                shareVedioTime: "",
                shareVedioGet: 0,
                moreResOpenCount: 0,
                moreResOpenTime: "",
                mainUIshareCount: 0,
                mainUIshareTime: "",
                unlockStoryPage: 0,
                skipnight: 0,
                newHeroOnlineDate: "",
                newHeroOnlineTime: 0,
                newHeroDayGet: !1,
                newHeroVedioCount: 0,
                bottleDay: "",
                sumVedioCount: 0,
                qqfollowVedioCount: 0,
                timeBuffBoatman: {},
                timeBuffDayTime: "",
                christmasGiftCount: 0,
                christmasGiftDay: "",
                christmasGiftResultType: 0,
                christmasGiftResultCount: 0,
                christmasGiftTreeLevel: 1,
                unlockChrismasManDay: ""
            };
        }
        get unlockChrismasManDay() {
            return this._data.unlockChrismasManDay;
        }
        set unlockChrismasManDay(e) {
            this._data.unlockChrismasManDay = e, this.saveData("unlockChrismasManDay");
        }
        get christmasGiftTreeLevel() {
            return this._data.christmasGiftTreeLevel;
        }
        set christmasGiftTreeLevel(e) {
            this._data.christmasGiftTreeLevel = e, this.saveData("christmasGiftTreeLevel");
        }
        get christmasGiftCount() {
            return this._data.christmasGiftCount;
        }
        set christmasGiftCount(e) {
            this._data.christmasGiftCount = e, this.saveData("christmasGiftCount");
        }
        get christmasGiftDay() {
            return this._data.christmasGiftDay;
        }
        set christmasGiftDay(e) {
            this._data.christmasGiftDay = e, this.saveData("christmasGiftDay");
        }
        get christmasGiftResultType() {
            return this._data.christmasGiftResultType;
        }
        set christmasGiftResultType(e) {
            this._data.christmasGiftResultType = e, this.saveData("christmasGiftResultType");
        }
        get christmasGiftResultCount() {
            return this._data.christmasGiftResultCount;
        }
        set christmasGiftResultCount(e) {
            this._data.christmasGiftResultCount = e, this.saveData("christmasGiftResultCount");
        }
        setVedioGiftGet(e) {
            this._data.vedioGiftGet[e] = !0, this.saveData("vedioGiftGet");
        }
        getVedioGiftGet(e) {
            return this._data.vedioGiftGet[e];
        }
        resetVedioGiftGet() {
            this._data.vedioGiftGet = {}, this.saveData("vedioGiftGet");
        }
        get qqfollowVedioCount() {
            return this._data.qqfollowVedioCount;
        }
        set qqfollowVedioCount(e) {
            this._data.qqfollowVedioCount = e, this.saveData("qqfollowVedioCount");
        }
        get sumVedioCount() {
            return this._data.sumVedioCount;
        }
        set sumVedioCount(e) {
            this._data.sumVedioCount = e, this.saveData("sumVedioCount");
        }
        get bottleDay() {
            return this._data.bottleDay;
        }
        set bottleDay(e) {
            this._data.bottleDay = e, this.saveData("bottleDay");
        }
        get newHeroOnlineDate() {
            return this._data.newHeroOnlineDate;
        }
        set newHeroOnlineDate(e) {
            this._data.newHeroOnlineDate = e, this.saveData("newHeroOnlineDate");
        }
        get newHeroOnlineTime() {
            return this._data.newHeroOnlineTime;
        }
        set newHeroOnlineTime(e) {
            this._data.newHeroOnlineTime = e, this.saveData("newHeroOnlineTime");
        }
        get newHeroDayGet() {
            return this._data.newHeroDayGet;
        }
        set newHeroDayGet(e) {
            this._data.newHeroDayGet = e, this.saveData("newHeroDayGet");
        }
        get newHeroVedioCount() {
            return this._data.newHeroVedioCount;
        }
        set newHeroVedioCount(e) {
            this._data.newHeroVedioCount = e, this.saveData("newHeroVedioCount");
        }
        get skipnight() {
            return this._data.skipnight;
        }
        set skipnight(e) {
            this._data.skipnight = e, this.saveData("skipnight");
        }
        get unlockStoryPage() {
            return this._data.unlockStoryPage;
        }
        set unlockStoryPage(e) {
            this._data.unlockStoryPage = e, this.saveData("unlockStoryPage");
        }
        get balanceWithdrawIndex() {
            return this._data.balanceWithdrawIndex;
        }
        set balanceWithdrawIndex(e) {
            this._data.balanceWithdrawIndex = e, this.saveData("balanceWithdrawIndex");
        }
        get anyoneWithdrawCount() {
            return this._data.anyoneWithdrawCount;
        }
        set anyoneWithdrawCount(e) {
            this._data.anyoneWithdrawCount = e, this.saveData("anyoneWithdrawCount");
        }
        get firstRedDate() {
            return this._data.firstRedDate;
        }
        set firstRedDate(e) {
            this._data.firstRedDate = e, this.saveData("firstRedDate");
        }
        get clickBoxCount() {
            return this._data.clickBoxCount;
        }
        set clickBoxCount(e) {
            this._data.clickBoxCount = e, this.saveData("clickBoxCount");
        }
        get mainUIshareCount() {
            return this.mainUIshareTime != De.getCurrentDate() && (this.mainUIshareTime = De.getCurrentDate(),
                this.mainUIshareCount = 0), this._data.mainUIshareCount;
        }
        set mainUIshareCount(e) {
            this._data.mainUIshareCount = e, this.saveData("mainUIshareCount");
        }
        get mainUIshareTime() {
            return this._data.mainUIshareTime;
        }
        set mainUIshareTime(e) {
            this._data.mainUIshareTime = e, this.saveData("mainUIshareTime");
        }
        get moreResOpenTime() {
            return this._data.moreResOpenTime;
        }
        set moreResOpenTime(e) {
            this._data.moreResOpenTime = e, this.saveData("moreResOpenTime");
        }
        get moreResOpenCount() {
            return this._data.moreResOpenCount;
        }
        set moreResOpenCount(e) {
            this._data.moreResOpenCount = e, this.saveData("moreResOpenCount");
        }
        get shareVedioGet() {
            return this._data.shareVedioGet;
        }
        set shareVedioGet(e) {
            this._data.shareVedioGet = e, this.saveData("shareVedioGet");
        }
        get shareVedioCount() {
            return this._data.shareVedioCount;
        }
        set shareVedioCount(e) {
            this._data.shareVedioCount = e, this.saveData("shareVedioCount");
        }
        get shareVedioTime() {
            return this._data.shareVedioTime;
        }
        set shareVedioTime(e) {
            this._data.shareVedioTime = e, this.saveData("shareVedioTime");
        }
        get boxvediocoount() {
            return this._data.boxvediocoount;
        }
        set boxvediocoount(e) {
            this._data.boxvediocoount = e, this.saveData("boxvediocoount");
        }
        get lotterytime() {
            return this._data.lotterytime;
        }
        set lotterytime(e) {
            this._data.lotterytime = e, this.saveData("lotterytime");
        }
        get lotterycount() {
            return this._data.lotterycount;
        }
        set lotterycount(e) {
            this._data.lotterycount = e, this.saveData("lotterycount");
        }
        get superGiftGet() {
            return this._data.superGiftGet;
        }
        set superGiftGet(e) {
            this._data.superGiftGet = e, this.saveData("superGiftGet");
        }
        get playVedioTime() {
            return this._data.playVedioTime;
        }
        set playVedioTime(e) {
            this._data.playVedioTime = e, this.saveData("playVedioTime");
        }
        get sharetime() {
            return this._data.sharetime;
        }
        set sharetime(e) {
            this._data.sharetime = e, this.saveData("sharetime");
        }
        get shareresult() {
            return this._data.shareresult;
        }
        set shareresult(e) {
            this._data.shareresult[e] = !0, this.saveData("shareresult");
        }
        resetShareResult() {
            this._data.shareresult = {}, this.saveData("shareresult");
        }
        get sharecount() {
            return this._data.sharecount;
        }
        set sharecount(e) {
            this._data.sharecount = e, this.saveData("sharecount");
        }
        get seaboxcount() {
            return this._data.seaboxcount;
        }
        set seaboxcount(e) {
            this._data.seaboxcount = e, this.saveData("seaboxcount");
        }
        get seaboxDate() {
            return this._data.seaboxDate;
        }
        set seaboxDate(e) {
            this._data.seaboxDate = e, this.saveData("seaboxDate");
        }
        get savedplayer() {
            return this._data.savedplayer;
        }
        set savedplayer(e) {
            this._data.savedplayer = e, this.saveData("savedplayer");
        }
        get doubleTime() {
            return this._data.doubleTime;
        }
        set doubleTime(e) {
            this._data.doubleTime = e, this.saveData("doubleTime");
        }
        get doubleMaxRes() {
            return this._data.doubleMaxRes;
        }
        set doubleMaxRes(e) {
            this._data.doubleMaxRes = e, this.saveData("doubleMaxRes");
        }
        get goldCount() {
            return this._data.goldCount;
        }
        addGoldCount(e) {
            this._data.goldCount += e, this.saveData("goldCount"), Le.EventMgr.event(p.UI_UpdateGold);
        }
        get moneyCount() {
            return this._data.moneyCount;
        }
        addMoneyCount(e) {
            this._data.moneyCount += e, this.saveData("moneyCount"), Le.EventMgr.event(p.UI_UpdateMoney);
        }
        get moodCount() {
            return this._data.moodCount;
        }
        set moodCount(e) {
            this._data.moodCount = e, this.saveData("moodCount");
        }
        addMoodCount(e) {
            Le.GameMgr.gameMode == U.Active ? this.addEventMoodCount(e) : Le.GameMgr.gameMode == U.Level && (this._data.moodCount += e,
                this.saveData("moodCount"), Le.EventMgr.event(p.UI_UpdateMood));
        }
        get eventMoodCount() {
            return this._data.eventMoodCount;
        }
        set eventMoodCount(e) {
            this._data.eventMoodCount = e, this.saveData("eventMoodCount");
        }
        addEventMoodCount(e) {
            this._data.eventMoodCount += e, this.saveData("eventMoodCount"), Le.EventMgr.event(p.UI_UpdateMood);
        }
        get matchCount() {
            return this._data.matchCount;
        }
        set matchCount(e) {
            this._data.matchCount = e, this.saveData("matchCount");
        }
        get closebannerDate() {
            return this._data.closebannerDate;
        }
        set closebannerDate(e) {
            this._data.closebannerDate = e, this.saveData("closebannerDate");
        }
        get closeBannerCount() {
            return this._data.closeBannerCount;
        }
        set closeBannerCount(e) {
            this._data.closeBannerCount = e, this.saveData("closeBannerCount");
        }
        get showInsertAdCount() {
            return this._data.showInsertAdCount;
        }
        set showInsertAdCount(e) {
            this._data.showInsertAdCount = e, this.saveData("showInsertAdCount");
        }
        get redMoneyGetDate() {
            return this._data.redMoneyGetDate;
        }
        set redMoneyGetDate(e) {
            this._data.redMoneyGetDate = e, this.saveData("redMoneyGetDate");
        }
        get redMoneyGetCount() {
            return this._data.redMoneyGetCount;
        }
        set redMoneyGetCount(e) {
            this._data.redMoneyGetCount = e, this.saveData("redMoneyGetCount");
        }
        get boxRedMoneyCount() {
            return this._data.boxRedMoneyCount;
        }
        set boxRedMoneyCount(e) {
            this._data.boxRedMoneyCount = e, this.saveData("boxRedMoneyCount");
        }
        get playVideoCount() {
            return this._data.playVideoCount;
        }
        set playVideoCount(e) {
            this._data.playVideoCount = e, this.saveData("playVideoCount");
        }
        get shopVideoCount() {
            return this._data.shopVideoCount;
        }
        set shopVideoCount(e) {
            this._data.shopVideoCount = e, this.saveData("shopVideoCount");
        }
        get getDayGoldDate() {
            return this._data.getDayGoldDate;
        }
        set getDayGoldDate(e) {
            this._data.getDayGoldDate = e, this.saveData("getDayGoldDate");
        }
        get gameCloseTime() {
            return this._data.gameCloseTime;
        }
        set gameCloseTime(e) {
            this._data.gameCloseTime = e, this.saveData("gameCloseTime");
        }
        get unlockBoatmanDic() {
            return this._data.unlockBoatmanDic;
        }
        getunlockBoatmanDic(e) {
            if (this._data.timeBuffDayTime != De.getCurrentDate()) {
                this._data.timeBuffDayTime = De.getCurrentDate(), this.saveData("timeBuffDayTime");
                for (const e in this._data.timeBuffBoatman) this._data.unlockBoatmanDic[e] = null;
                this.saveData("unlockBoatmanDic"), this._data.timeBuffBoatman = {}, this.saveData("timeBuffBoatman");
            }
            return this._data.unlockBoatmanDic[e];
        }
        setunlockBoatmanDic(e) {
            var t = Le.CfgMgr.getBoatmanCfg(e);
            if (t.Type == 1 && !this._data.unlockBoatmanDic[e]) {
                Le.DataMgr.setArchieveValDic(R.CollectCrew, 1)
            } else if (t.Type == 2 && !this._data.unlockBoatmanDic[e]) {
                Le.DataMgr.setArchieveValDic(R.CollectAnimal, 1)
            }
            t && 1 == t.TimeBuff && (this._data.timeBuffBoatman[e] = !0, this.saveData("timeBuffBoatman")),
                this._data.unlockBoatmanDic[e] = !0, this.saveData("unlockBoatmanDic");
        }
        get VideoCount() {
            return this._data.videoCountDic;
        }
        set VideoCount(e) {
            this._data.videoCountDic = e, this.saveData("videoCountDic");
        }
        getArchieveIndexDic(e) {
            return this._data.archieveIndexDic[e];
        }
        setArchieveIndexDic(e, t) {
            this._data.archieveIndexDic[e] = t, this.saveData("archieveIndexDic");
        }
        getArchieveValDic(e) {
            return this._data.archieveValDic[e];
        }
        setArchieveValDic(e, t) {
            null == this._data.archieveValDic[e] && (this._data.archieveValDic[e] = 0),
                this._data.archieveValDic[e] += t,
                Le.GameMgr.updateAchieveInfo(),
                this.saveData("archieveValDic");
        }
        get unlockComponentDic() {
            return this._data.unlockCompoentDic;
        }
        getUnlockCompoentDic(e) {
            return this._data.unlockCompoentDic[e];
        }
        setUnlockCompoentDic(e, t) {
            this._data.unlockCompoentDic[e] = t, this.saveData("unlockCompoentDic");
        }
        retUnlockCompoentDic() {
            this._data.unlockCompoentDic = {}, this.saveData("unlockCompoentDic");
        }
        get unlockEventCompoentDic() {
            return this._data.unlockEventCompoentDic;
        }
        getUnlockEventCompoentDic(e) {
            return this._data.unlockEventCompoentDic[e];
        }
        setUnlockEventCompoentDic(e, t) {
            this._data.unlockEventCompoentDic[e] = t, this.saveData("unlockEventCompoentDic");
        }
        retUnlockEventCompoentDic() {
            this._data.unlockEventCompoentDic = {}, this.saveData("unlockEventCompoentDic");
        }
        getGuideProDic(e) {
            return this._data.guideProDic[e];
        }
        setGuideProDic(e, t = !0) {
            this._data.guideProDic[e] = t, this.saveData("guideProDic");
        }
        get loginTime() {
            return this._data.loginTime;
        }
        set loginTime(e) {
            this._data.loginTime = e, this.saveData("loginTime");
        }
        get loginCount() {
            return this._data.loginCount;
        }
        set loginCount(e) {
            this._data.loginCount = e, this.saveData("loginCount");
        }
        get gameTime() {
            return this._data.gameTime;
        }
        set gameTime(e) {
            this._data.gameTime = e, this.saveData("gameTime");
        }
        get sinkCount() {
            var e = this._data.sinkCount;
            return Le.GameMgr.gameMode == U.Active && (e = this.eventSinkCount), e;
        }
        set sinkCount(e) {
            this._data.sinkCount = e, this.saveData("sinkCount");
        }
        get eventSinkCount() {
            return this._data.eventSinkCount;
        }
        set eventSinkCount(e) {
            this._data.eventSinkCount = e, this.saveData("eventSinkCount");
        }
        get level() {
            return this._data.level;
        }
        set level(e) {
            this._data.level = e, this.saveData("level");
        }
        get eventLevel() {
            return this._data.eventLevel;
        }
        set eventLevel(e) {
            this._data.eventLevel = e, this.saveData("eventLevel");
        }
        get levelStage() {
            return this._data.levelStage;
        }
        set levelStage(e) {
            this._data.levelStage = e, this.saveData("levelStage");
        }
        get eventLevelStage() {
            return this._data.eventLevelStage;
        }
        set eventLevelStage(e) {
            this._data.eventLevelStage = e, this.saveData("eventLevelStage");
        }
        get bVibration() {
            return this._data.bVibration;
        }
        set bVibration(e) {
            this._data.bVibration = e, this.saveData("bVibration");
        }
        get signDate() {
            return this._data.signDate;
        }
        set signDate(e) {
            this._data.signDate = e, this.saveData("signDate");
        }
        get signCount() {
            return this._data.signCount;
        }
        set signCount(e) {
            this._data.signCount = e, this.saveData("signCount");
        }
        get signTotalCount() {
            return this._data.signTotalCount;
        }
        set signTotalCount(e) {
            this._data.signTotalCount = e, this.saveData("signTotalCount");
        }
        get musicId() {
            return this._data.musicId;
        }
        set musicId(e) {
            this._data.musicId = e, this.saveData("musicId");
        }
        get bossfightCount() {
            return this._data.bossfightCount;
        }
        set bossfightCount(e) {
            this._data.bossfightCount = e, this.saveData("bossfightCount");
        }
        get musicList() {
            return this._data.musicList;
        }
        setUnlickMusic(e) {
            this._data.musicList.push(e), this.saveData("musicList");
        }
        hasMusic(e) {
            return this._data.musicList.indexOf(e) >= 0;
        }
        getLocaldata(e) {
            return Laya.LocalStorage.getJSON(this._data_key + e);
        }
        saveData(e) {
            Laya.LocalStorage.setJSON(this._data_key + e, this._data[e]);
        }
        clearData() {
            this.initData();
            for (const e in this._data) this.saveData(e);
        }
    }
    class z extends Laya.EventDispatcher {
        constructor() {
            super();
        }
    }
    class N {
        constructor() {
            this.data = null, this.Complete = !1, this.PrepFlag = !1;
        }
    }
    var Y = {};
    !function (e, t) {
        for (var i in t) e[i] = t[i];
    }(Y, function (e) {
        var t = {};
        function n(i) {
            if (t[i]) return t[i].exports;
            var o = t[i] = {
                i: i,
                l: !1,
                exports: {}
            };
            return e[i].call(o.exports, o, o.exports, n), o.l = !0, o.exports;
        }
        return n.m = e, n.c = t, n.d = function (e, t, i) {
            n.o(e, t) || Object.defineProperty(e, t, {
                configurable: !1,
                enumerable: !0,
                get: i
            });
        }, n.r = function (e) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, n.n = function (e) {
            var t = e && e.__esModule ? function () {
                return e.default;
            } : function () {
                return e;
            };
            return n.d(t, "a", t), t;
        }, n.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, n.p = "", n(n.s = 11);
    }([function (e, t, i) {
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var o = function () {
            function t() { }
            return t.lerr = function () {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                e.unshift("====>"), console.error.apply(window, e);
            }, t.llog = function () {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                e.unshift("====>"), console.log.apply(window, e);
            }, t.twoInt = function (e) {
                return e < 10 ? "0" + e : e;
            }, t.todayStr = function () {
                var e = new Date();
                return "" + e.getFullYear() + t.twoInt(e.getMonth() + 1) + t.twoInt(e.getDate());
            }, t.randomInt = function (e, t) {
                return Math.floor(Math.random() * (t - e + 1) + e);
            }, t.saveData = function (e, t) {
                var i = window.localStorage;
                i && i.setItem("kcSdk_" + e, t);
            }, t.loadData = function (e) {
                var t = window.localStorage;
                if (t) {
                    var i = t.getItem("kcSdk_" + e);
                    if (i) return i;
                }
                return null;
            }, t.encodeUTF8 = function (e) {
                var t, i, o, n = [];
                for (t = 0; t < e.length; t++) (i = e.charCodeAt(t)) < 128 ? n.push(i) : i < 2048 ? n.push(192 + (i >> 6 & 31), 128 + (63 & i)) : ((o = 55296 ^ i) >> 10 == 0 ? (i = (o << 10) + (56320 ^ e.charCodeAt(++t)) + 65536,
                    n.push(240 + (i >> 18 & 7), 128 + (i >> 12 & 63))) : n.push(224 + (i >> 12 & 15)),
                    n.push(128 + (i >> 6 & 63), 128 + (63 & i)));
                return n;
            }, t.s = function (e) {
                var i, o, n, a = new Uint8Array(t.encodeUTF8(e)), s = 16 + (a.length + 8 >>> 6 << 4);
                for ((e = new Uint8Array(s << 2)).set(new Uint8Array(a.buffer)), e = new Uint32Array(e.buffer),
                    n = new DataView(e.buffer), i = 0; i < s; i++) e[i] = n.getUint32(i << 2);
                e[a.length >> 2] |= 128 << 24 - 8 * (3 & a.length), e[s - 1] = a.length << 3;
                var r = [], l = [function () {
                    return g[1] & g[2] | ~g[1] & g[3];
                }, function () {
                    return g[1] ^ g[2] ^ g[3];
                }, function () {
                    return g[1] & g[2] | g[1] & g[3] | g[2] & g[3];
                }, function () {
                    return g[1] ^ g[2] ^ g[3];
                }], h = function (e, t) {
                    return e << t | e >>> 32 - t;
                }, d = [1518500249, 1859775393, -1894007588, -899497514], g = [1732584193, -271733879, null, null, -1009589776];
                for (g[2] = ~g[0], g[3] = ~g[1], i = 0; i < e.length; i += 16) {
                    var c = g.slice(0);
                    for (o = 0; o < 80; o++) r[o] = o < 16 ? e[i + o] : h(r[o - 3] ^ r[o - 8] ^ r[o - 14] ^ r[o - 16], 1),
                        n = h(g[0], 5) + l[o / 20 | 0]() + g[4] + r[o] + d[o / 20 | 0] | 0, g[1] = h(g[1], 30),
                        g.pop(), g.unshift(n);
                    for (o = 0; o < 5; o++) g[o] = g[o] + c[o] | 0;
                }
                for (n = new DataView(new Uint32Array(g).buffer), i = 0; i < 5; i++) g[i] = n.getUint32(i << 2);
                return Array.prototype.map.call(new Uint8Array(new Uint32Array(g).buffer), function (e) {
                    return (e < 16 ? "0" : "") + e.toString(16);
                }).join("");
            }, t.b = function (e) {
                var t = [];
                for (var i in e) t.push(i);
                t = t.sort();
                for (var o = "", n = 0; n < t.length; n++) {
                    var a = e[t[n]];
                    "object" == typeof a && (a = this.b(a)), o += t[n] + a;
                }
                return o;
            }, t.a = function (e, i, o) {
                var n = [];
                for (var a in e) null !== e[a] && void 0 !== e[a] ? n.push(a) : delete e[a];
                n = n.sort();
                var s = t.b(e);
                return i && (s += i), s += o || "pH0Xhyenu2e1zdUg", t.s(s);
            }, t.jget = function (e, i) {
                i || (i = function (e) {
                    if (e) return t.lerr(e);
                });
                // var o = new XMLHttpRequest();
                // o.open("GET", e, !0), o.onload = function () {
                //     return 200 == o.status ? i(null, o.responseText) : i("[ERR-jget]:" + o.status);
                // }, o.send();
            }, t.jax = function (e, i, o) {
                o || (o = function (e) {
                    if (e) return t.lerr(e);
                });
                // var n = new XMLHttpRequest(), a = new Date().getTime();
                // i.s = t.a(i, a), n.open("POST", e, !0), n.setRequestHeader("Content-Type", "application/json; charset=utf-8"),
                //     n.setRequestHeader("ts", "" + a);
                // var s = JSON.stringify(i);
                // n.send(s), n.onload = function () {
                //     if (200 == n.status) {
                //         var e = {
                //             jaxERR: "" + n.responseText
                //         };
                //         try {
                //             e = JSON.parse(n.responseText);
                //         } catch (e) {
                //             return t.lerr(e), o(null, {
                //                 re: "1111",
                //                 err: "jsonErr:" + n.responseText
                //             });
                //         }
                //         return o(null, e);
                //     }
                //     return o(null, {
                //         re: "9" + n.status
                //     });
                // };
            }, t;
        }();
        t.jax = o.jax, t.jget = o.jget, t.llog = o.llog, t.lerr = o.lerr, t.saveData = o.saveData,
            t.loadData = o.loadData, t.randomInt = o.randomInt, t.todayStr = o.todayStr;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(2), l = o(0), h = function (t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.adPosIdKey = "adUnitId", e.wxBannerShowTimes = 0, e.bannerDestroyed = !1,
                    e;
            }
            return s(e, t), e.prototype.getChannelT = function (e) {
                var t = window.wx;
                return t ? e && !t[e] ? (l.llog("channelT(wx)." + e + " 不存在!!"), null) : t : (l.llog("channelT(wx) 不存在!!"),
                    null);
            }, e.prototype.initChannel = function (e, t) {
                this.videoSleepTime = 5e3;
                var i = this;
                i.isInitOK = !0, setTimeout(function () {
                    i.loadBanner();
                }, this.bannerLoadDelay), setTimeout(function () {
                    i.interAutoLoad && i.loadInter();
                }, 1e3), i.videoAutoLoad && i.loadVideo(), i.onShow(), i.showShareMenu(), i.getLaunchOptionsSync(),
                    l.llog("init complete!" + this.channelName), i.isInitOK = !0;
            }, e.prototype.showShareMenu = function () {
                var e = this.getChannelT();
                e && e.showShareMenu && this.showShareMenuObj && (e.showShareMenu(this.showShareMenuObj),
                    l.llog("showShareMenu"));
            }, e.prototype.shareAppMessage = function () {
                var e = this.getChannelT();
                e && e.shareAppMessage && this.shareAppMessageObj && e.shareAppMessage(this.shareAppMessageObj);
            }, e.prototype.onShow = function () {
                var e = this.getChannelT();
                e && e.onShow && this.onShowFn && e.onShow(this.onShowFn);
            }, e.prototype.getLaunchOptionsSync = function () {
                var e = this.getChannelT();
                e && e.getLaunchOptionsSync && this.getLaunchOptionsSyncFn && this.getLaunchOptionsSyncFn(e.getLaunchOptionsSync());
            }, e.prototype.installShortcut = function () { }, e.prototype.destroyBanner = function () {
                this.bannerAdObj && this.bannerAdObj.destroy && (this.bannerAdObj.destroy(), this.bannerDestroyed = !0,
                    this.triggerEvent("banner", "destroy"));
            }, e.prototype.loadBanner = function (e) {
                var t = this;
                if (e || !(this.checkPrepare("banner", null, "createBannerAd", !0) <= 0)) {
                    l.llog("loadBanner now");
                    var i = this.getChannelT(), o = {
                        style: {
                            left: 20,
                            top: 400,
                            width: 350
                        }
                    };
                    if (o[this.adPosIdKey] = this.bannerId, this.bannerIntervals && (o.adIntervals = this.bannerIntervals),
                        this.bannerStyle) {
                        var n = this.bannerStyle;
                        "function" == typeof this.bannerStyle && (n = this.bannerStyle()), o.style = n;
                    }
                    t.bannerAdObj && t.bannerAdObj.destroy && (t.bannerAdObj.destroy(), l.llog("banner destroy and reCreate"));
                    var a = t.addCreateAdConfProp(o), s = i.createBannerAd(a);
                    this.bannerDestroyed = !1, t.bannerAdObj = s, s.onLoad(function () {
                        l.llog("banner onLoad"), t.triggerEvent("banner", "load");
                    }), s.onError(function (e) {
                        l.llog("banner onError:", e), l.llog("bannerConfig:", a), t.loadDelay("banner", 3e3, function () {
                            t.loadBanner(!1);
                        }), t.triggerEvent("banner", "error");
                    }), s.onResize(function (e) {
                        l.llog("banner onResize", e), t.bannerOnResize ? t.bannerOnResize(e, s, i) : (s.style.top = i.getSystemInfoSync().screenHeight - e.height + .1,
                            s.style.left = (i.getSystemInfoSync().screenWidth - e.width) / 2 + .1);
                    }), e && this.doShowBanner();
                }
            }, e.prototype.doShowBanner = function () {
                this.wxBannerShowTimes++, l.llog("show banner now! - ", this.wxBannerShowTimes, "/", this.wxBannerMaxShowTimes),
                    this.bannerAdObj.show();
            }, e.prototype.showBanner = function (e) {
                this.checkPrepare("banner", e, null, !0) <= 0 || (!this.bannerDestroyed && this.bannerAdObj && this.wxBannerShowTimes <= this.wxBannerMaxShowTimes ? this.doShowBanner() : (this.wxBannerShowTimes = 0,
                    this.loadBanner(!0)));
            }, e.prototype.loadInter = function (e, t) {
                if (t || !(this.checkPrepare("inter", null, "createInterstitialAd", !0) <= 0)) {
                    l.llog("load inter start," + e + "," + t), this.interAdObj && (this.interAdObj.offLoad(this.interAdObj.onLoadDoFn),
                        this.interAdObj.offError(this.interAdObj.onErrorDoFn), this.interAdObj.offClose(this.interAdObj.onCloseDoFn)),
                        this.interLoaded = !1;
                    var i = this.getChannelT(), o = this, n = {};
                    n[this.adPosIdKey] = e || this.interId, this.interAdObj = i.createInterstitialAd(this.addCreateAdConfProp(n)),
                        this.interAdObj.onLoadDoFn = function () {
                            if (l.llog("inter onLoad"), o.interLoaded = !0, t) {
                                var e = o.interAdObj.show();
                                e && e.catch && e.catch(function (e) {
                                    l.lerr(e);
                                });
                            }
                            o.triggerEvent("inter", "load");
                        }, this.interAdObj.onLoad(this.interAdObj.onLoadDoFn), this.interAdObj.onCloseDoFn = function () {
                            l.llog("inter onClose"), o.interLoaded = !1, o.triggerEvent("inter", "close");
                        }, this.interAdObj.onClose(this.interAdObj.onCloseDoFn), this.interAdObj.onErrorDoFn = function (e) {
                            l.llog("inter onError:", e), o.interLoaded = !1, o.triggerEvent("inter", "error");
                        }, this.interAdObj.onError(this.interAdObj.onErrorDoFn), l.llog("load inter now"),
                        this.interAdObj.load();
                }
            }, e.prototype.showInter = function (e, t) {
                if (t) this.canShow(e) && this.loadInter(t, !0); else {
                    var i = this.checkPrepare("inter", e);
                    if (-1 !== i) {
                        if (!(i <= 0)) {
                            var o = this.interAdObj.show();
                            o && o.catch && o.catch(function (e) {
                                l.lerr(e);
                            });
                        }
                    } else this.loadInter(this.interId, !0);
                }
            }, e.prototype.callVideoLoad = function (e) {
                var i = this, o = t.prototype.callVideoLoad.call(this, e);
                return o && o.catch && o.catch(function (e) {
                    l.llog("video load Error:"), i.videoLoaded = !1, i.isVideoLoading = !1, l.lerr(e);
                }), o;
            }, e.prototype.callVideoShow = function () {
                var e = this, i = t.prototype.callVideoShow.call(this);
                return i && i.catch && i.catch(function (t) {
                    l.llog("video show Error:"), e.videoLoaded = !1, e.isVideoLoading = !1, l.lerr(t);
                }), i;
            }, e.prototype.callVideoOnCLose = function (e) {
                var t = this;
                this.videoAdObj.onCloseDoFn = function (i) {
                    l.llog("video onClose"), t.videoLoaded = !1, t.isVideoLoading = !1, e && !t.videoAutoLoad && t.videoAdObj.onLoadDoFn && t.videoAdObj.offLoad(t.videoAdObj.onLoadDoFn);
                    var o = "notEnd";
                    i && i.isEnded && (o = null), t.callVideoCallback(o), t.triggerEvent("video", "close");
                }, this.videoAdObj.onClose(this.videoAdObj.onCloseDoFn);
            }, e.prototype.loadVideo = function (e, t) {
                if (this.videoErrCalled = !1, this.videoLoaded) l.llog("video is already loaded"); else if (this.isVideoLoading) l.llog("video is loading..."); else if (t || !(this.checkPrepare("video", null, "createRewardedVideoAd", !0) <= 0)) {
                    l.llog("video load start, isAutoShow:" + t + " newPosId:" + e + " channel:" + this.channelName + " videoLoaded:" + this.videoLoaded),
                        this.videoAdObj && (this.videoAdObj.offLoad(this.videoAdObj.onLoadDoFn), this.videoAdObj.offError(this.videoAdObj.onErrorDoFn),
                            this.videoAdObj.offClose(this.videoAdObj.onCloseDoFn)), l.llog("go new videoAdObj");
                    var i = this.getChannelT(), o = {};
                    o[this.adPosIdKey] = e || this.videoId;
                    var n = this.addCreateAdConfProp(o);
                    e && "wx" === this.channelName && (n.multiton = !0), this.videoAdObj = i.createRewardedVideoAd(n),
                        this.callVideoOnLoad(t), this.callVideoOnCLose(e), this.callVideoOnStart(), this.callVideoOnError(e),
                        this.callVideoLoad(t);
                }
            }, e.prototype.loadNative = function (e, t) { }, e;
        }(r.KdBase);
        i.default = h;
    }, function (e, i, o) {
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = o(0), a = function () {
            function t() {
                this.version = "1.5.1", this.channelName = "oppo", this.bannerLoadDelay = 10, this.bannerMaxShowPerDay = 200,
                    this.bannerCreateTime = 0, this.bannerSleepTime = 3e4, this.adPosIdKey = "posId",
                    this.showCountMap = {
                        banner: 0,
                        inter: 0,
                        video: 0,
                        native: 0
                    }, this.showMaxMap = {
                        banner: 0,
                        inter: 0,
                        video: 0,
                        native: 0
                    }, this.interCreateTime = 0, this.interSleepTime = 5e3, this.interShowCount = 0,
                    this.interLoaded = !1, this.interAutoLoad = !0, this.videoCreateTime = 0, this.videoSleepTime = 5e3,
                    this.videoLoaded = !1, this.videoAutoLoad = !0, this.wxBannerMaxShowTimes = 3, this.nativeCreateTime = 0,
                    this.nativeSleepTime = 5e3, this.nativeLoaded = !1, this.black = 0, this.isInitOK = !1,
                    this.timeOutIdMap = {}, this.posIdMap = {
                        banner: [],
                        inter: [],
                        video: [],
                        native: []
                    }, this.kUrl = "",
                    this.kdStrategy = [[[100, 1, 2]]],
                    this.audioCtrl = {
                        play: function () { },
                        stop: function () { }
                    }, this.eventMap = {}, this.videoErrCalled = !1, this.isAudioStoped = !1, this.isVideoLoading = !1,
                    this.isOnLoadCalling = !1, this.nativeAdIdMap = {};
            }
            return t.prototype.getChannelName = function () {
                return this.channelName;
            }, t.prototype.login = function (e) {
                var t = this.getChannelT();
                t && t.login && this.loginObj && t.login(e || this.loginObj);
            }, t.prototype.showShareMenu = function () { }, t.prototype.shareAppMessage = function () { },
                t.prototype.onEvent = function (e, t, i, o) {
                    this.eventMap[e + "_" + t + "_" + i] = o;
                }, t.prototype.triggerEvent = function (e, t) {
                    var i = this.eventMap[this.channelName + "_" + e + "_" + t];
                    i && i();
                }, t.prototype.onShow = function () {
                    var e = this.getChannelT();
                    e && e.onShow && this.onShowFn && e.onShow(this.onShowFn);
                }, t.prototype.getLaunchOptionsSync = function () {
                    var e = this.getChannelT();
                    e && e.getLaunchOptionsSync && this.getLaunchOptionsSyncFn && this.getLaunchOptionsSyncFn(e.getLaunchOptionsSync());
                }, t.prototype.installShortcut = function () {
                    var e = this.getChannelT();
                    if (e && e.hasShortcutInstalled && e.installShortcut) {
                        var t = this;
                        e.hasShortcutInstalled({
                            success: function (i) {
                                i ? t.shortCutObj.success(i) : e.installShortcut(t.shortCutObj);
                            },
                            fail: function (e) {
                                t.shortCutObj.fail && t.shortCutObj.fail(e);
                            },
                            complete: function () { }
                        });
                    }
                }, t.prototype.getChannelT = function (e) {
                    var t = window.qg;
                    return t ? e && !t[e] ? (n.llog("channelT(qg)." + e + " 不存在!!"), null) : t : (n.llog("channelT(qg) 不存在!!"),
                        null);
                }, t.prototype.initChannel = function (e, t) {
                    n.llog("init Channnel:" + t.channelName), this.isInitOK = !0;
                }, t.prototype.getBlack = function () {
                    return this.black;
                }, t.prototype.canShow = function (e) {
                    return !0;
                }, t.prototype.loadDelay = function (e, t, i) {
                    n.llog("loadDelay:" + e + "," + t);
                    var o = this, a = o.timeOutIdMap[e];
                    a && clearTimeout(a);
                    var s = e.charAt(0).toUpperCase() + e.substring(1), r = i || function () {
                        o["load" + s] ? (o["load" + s](), n.llog("后台load,关闭错误回调"), o.videoErrCalled = !0) : n.lerr("err adType:" + s + "," + o.channelName);
                    };
                    r ? o.timeOutIdMap[e] = setTimeout(r, t || 100) : n.llog("无loadFn:load" + s);
                }, t.prototype.showCountAdd = function (e) {
                    n.llog("showCountAdd:" + e + "|" + this.showCountMap[e]), this.showCountMap[e]++,
                        this.showMaxMap[e] && n.saveData("show_count_" + e + "_" + n.todayStr(), "" + this.showCountMap[e]);
                }, t.prototype.loadAllShowCount = function () {
                    for (var e in this.showCountMap) {
                        var t = n.loadData("show_count_" + e + "_" + n.todayStr());
                        t && (this.showCountMap[e] = parseInt(t));
                    }
                }, t.prototype.checkPrepare = function (e, t, i, o, a, s) {
                    if (!this.getChannelT(i)) return 0;
                    if (this.showMaxMap[e] && this.showCountMap[e] >= this.showMaxMap[e]) return n.llog("当日展示次数已达上限:" + e + "," + this.showCountMap[e] + "/" + this.showMaxMap[e]),
                        this.triggerEvent(e, "limit"), 0;
                    if (!this.isInitOK) return n.llog(e + " SDK未完成init"), this.triggerEvent(e, "noInit"),
                        0;
                    if (!this[e + "Id"]) return n.llog(e + " 无Id,请检查init参数"), 0;
                    if (!o) {
                        if (!this[e + "AdObj"]) return n.llog(e + "AdObj 为空!"), -1;
                        if (!this[e + "Loaded"]) return n.llog(e + " 未完成load!"), -1;
                    }
                    return "number" != typeof t || this.canShow(t) ? 1 : (this.triggerEvent(e, "canShow"),
                        0);
                }, t.prototype.setConf = function (e) {
                    e ? (void 0 !== e.gameId && (this.gameId = e.gameId), void 0 !== e.appId && (this.appId = e.appId),
                        void 0 !== e.bannerOnResize && (this.bannerOnResize = e.bannerOnResize), void 0 !== e.channelName && (this.channelName = e.channelName),
                        void 0 !== e.bannerId && (this.bannerId = e.bannerId), void 0 !== e.interId && (this.interId = e.interId),
                        void 0 !== e.videoId && (this.videoId = e.videoId), void 0 !== e.nativeId && (this.nativeId = e.nativeId),
                        void 0 !== e.audioCtrl && (this.audioCtrl = e.audioCtrl), void 0 !== e.kUrl && (this.kUrl = e.kUrl),
                        void 0 !== e.nativeOnLoad && (this.nativeOnLoad = e.nativeOnLoad), void 0 !== e.nativeOnError && (this.nativeOnError = e.nativeOnError),
                        void 0 !== e.bannerIntervals && (this.bannerIntervals = e.bannerIntervals), void 0 !== e.bannerLoadDelay && (this.bannerLoadDelay = e.bannerLoadDelay),
                        void 0 !== e.bannerStyle && (this.bannerStyle = e.bannerStyle), void 0 !== e.showShareMenuObj && (this.showShareMenuObj = e.showShareMenuObj),
                        void 0 !== e.shareAppMessageObj && (this.shareAppMessageObj = e.shareAppMessageObj),
                        void 0 !== e.loginObj && (this.loginObj = e.loginObj), void 0 !== e.shortCutObj && (this.shortCutObj = e.shortCutObj),
                        void 0 !== e.onShowFn && (this.onShowFn = e.onShowFn), void 0 !== e.getLaunchOptionsSyncFn && (this.getLaunchOptionsSyncFn = e.getLaunchOptionsSyncFn),
                        void 0 !== e.videoAutoLoad && (this.videoAutoLoad = e.videoAutoLoad), void 0 !== e.interAutoLoad && (this.interAutoLoad = e.interAutoLoad),
                        void 0 !== e.wxBannerMaxShowTimes && (this.wxBannerMaxShowTimes = e.wxBannerMaxShowTimes)) : n.llog(" Kd init no conf!!!");
                }, t.prototype.updatePosId = function (e, t) {
                    if (t && !(t.length < 3)) {
                        n.llog("updatePosId", e, t);
                        var i = t.split(",");
                        this[e + "Id"] = i[0], this.posIdMap[e] = [];
                        for (var o = 0; o < i.length; o++) {
                            var a = i[o].trim();
                            a.length > 2 && this.posIdMap[e].push(a);
                        }
                    }
                }, t.prototype.getPosId = function (e, t) {
                    if (!this.isInitOK) return n.llog("getPosId未初始完成,adType:" + e + " num:" + t), "";
                    if (!t) return this[e + "Id"];
                    var i = this.posIdMap[e];
                    return i ? t >= i.length ? (n.llog("getPosId-" + e + "长度不足 num:" + t + " len:" + i.length),
                        "") : i[t] : (n.llog("getPosId无此adType:" + e + " num:" + t), "");
                }, t.prototype.init = function (e, t) {
                    this.setConf(e), n.llog("KD init v:" + this.version + "," + this.channelName + "," + this.gameId),
                        t || (t = function (e) { });
                    var i = this.getChannelT(null);
                    if (i) {
                        var o = this;
                        n.jax(this.kUrl, {
                            gameId: this.gameId + "_" + this.channelName
                        }, function (e, i) {
                            return e ? (n.lerr(e), n.llog(" getBlack error!"), void t("getBlack error")) : i.re < 0 ? (n.lerr("getBlack.re err:" + i.re),
                                void t("getBlack.re err:" + i.re)) : (o.black = i.black, n.llog("KD inited OK. black:" + o.black),
                                    o.updatePosId("banner", i.banner), o.updatePosId("inter", i.inter), o.updatePosId("video", i.video),
                                    o.updatePosId("native", i.native), void t(null));
                        }), this.initChannel(i, e), this.loadAllShowCount();
                    } else t("channelT error");
                }, t.prototype.addCreateAdConfProp = function (e) {
                    return e;
                }, t.prototype.showBanner = function (e) {
                    var t = this;
                    if (!(this.checkPrepare("banner", e, "createBannerAd", !0) <= 0)) {
                        n.llog("showBanner start", this.channelName);
                        var i = this.getChannelT(), o = {};
                        o[this.adPosIdKey] = this.bannerId, t.bannerAdObj = i.createBannerAd(o), t.bannerAdObj.offShow(),
                            t.bannerAdObj.onShow(function () {
                                n.llog("banner onShow"), t.triggerEvent("banner", "show");
                            }), t.bannerAdObj.offHide(), t.bannerAdObj.onHide(function () {
                                n.llog("banner onHide"), t.showCountAdd("banner"), t.triggerEvent("banner", "close");
                            }), t.bannerAdObj.offError(), t.bannerAdObj.onError(function (e) {
                                n.llog("banner onError:", e), t.triggerEvent("banner", "error");
                            }), n.llog("banner show now"), t.bannerAdObj.show();
                    }
                }, t.prototype.closeBanner = function () {
                    this.bannerAdObj && (n.llog("banner hide now"), this.bannerAdObj.hide());
                }, t.prototype.destroyBanner = function () {
                    this.bannerAdObj && this.bannerAdObj.destroy && (this.bannerAdObj.destroy(), this.triggerEvent("banner", "destroy"));
                }, t.prototype.destroyVideo = function () {
                    this.videoAdObj && this.videoAdObj.destroy && (this.videoAdObj.destroy(), this.triggerEvent("video", "destroy"));
                }, t.prototype.destroyInter = function () {
                    this.interAdObj && this.interAdObj.destroy && (this.interAdObj.destroy(), this.triggerEvent("inter", "destroy"));
                }, t.prototype.loadInter = function (e, t) {
                    if (this.interLoaded = !1, t || !(this.checkPrepare("inter", null, "createInsertAd", !0) <= 0)) {
                        n.llog("load inter start:" + e + "," + t);
                        var i = this.getChannelT(), o = this, a = {};
                        a[this.adPosIdKey] = e || this.interId, this.interAdObj = i.createInsertAd(a), this.interAdObj.offLoad(),
                            this.interAdObj.onLoad(function () {
                                n.llog("inter onLoad,autoShow:" + t), o.interLoaded = !0, t && (n.llog("show inter now"),
                                    o.interAdObj.show()), o.triggerEvent("inter", "load");
                            }), this.interAdObj.offClose ? (this.interAdObj.offClose(), this.interAdObj.onClose && this.interAdObj.onClose(function () {
                                n.llog("inter onClose,autoLoad:" + o.interAutoLoad), o.interLoaded = !1, o.showCountAdd("inter"),
                                    o.interAutoLoad && o.loadDelay("inter", 1e3), o.triggerEvent("inter", "close");
                            })) : this.interAdObj.offShow && (this.interAdObj.offShow(), this.interAdObj.onShow && this.interAdObj.onShow(function () {
                                n.llog("inter onShow,autoLoad:" + o.interAutoLoad), o.interLoaded = !1, o.showCountAdd("inter"),
                                    o.interAutoLoad && o.loadDelay("inter", 1e3), o.triggerEvent("inter", "show");
                            })), this.interAdObj.offError(), this.interAdObj.onError(function (e) {
                                n.llog("inter onError:", e), o.interLoaded = !1, o.triggerEvent("inter", "error");
                            }), n.llog("load inter now"), this.interAdObj.load();
                    }
                }, t.prototype.showInter = function (e, t) {
                    if (t) this.canShow(e) && this.loadInter(t, !0); else {
                        var i = this.checkPrepare("inter", e);
                        -1 !== i ? i <= 0 || (n.llog("show inter now"), this.interAdObj.show()) : this.loadInter(this.interId, !0);
                    }
                }, t.prototype.callVideoLoad = function (e) {
                    return this.isVideoLoading ? (n.llog("video is loading,cancel load"), null) : (this.isVideoLoading = !0,
                        n.llog("video load now"), this.videoAdObj.load());
                }, t.prototype.callVideoShow = function () {
                    if (n.llog("callVideoShow now"), !this.isAudioStoped) try {
                        this.isAudioStoped = !0, this.audioCtrl.stop();
                    } catch (e) {
                        n.llog(e);
                    }
                    return n.llog("video show now"), this.videoAdObj.show();
                }, t.prototype.setVideoCallback = function (e, t) {
                    var i = this;
                    this.videoErrCalled = !1, i.videoCallback = function (o) {
                        if (i.isAudioStoped) try {
                            i.isAudioStoped = !1, i.audioCtrl.play();
                        } catch (e) {
                            n.llog(e);
                        }
                        n.llog(" videoCallback:" + e + "," + o), t(o);
                    };
                }, t.prototype.callVideoCallback = function (e) {
                    this.videoCallback && (this.videoErrCalled ? n.llog("videoCallback already called") : (this.videoErrCalled = !0,
                        n.llog(" callVideoCallback:" + e), this.videoCallback(e)));
                }, t.prototype.callVideoOnLoad = function (e) {
                    var t = this;
                    n.llog("callVideoOnLoad isOnLoadCalling:", this.isOnLoadCalling), this.isOnLoadCalling = !1;
                    var i = this;
                    this.videoAdObj.onLoadDoFn = function () {
                        n.llog("onLoadDoFn called:", t.isOnLoadCalling), t.isOnLoadCalling || (t.isOnLoadCalling = !0,
                            i.videoLoaded = !0, i.isVideoLoading = !1, n.llog("video onLoad, isAutoShow:" + e + " videoLoaded:" + i.videoLoaded),
                            e && i.callVideoShow(), i.triggerEvent("video", "load"));
                    }, i.videoAdObj.onLoad(i.videoAdObj.onLoadDoFn);
                }, t.prototype.callVideoOnCLose = function (e) {
                    var t = this;
                    this.videoAdObj.onCloseDoFn = function (e) {
                        n.llog("video onClose"), t.videoLoaded = !1, t.isVideoLoading = !1;
                        var i = "notEnd";
                        e && e.isEnded && (i = null), t.callVideoCallback(i), t.videoAutoLoad && t.loadDelay("video", 100),
                            t.triggerEvent("video", "close");
                    }, t.videoAdObj.onClose(t.videoAdObj.onCloseDoFn);
                }, t.prototype.callVideoOnStart = function () { }, t.prototype.callVideoOnError = function (e) {
                    var t = this;
                    this.videoAdObj.onErrorDoFn = function (e) {
                        n.llog("video onError:", JSON.stringify(e)), t.videoLoaded = !1, t.isVideoLoading = !1,
                            t.callVideoCallback("noAd"), t.triggerEvent("video", "error");
                    }, t.videoAdObj.onError(t.videoAdObj.onErrorDoFn);
                }, t.prototype.loadVideo = function (e, t) {
                    if (this.videoLoaded) n.llog("video is already loaded"); else if (t || !(this.checkPrepare("video", null, "createRewardedVideoAd", !0) <= 0)) {
                        n.llog("video load start", this.videoId);
                        var i = this.getChannelT(), o = {};
                        o[this.adPosIdKey] = e || this.videoId, this.videoAdObj = i.createRewardedVideoAd(o),
                            this.callVideoOnLoad(t), this.callVideoOnCLose(e), this.callVideoOnStart(), this.callVideoOnError(e),
                            this.callVideoLoad(t);
                    }
                }, t.prototype.showVideo = function (e, t, i, o) {
                    if (this.videoErrCalled = !1, this.setVideoCallback(e, t), i) this.canShow(e) ? (n.llog("video load and show start, newPosId:" + i),
                        this.loadVideo(i, !0)) : this.callVideoCallback("noAd"); else {
                        var a = this.checkPrepare("video", e);
                        -1 !== a || this.isVideoLoading || o ? a <= 0 ? this.callVideoCallback("noAd") : (n.llog("video show start,videoLoaded:" + this.videoLoaded),
                            this.callVideoShow()) : this.loadVideo(this.videoId, !0);
                    }
                }, t.prototype.getNativeAdId = function (e) {
                    if (!this.nativeData) return n.llog("getNativeAdId 未完成load"), 0;
                    var t = this.nativeData.adId, i = e || this.nativeId;
                    return i && this.nativeAdIdMap[i] && (t = this.nativeAdIdMap[i]), t;
                }, t.prototype.loadNative = function (e, t) {
                    if (!(this.checkPrepare("native", null, "createNativeAd", !0) <= 0)) {
                        n.llog("loadNative start", this.channelName);
                        var i = this.getChannelT(), o = this;
                        o.nativeLoaded = !1;
                        var a = t || this.nativeId, s = {};
                        s[this.adPosIdKey] = a, this.nativeAdObj = i.createNativeAd(s), this.nativeAdObj.offLoad(),
                            this.nativeAdObj.onLoad(function (t) {
                                o.nativeLoaded = !0, o.nativeOnLoad || e ? ((void 0 === t.code || 0 === t.code) && t.adList.length > 0 ? (o.nativeData = t.adList[0],
                                    o.nativeAdIdMap[a] = o.nativeData.adId) : (o.nativeData = null, n.llog("nativeAd load data error:", JSON.stringify(t))),
                                    e ? e(t) : o.nativeOnLoad(t)) : n.llog("no nativeOnLoad");
                            }), this.nativeAdObj.offError(), this.nativeAdObj.onError(function (e) {
                                n.llog("native onError:", JSON.stringify(e)), o.nativeLoaded = !1, o.nativeOnError ? o.nativeOnError(e) : n.llog("no nativeOnError!");
                            }), n.llog("loadNative now"), this.nativeAdObj.load();
                    }
                }, t.prototype.reportNativeShow = function (e) {
                    if (this.nativeAdObj) {
                        this.showCountAdd("native");
                        var t = this.getNativeAdId(e);
                        this.nativeAdObj.reportAdShow({
                            adId: t
                        }), n.llog("reportNativeShow:" + t + ",newPosId:" + e);
                    } else n.llog("无nativeAdObj");
                }, t.prototype.reportNativeClick = function (e) {
                    if (this.nativeAdObj) {
                        var t = this.getNativeAdId(e);
                        this.nativeAdObj.reportAdClick({
                            adId: t
                        }), n.llog("reportNativeClick:" + t + ",newPosId:" + e);
                    } else n.llog("无nativeAdObj");
                }, t.prototype.checkShow = function (e) {
                    return this.canShow(e);
                }, t;
        }();
        i.KdBase = a;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(2), l = o(0), h = function (t) {
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return s(e, t), e.prototype.initChannel = function (e, t) {
                l.llog("init Channnel:" + t.channelName), this.showMaxMap.banner = 5, this.showMaxMap.inter = 8;
                var i = this;
                e.initAdService({
                    appId: t.appId,
                    isDebug: !1,
                    success: function (e) {
                        l.llog("init success");
                    },
                    fail: function (e) {
                        l.llog("init fail:" + e.code + e.msg);
                    },
                    complete: function (e) {
                        l.llog("init complete!" + this.channelName), i.isInitOK = !0, i.interAutoLoad && setTimeout(function () {
                            i.loadInter();
                        }, 2e3), i.videoAutoLoad && i.loadVideo();
                    }
                }), i.getLaunchOptionsSync();
            }, e.prototype.setConf = function (e) {
                t.prototype.setConf.call(this, e), e.interMaxPerDay && (this.showMaxMap.inter = e.interMaxPerDay,
                    l.llog("interMaxPerDay set to:" + this.showMaxMap.inter));
            }, e.prototype.callVideoOnLoad = function (e) {
                this.videoAdObj.offLoad(), t.prototype.callVideoOnLoad.call(this, e);
            }, e.prototype.callVideoOnCLose = function (e) {
                this.videoAdObj.offClose(), t.prototype.callVideoOnCLose.call(this, e);
            }, e.prototype.callVideoOnStart = function () {
                this.videoAdObj.offVideoStart();
                var e = this;
                this.videoAdObj.onVideoStart(function () {
                    l.llog("video onVideoStart"), e.showCountAdd("video");
                });
            }, e.prototype.callVideoOnError = function (e) {
                this.videoAdObj.offError(), t.prototype.callVideoOnError.call(this, e);
            }, e;
        }(r.KdBase);
        i.default = h;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(2), l = o(0), h = function (t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.adPosIdKey = "adUnitId", e;
            }
            return s(e, t), e.prototype.getChannelT = function (e) {
                var t = window.hbs;
                return t ? e && !t[e] ? (l.llog("channelT(hbs)." + e + " 不存在!!"), null) : t : (l.llog("channelT(hbs) 不存在!!"),
                    null);
            }, e.prototype.initChannel = function (e, t) {
                l.llog("init Channnel:" + t.channelName);
                var i = this;
                i.videoAutoLoad && setTimeout(function () {
                    i.loadVideo();
                }, 2e3), l.llog("init complete!" + this.channelName), this.isInitOK = !0;
            }, e.prototype.shareAppMessage = function () { }, e.prototype.installShortcut = function () { },
                e.prototype.showBanner = function (e) { }, e.prototype.closeBanner = function () { },
                e.prototype.destroyBanner = function () { }, e.prototype.destroyInter = function () { },
                e.prototype.showInter = function (e, t) { }, e.prototype.loadInter = function (e, t) { },
                e.prototype.loadVideo = function (e, t) {
                    if (t || !(this.checkPrepare("video", null, "createRewardedVideoAd", !0) <= 0)) {
                        l.llog("video load start", this.videoId);
                        var i = this.getChannelT(), o = {};
                        o[this.adPosIdKey] = e || this.videoId, o.success = function (e) {
                            l.llog("huawei video success");
                        }, o.fail = function (e, t) {
                            l.llog("huawei video create error:", e, t);
                        }, o.complete = function () {
                            l.llog("huawei video complete");
                        }, this.videoAdObj = i.createRewardedVideoAd(o), this.callVideoOnLoad(t), this.callVideoOnCLose(e),
                            this.callVideoOnError(e), this.callVideoLoad(t);
                    }
                }, e;
        }(r.KdBase);
        i.default = h;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(0), l = function (t) {
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return s(e, t), e.prototype.getChannelT = function (e) {
                var t = window.uc;
                return t ? e && !t[e] ? (r.llog("channelT(uc)." + e + " 不存在!!"), null) : t : (r.llog("channelT(uc) 不存在!!"),
                    null);
            }, e.prototype.loadInter = function (e, t) { }, e.prototype.showInter = function (e, t) { },
                e.prototype.loadBanner = function (e) {
                    var t = this, i = this;
                    if (e || !(this.checkPrepare("banner", null, "createBannerAd", !0) <= 0)) {
                        r.llog("loadBanner now");
                        var o = this.getChannelT(), n = {
                            style: {
                                left: 20,
                                top: 400,
                                width: 350
                            }
                        };
                        if (n[this.adPosIdKey] = this.bannerId, this.bannerStyle) {
                            var a = this.bannerStyle;
                            "function" == typeof this.bannerStyle && (a = this.bannerStyle()), n.style = a;
                        }
                        i.bannerAdObj && i.bannerAdObj.destroy && (i.bannerAdObj.destroy(), r.llog("banner destroy and reCreate"));
                        var s = i.addCreateAdConfProp(n), l = o.createBannerAd(s);
                        this.bannerDestroyed = !1, i.bannerAdObj = l, l.onLoad(function () {
                            r.llog("banner onLoad"), i.triggerEvent("banner", "load"), e && t.doShowBanner();
                        }), l.onError(function (e) {
                            r.llog("banner onError:", e), r.llog("bannerConfig:", s), i.loadDelay("banner", 3e3, function () {
                                i.loadBanner(!1);
                            }), i.triggerEvent("banner", "error");
                        });
                    }
                }, e.prototype.callVideoLoad = function (e) {
                    return null;
                }, e.prototype.callVideoShow = function () {
                    var e = this, i = t.prototype.callVideoShow.call(this);
                    return i && i.catch && i.catch(function (t) {
                        r.llog("video show Error:"), e.videoLoaded = !1, e.isVideoLoading = !1, r.lerr(t);
                    }), i;
                }, e.prototype.loadVideo = function (e, t) {
                    if (this.videoErrCalled = !1, this.videoLoaded) r.llog("video is already loaded"); else if (t || !(this.checkPrepare("video", null, "createRewardVideoAd", !0) <= 0)) {
                        r.llog("video load start", this.videoId);
                        var i = this.getChannelT();
                        return this.videoAdObj = i.createRewardVideoAd(), this.callVideoOnCLose(e), this.callVideoOnError(e),
                            this.callVideoOnLoad(!1), t && e === this.videoId ? (t = !1, void this.callVideoShow()) : void 0;
                    }
                }, e;
        }(o(1).default);
        i.default = l;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(2), l = o(0), h = function (t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.adPosIdKey = "adUnitId", e.isBannerOnLoadSet = !1, e;
            }
            return s(e, t), e.prototype.initChannel = function (e, t) {
                this.bannerSleepTime = 1e3, this.interSleepTime = 1e3, this.videoSleepTime = 5e3,
                    this.nativeSleepTime = 1, this.isInitOK = !0, l.llog("init complete! " + this.channelName);
            }, e.prototype.onShow = function () { }, e.prototype.getLaunchOptionsSync = function () { },
                e.prototype.installShortcut = function () { }, e.prototype.showBanner = function (e) {
                    var t = this;
                    if (!(this.checkPrepare("banner", e, "createBannerAd", !0) <= 0)) {
                        if (l.llog("showBanner start", this.channelName), t.bannerAdObj) return t.bannerAdObj.show(),
                            void t.triggerEvent("banner", "show");
                        var i = this.getChannelT(), o = {
                            adUnitId: this.bannerId
                        };
                        if (this.bannerStyle) {
                            var n = this.bannerStyle;
                            "function" == typeof this.bannerStyle && (n = this.bannerStyle()), o.style = {},
                                n.left && (o.style.left = n.left), n.top && (o.style.top = n.top), n.width && (o.style.width = n.width),
                                n.height && (o.style.height = n.height);
                        }
                        l.llog("meizu bannerConf:", o), t.bannerAdObj = i.createBannerAd(o), this.isBannerOnLoadSet || (this.isBannerOnLoadSet = !0,
                            t.bannerAdObj.onLoad(function () {
                                l.llog("banner onload and show now"), t.bannerAdObj.show(), t.triggerEvent("banner", "show");
                            })), t.bannerAdObj.offClose(), t.bannerAdObj.onClose(function (e) {
                                l.llog("banner onClose:", e), t.showCountAdd("banner"), t.triggerEvent("banner", "close");
                            }), t.bannerAdObj.offError(), t.bannerAdObj.onError(function (e) {
                                l.llog("banner onError:", e), t.triggerEvent("banner", "error");
                            });
                    }
                }, e.prototype.callVideoOnCLose = function (e) {
                    var t = this;
                    this.videoAdObj.onCloseDoFn = function () {
                        l.llog("video onClose"), t.videoLoaded = !1, t.isVideoLoading = !1, t.callVideoCallback("notEnd"),
                            t.videoAutoLoad && t.loadDelay("video", 100), t.triggerEvent("video", "close");
                    }, t.videoAdObj.onClose(t.videoAdObj.onCloseDoFn);
                }, e.prototype.callVideoOnStart = function () {
                    var e = this;
                    this.videoAdObj.offRewarded(), this.videoAdObj.onRewarded(function () {
                        l.llog("video onRewarded"), e.videoLoaded = !1, e.callVideoCallback(null), e.triggerEvent("video", "reward");
                    });
                }, e;
        }(r.KdBase);
        i.default = h;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(0), l = function (t) {
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return s(e, t), e.prototype.getChannelT = function (e) {
                var t = window.tt;
                return t ? e && !t[e] ? (r.llog("channelT(tt)." + e + " 不存在!!"), null) : t : (r.llog("channelT(tt) 不存在!!"),
                    null);
            }, e.prototype.initChannel = function (e, t) {
                this.isInitOK = !0, this.onShow(), this.showShareMenu(), this.getLaunchOptionsSync(),
                    r.llog("init complete!" + this.channelName), this.isInitOK = !0;
            }, e.prototype.loadBanner = function (e) { }, e.prototype.showBanner = function (e) {
                if (this.canShow(e)) {
                    var t = this, i = this.getChannelT(), o = {
                        style: {
                            left: 20,
                            top: 400,
                            width: 350
                        }
                    };
                    if (o[t.adPosIdKey] = t.bannerId, t.bannerIntervals && (o.adIntervals = t.bannerIntervals),
                        t.bannerStyle) {
                        var n = t.bannerStyle;
                        "function" == typeof t.bannerStyle && (n = t.bannerStyle()), o.style.left = n.left || 20,
                            o.style.top = n.top || 400, o.style.width = n.width || 350;
                    }
                    t.bannerAdObj && t.bannerAdObj.destroy && t.bannerAdObj.destroy();
                    var a = t.addCreateAdConfProp(o), s = i.createBannerAd(a);
                    t.bannerAdObj = s, s.onLoad(function () {
                        r.llog("banner onLoad"), t.triggerEvent("banner", "load"), s.show().then(function () {
                            r.llog("banner显示成功");
                        }).catch(function (e) {
                            r.llog("banner广告组件出现问题", e);
                        });
                    }), s.onError(function (e) {
                        r.llog("banner onError:", e), r.llog("bannerConfig:", a), t.triggerEvent("banner", "error");
                    }), s.onResize(function (e) {
                        r.llog("banner onResize", e), t.bannerOnResize ? t.bannerOnResize(e, s, i) : (s.style.top = i.getSystemInfoSync().screenHeight - e.height + .1,
                            s.style.left = (i.getSystemInfoSync().screenWidth - e.width) / 2 + .1);
                    });
                } else r.llog("banner canShow false");
            }, e.prototype.loadInter = function (e, t) { }, e.prototype.showInter = function (e, t) {
                if (this.canShow(e)) {
                    r.llog("showInter start", this.channelName, "interId", this.interId);
                    var i = this, o = this.getChannelT(), n = {};
                    n[this.adPosIdKey] = t || this.interId, i.interAdObj = o.createInterstitialAd(this.addCreateAdConfProp(n)),
                        i.interAdObj.onLoad(function () {
                            r.llog("inter onLoad, will show now", i.channelName), i.triggerEvent("inter", "load");
                        }), i.interAdObj.onClose(function () {
                            r.llog("inter onClose"), i.triggerEvent("inter", "close");
                        }), i.interAdObj.onError(function (e) {
                            r.llog("inter onError:", e), i.triggerEvent("inter", "error");
                        }), i.interAdObj.load().then(function () {
                            i.interAdObj.show();
                        }).catch(function (e) {
                            r.llog("inter Error:", e), i.triggerEvent("inter", "error");
                        });
                } else r.llog("inter canShow false");
            }, e.prototype.addCreateAdConfProp = function (e) {
                return this.interAdObj && (r.llog("destroy inter"), this.interAdObj.destroy(), this.interAdObj = null),
                    e;
            }, e.prototype.showVideo = function (e, t, i) {
                this.videoErrCalled = !1, this.setVideoCallback(e, t), i || (i = this.videoId);
                var o = this;
                if (this.videoAutoLoad = !1, this.canShow(e)) {
                    r.llog("video show start with no load");
                    var n = {};
                    n[this.adPosIdKey] = i || this.videoId;
                    var a = this.getChannelT();
                    this.videoAdObj = a.createRewardedVideoAd(n), this.callVideoOnCLose(i), this.callVideoOnError(i),
                        this.videoAdObj.show().then(function () {
                            r.llog("video广告显示成功");
                        }).catch(function (e) {
                            r.llog("video广告组件出现问题", e), o.videoAdObj.load().then(function () {
                                return r.llog("video手动加载成功"), o.videoAdObj.show();
                            });
                        });
                } else this.callVideoCallback("noAd");
            }, e;
        }(o(1).default);
        i.default = l;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(0), l = function (t) {
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return s(e, t), e.prototype.getChannelT = function (e) {
                var t = window.swan;
                return t ? e && !t[e] ? (r.llog("channelT(swan)." + e + " 不存在!!"), null) : t : (r.llog("channelT(swan) 不存在!!"),
                    null);
            }, e.prototype.addCreateAdConfProp = function (e) {
                return e.appSid = this.appId, e;
            }, e.prototype.loadBanner = function (e) {
                t.prototype.loadBanner.call(this, e);
                var i = this;
                setTimeout(function () {
                    r.llog("banner width change"), i.bannerAdObj.style.width++;
                }, 100);
            }, e.prototype.loadInter = function (e, t) { }, e.prototype.showInter = function (e, t) { },
                e;
        }(o(1).default);
        i.default = l;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(0), l = function (t) {
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return s(e, t), e.prototype.getChannelT = function (e) {
                var t = window.qq;
                return t ? e && !t[e] ? (r.llog("channelT(qq)." + e + " 不存在!!"), null) : t : (r.llog("channelT(qq) 不存在!!"),
                    null);
            }, e.prototype.callVideoOnLoad = function (e) {
                var t = this;
                this.videoAdObj.onLoadDoFn = function () {
                    t.videoLoaded = !0, r.llog("video onLoad, isAutoShow:" + e + " videoLoaded:" + t.videoLoaded),
                        t.triggerEvent("video", "load");
                }, t.videoAdObj.onLoad(t.videoAdObj.onLoadDoFn);
            }, e.prototype.callVideoLoad = function (e) {
                var t = this;
                if (!this.isVideoLoading) {
                    var i = this.videoAdObj.load();
                    return i.then(function () {
                        r.llog("video load then, isAutoShow:" + e), e && t.videoAdObj.show();
                    }).catch(function (e) {
                        r.llog("video load Error:"), t.videoLoaded = !1, t.isVideoLoading = !1, r.lerr(e);
                    }), i;
                }
                r.llog("video is loading,cancel load");
            }, e;
        }(o(1).default);
        i.default = l;
    }, function (t, i, o) {
        var a, s = this && this.__extends || (a = function (e, t) {
            return (a = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (e, t) {
                e.__proto__ = t;
            } || function (e, t) {
                for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
            })(e, t);
        }, function (e, t) {
            function n() {
                this.constructor = e;
            }
            a(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                new n());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = o(0), l = function (t) {
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.vivoVideoFirstErr = !1, e;
            }
            return s(e, t), e.prototype.initChannel = function (e, t) {
                this.bannerSleepTime = 11e3, this.interSleepTime = 11e3, this.videoSleepTime = 6e4,
                    this.nativeSleepTime = 1, this.isInitOK = !0, r.llog("init complete! vivo, videoAutoLoad:" + this.videoAutoLoad),
                    this.videoAutoLoad = !1;
            }, e.prototype.onShow = function () { }, e.prototype.getLaunchOptionsSync = function () { },
                e.prototype.checkPrepare = function (e, i, o, n, a, s) {
                    if (n) {
                        var l = this[e + "CreateTime"], h = this[e + "SleepTime"];
                        if (0 !== l && new Date().getTime() - l <= h) return r.llog(e + "间隔时间未到"), this.triggerEvent(e, "limit"),
                            0;
                    }
                    return t.prototype.checkPrepare.call(this, e, i, o, n, a, s);
                }, e.prototype.showBanner = function (e) {
                    var t = this;
                    if (!(this.checkPrepare("banner", e, "createBannerAd", !0) <= 0)) {
                        r.llog("showBanner start", this.channelName, "bannerId", t.bannerId), t.bannerCreateTime = new Date().getTime();
                        var i = this.getChannelT();
                        t.bannerAdObj = i.createBannerAd({
                            posId: t.bannerId,
                            style: {}
                        }), t.bannerAdObj.offLoad(), t.bannerAdObj.onLoad(function () {
                            r.llog("banner onLoad,showBanner now", t.channelName), t.triggerEvent("banner", "load");
                        }), t.bannerAdObj.offClose(), t.bannerAdObj.onClose(function () {
                            r.llog("banner onClose"), t.triggerEvent("banner", "close");
                        }), t.bannerAdObj.offError(), t.bannerAdObj.onError(function (e) {
                            r.llog("banner onError:", e), t.triggerEvent("banner", "error");
                        });
                        var o = t.bannerAdObj.show();
                        o && o.then(function () {
                            r.llog("banner广告展示成功");
                        }).catch(function (e) {
                            r.llog("banner广告展示失败", e);
                        });
                    }
                }, e.prototype.loadInter = function (e, t) { }, e.prototype.showInter = function (e, t) {
                    if (!(this.checkPrepare("inter", e, "createInterstitialAd", !0) <= 0)) {
                        r.llog("showInter start", this.channelName, "interId", this.interId);
                        var i = this, o = this.getChannelT();
                        i.interAdObj = o.createInterstitialAd({
                            posId: t || this.interId
                        }), i.interAdObj.offLoad(), i.interAdObj.onLoad(function () {
                            r.llog("inter onLoad, will show now", i.channelName), i.triggerEvent("inter", "load");
                        }), i.interAdObj.offClose(), i.interAdObj.onClose(function () {
                            r.llog("inter onClose"), i.triggerEvent("inter", "close");
                        }), i.interAdObj.offError(), i.interAdObj.onError(function (e) {
                            r.llog("inter onError:", e), i.triggerEvent("inter", "error");
                        });
                        var n = i.interAdObj.show();
                        n && n.then(function () {
                            r.llog("inter广告展示成功");
                        }).catch(function (e) {
                            r.llog("inter广告展示失败", e);
                        });
                    }
                }, e.prototype.callVideoOnStart = function () { }, e.prototype.callVideoOnError = function (e) {
                    var t = this;
                    this.videoAdObj.onError(function (e) {
                        if (r.llog("video onError:", e), t.videoLoaded = !1, t.isVideoLoading = !1, !t.vivoVideoFirstErr) return r.llog("vivoVideoFirstErr"),
                            void (t.vivoVideoFirstErr = !0);
                        t.callVideoCallback("noAd"), t.triggerEvent("video", "error");
                    });
                }, e.prototype.callVideoLoad = function (e) {
                    var i = this;
                    r.llog("callVideoLoad vivo");
                    var o = t.prototype.callVideoLoad.call(this, e);
                    return o && o.catch && o.catch(function (e) {
                        r.llog("vivo video load Error:", e), i.videoLoaded = !1, i.isVideoLoading = !1,
                            i.callVideoCallback("noAd");
                    }), o;
                }, e.prototype.callVideoShow = function () {
                    var e = this;
                    r.llog("callVideoShow vivo");
                    var i = t.prototype.callVideoShow.call(this);
                    return i && i.catch && i.then(function () { }).catch(function (t) {
                        r.llog("vivo video广告展示失败", t), e.videoLoaded = !1, e.isVideoLoading = !1, e.callVideoCallback("noAd");
                    }), i;
                }, e.prototype.showVideo = function (e, t, i) {
                    this.videoErrCalled = !1, this.videoAutoLoad = !1, this.setVideoCallback(e, t),
                        i || (i = this.videoId), this.canShow(e) ? (r.llog("video load and show start"),
                            this.loadVideo(i, !0)) : this.callVideoCallback("noAd");
                }, e.prototype.loadNative = function (e, t) {
                    if (!(this.checkPrepare("native", null, "createNativeAd", !0) <= 0)) {
                        r.llog("loadNative start", this.channelName);
                        var i = this.getChannelT(), o = this;
                        o.nativeLoaded = !1;
                        var n = t || this.nativeId;
                        this.nativeAdObj = i.createNativeAd({
                            posId: n
                        }), this.nativeAdObj.onLoad(function (t) {
                            o.nativeLoaded = !0, o.nativeOnLoad || e ? (t && t.adList.length > 0 ? (o.nativeData = t.adList[0],
                                o.nativeAdIdMap[n] = o.nativeData.adId) : (o.nativeData = null, r.llog("nativeAd load data error:", t)),
                                e ? e(t) : o.nativeOnLoad(t)) : r.llog("no nativeOnLoad");
                        });
                        var a = this.nativeAdObj.load();
                        a && a.then(function () { }).catch(function (e) {
                            r.llog("native 加载失败", JSON.stringify(e)), o.nativeOnError ? o.nativeOnError(e) : r.llog("no nativeOnError!");
                        });
                    }
                }, e;
        }(o(3).default);
        i.default = l;
    }, function (e, i, o) {
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = o(3), a = o(10), s = o(1), r = o(9), l = o(8), h = o(7), d = o(6), g = o(0), c = o(5), p = o(4), m = function () {
            function t() {
                this.channelMap = {
                    oppo: new n.default(),
                    vivo: new a.default(),
                    wx: new s.default(),
                    qq: new r.default(),
                    toutiao: new h.default(),
                    baidu: new l.default(),
                    meizu: new d.default(),
                    uc: new c.default(),
                    huawei: new p.default()
                };
            }
            return t.instance = function () {
                return t.me ? t.me : (t.me = new t(), t.me);
            }, t.prototype.init = function (e, t) {
                this.kdChannel = this.channelMap[e.channelName], this.kdChannel ? this.kdChannel.init(e, t) : g.llog("ERR channelName!!init", e);
            }, t.prototype.setConf = function (e) {
                this.kdChannel = this.channelMap[e.channelName], this.kdChannel ? this.kdChannel.setConf(e) : g.llog("ERR channelName!!setConf", e);
            }, t.prototype.onEvent = function (e, t, i, o) {
                this.kdChannel ? this.kdChannel.onEvent(e, t, i, o) : g.llog("ERR kdChannel!!onEvent");
            }, t.prototype.getPosId = function (e, t) {
                return this.kdChannel ? this.kdChannel.getPosId(e, t) : (g.llog("no kdChannel!!getPosId"),
                    "");
            }, t.prototype.login = function (e) {
                this.kdChannel ? this.kdChannel.login(e) : g.llog("no kdChannel!!login");
            }, t.prototype.shareAppMessage = function () {
                this.kdChannel ? this.kdChannel.shareAppMessage() : g.llog("no kdChannel!!shareAppMessage");
            }, t.prototype.installShortcut = function () {
                this.kdChannel ? this.kdChannel.installShortcut() : g.llog("no kdChannel!!installShortcut");
            }, t.prototype.showBanner = function (e) {
                this.kdChannel ? this.kdChannel.showBanner(e) : g.llog("no kdChannel!!showBanner");
            }, t.prototype.closeBanner = function () {
                this.kdChannel ? this.kdChannel.closeBanner() : g.llog("no kdChannel!!closeBanner");
            }, t.prototype.destroyBanner = function () {
                this.kdChannel ? this.kdChannel.destroyBanner() : g.llog("no kdChannel!!destroyBanner");
            }, t.prototype.destroyVideo = function () {
                this.kdChannel ? this.kdChannel.destroyVideo() : g.llog("no kdChannel!!destroyVideo");
            }, t.prototype.destroyInter = function () {
                this.kdChannel ? this.kdChannel.destroyInter() : g.llog("no kdChannel!!destroyInter");
            }, t.prototype.showInter = function (e, t) {
                this.kdChannel ? this.kdChannel.showInter(e, t) : g.llog("no kdChannel!!showInter");
            }, t.prototype.showVideo = function (e, t, i, o) {
                this.kdChannel ? this.kdChannel.showVideo(e, t, i, o) : g.llog("no kdChannel!!showVideo");
            }, t.prototype.checkShow = function (e) {
                return this.kdChannel ? this.kdChannel.checkShow(e) : (g.llog("no kdChannel!!checkShow"),
                    !1);
            }, t.prototype.getBlack = function () {
                return this.kdChannel ? this.kdChannel.getBlack() : (g.llog("no kdChannel!!getBlack"),
                    0);
            }, t.prototype.loadNative = function (e, t) {
                this.kdChannel ? this.kdChannel.loadNative(e, t) : g.llog("no kdChannel!!loadNative");
            }, t.prototype.reportNativeShow = function (e) {
                this.kdChannel ? this.kdChannel.reportNativeShow(e) : g.llog("no kdChannel!!reportNativeShow");
            }, t.prototype.reportNativeClick = function (e) {
                this.kdChannel ? this.kdChannel.reportNativeClick(e) : g.llog("no kdChannel!!reportNativeClick");
            }, t.prototype.getChannel = function () {
                return this.kdChannel;
            }, t;
        }();
        i.default = m.instance();
    }]));
    var W = Y.default;
    class X {
        constructor() {
            this.kdSdk = W;
        }
        static instance() {
            return X.me ? X.me : (X.me = new X(), X.me);
        }
        getPosId(e, t) {
            return this.kdSdk.getPosId(e, t);
        }
        init(e, t) {
            this.kdSdk.init(e, t);
        }
        setConf(e) {
            this.kdSdk.setConf(e);
        }
        onEvent(e, t, i, o) {
            this.kdSdk.onEvent(e, t, i, o);
        }
        login(e) {
            this.kdSdk.login(e);
        }
        shareAppMessage() {
            this.kdSdk.shareAppMessage();
        }
        installShortcut() {
            this.kdSdk.installShortcut();
        }
        showBanner(e) {
            this.kdSdk.showBanner(e);
        }
        closeBanner() {
            this.kdSdk.closeBanner();
        }
        destroyBanner() {
            this.kdSdk.destroyBanner();
        }
        destroyVideo() {
            this.kdSdk.destroyVideo();
        }
        destroyInter() {
            this.kdSdk.destroyInter();
        }
        showInter(e, t) {
            this.kdSdk.showInter(e, t);
        }
        showVideo(e, t, i, o) {
            this.kdSdk.showVideo(e, t, i, o);
        }
        loadNative(e, t) {
            this.kdSdk.loadNative(e, t);
        }
        reportNativeShow(e) {
            this.kdSdk.reportNativeShow(e);
        }
        reportNativeClick(e) {
            this.kdSdk.reportNativeClick(e);
        }
        checkShow(e) {
            return this.kdSdk.checkShow(e);
        }
        getBlack() {
            return this.kdSdk.getBlack();
        }
        getChannel() {
            return this.kdSdk.getChannel();
        }
    }
    const F = X.instance();
    class Q {
        constructor(e) {
            this._moodList = [], this._posList = [{
                x: 358,
                y: 658
            }, {
                x: 414,
                y: 634
            }, {
                x: 406,
                y: 712
            }, {
                x: 328,
                y: 687
            }, {
                x: 388,
                y: 614
            }];
            var t = Laya.stage.displayWidth / 2, i = Laya.stage.displayHeight / 2;
            for (let n = 0; n < 5; n++) {
                var o = new Laya.Image();
                e.addChild(o), o.pos(t, i, !0), this._moodList.push(o);
            }
        }
        playMoveAnimation(e, t) {
            for (let i = 0; i < this._moodList.length; i++) this._moodList[i].visible = !0,
                t ? this._moodList[i].skin = "game/res_gem_icon.png" : Le.GameMgr.gameMode == U.Active ? this._moodList[i].skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this._moodList[i].skin = "game/res_wood_icon.png"),
                Laya.Tween.to(this._moodList[i], this._posList[i], 400, Laya.Ease.elasticOut, null, 100 * i),
                Laya.Tween.to(this._moodList[i], e, 600, Laya.Ease.quadOut, Laya.Handler.create(this, e => {
                    e == this._moodList.length - 1 && this.resetInfo();
                }, [i]), 100 * i + 1500);
        }
        resetInfo() {
            var e = Laya.stage.displayWidth / 2, t = Laya.stage.displayHeight / 2;
            for (let i = 0; i < this._moodList.length; i++) this._moodList[i].pos(e, t, !0),
                this._moodList[i].visible = !1;
        }
    }
    class q {
        constructor() {
            let e = Le.ResMgr.GetRes(C.CollectRes);
            this.gameobject = e.create(), Laya.stage.addChild(this.gameobject), this.icon = this.gameobject.getChildByName("icon"),
                this._resnum = this.gameobject.getChildByName("resnum");
        }
        setInfo(e, t) {
            e.flag ? this.icon.skin = "game/res_gem_icon.png" : Le.GameMgr.gameMode == U.Active ? this.icon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.icon.skin = "game/game_wood.png"),
                this._resnum.value = "+" + e.ResNum, this.gameobject.pos(e.Pos.x - 40, e.Pos.y - 130, !0),
                Laya.Tween.to(this.gameobject, {
                    y: this.gameobject.y - 80
                }, 500, null, Laya.Handler.create(this, () => {
                    t();
                }), 1500);
        }
        destroy() {
            this.gameobject.destroy();
        }
    }
    class K {
        constructor() {
            this.gameMode = U.Level, this.randomRewardCount = 0, this.oppoInsertAdCount = 0,
                this.oppoClickBoxCount = 0, this.adIntervals = 0, this.state = 1, this.curBuildSelectIndex = 0,
                this.achieveRewardCount = 0, this.useWood = 0, this._questInfo = {}, this._eventQuestInfo = {},
                this._curQuestArr = null, this._curEventQuestArr = null, this._achieveInfoArr = null,
                this._moodAni = null, this.doubleResMax = 0, this.sharetime = 0, this._gameTime = 0,
                this.gameRunningTime = 0, this.insertAdTime = 0, this.firstclick = !1, this.loadtime = 0,
                this.mainopenresultcount = 0, this.speedtimestart = 0, this.startgametime = 0, this.buildUIOpenCount = 0,
                this.freeSkipNightCount = 0, this.GetBottleCount = 0, this.redMoneySwitch = !1;
        }
        get gameTime() {
            return this._gameTime;
        }
        get achieveInfoArr() {
            return this._achieveInfoArr;
        }
        get curQuestArr() {
            return this._curQuestArr;
        }
        get curEventQuestArr() {
            return this._curEventQuestArr;
        }
        init() {
            t.Platform == e.QQAd && (this.redMoneySwitch = this.GetQQRedMoneySwitch()), this.adIntervals = 60,
                this.startgametime = De.getCurrentTime() / 1e3,
                //  (Laya.stage.on(Laya.Event.FOCUS, this, this.stageBackHandle),
                //     Laya.stage.on(Laya.Event.BLUR, this, this.stageOverHandle)),
                Laya.timer.loop(1e3, this, this.gameTimeHandle),
                this.initQuestInfo(), this.initEventQuestInfo(), this.updateAchieveInfo(), this.doubleResMax = Le.CfgMgr.getGlobalCfg("DoubleResMax"),
                Le.DataMgr.newHeroOnlineDate != De.getCurrentDate() && (Le.DataMgr.newHeroOnlineDate = De.getCurrentDate(),
                    Le.DataMgr.newHeroDayGet = !1, Le.DataMgr.newHeroOnlineTime = 0, Le.DataMgr.newHeroVedioCount = 0);
        }
        isNewPlayerGuest() {
            var e = Le.DataMgr.getunlockBoatmanDic(3);
            return null == e && (e = !1), !e;
        }
        initQuestInfo() {
            var e = Le.CfgMgr.questCfg;
            for (let i = 1; i <= e.length; i++) {
                null == this._questInfo[e[i].AboveQuestId] && (this._questInfo[e[i].AboveQuestId] = []);
                var t = new N();
                t.data = e[i], this._questInfo[e[i].AboveQuestId].push(t);
            }
            this.resetCurQuestInfo();
        }
        initEventQuestInfo() {
            var e = Le.CfgMgr.eventQuestCfg;
            for (let i = 1; i <= e.length; i++) {
                null == this._eventQuestInfo[e[i].AboveQuestId] && (this._eventQuestInfo[e[i].AboveQuestId] = []);
                var t = new N();
                t.data = e[i], this._eventQuestInfo[e[i].AboveQuestId].push(t);
            }
            this.resetCurEventQuestInfo();
        }
        getCompleteCount(e, t) {
            var i = 0;
            for (let n = 0; n < this._questInfo[e].length; n++) {
                var o = this._questInfo[e][n];
                1 == o.Complete && o.data.StageId == t && i++;
            }
            return i;
        }
        getStageQuestCount(e, t) {
            var i = 0;
            for (let o = 0; o < this._questInfo[e].length; o++) {
                this._questInfo[e][o].data.StageId == t && i++;
            }
            return i;
        }
        resetCurQuestInfo() {
            var e = Le.DataMgr.levelStage;
            this._curQuestArr = [];
            var t = Le.SceneMgr.getCurLevelId();
            for (let i = 1; i <= t; i++) if (this._questInfo[i]) for (let o = 0; o < this._questInfo[i].length; o++) i < t ? this._questInfo[i][o].Complete = !0 : i == t && (this._questInfo[i][o].data.StageId < e ? this._questInfo[i][o].Complete = !0 : this._questInfo[i][o].data.StageId == e && this._curQuestArr.push(this._questInfo[i][o]));
        }
        resetCurEventQuestInfo() {
            var e = Le.DataMgr.eventLevelStage;
            this._curEventQuestArr = [];
            var t = Le.DataMgr.eventLevel;
            for (let i = 1; i <= t; i++) if (this._eventQuestInfo[i]) for (let o = 0; o < this._eventQuestInfo[i].length; o++) i < t ? this._eventQuestInfo[i][o].Complete = !0 : i == t && (this._eventQuestInfo[i][o].data.StageId < e ? this._eventQuestInfo[i][o].Complete = !0 : this._eventQuestInfo[i][o].data.StageId == e && this._curEventQuestArr.push(this._eventQuestInfo[i][o]));
        }
        updateCurQuestInfo(e) {
            var t = !1;
            for (let i = 0; i < this._curQuestArr.length; i++) if (this._curQuestArr[i].data.Conditions == e) {
                this._curQuestArr[i].Complete = !0, t = !0, i + 1 < this._curQuestArr.length && (this._curQuestArr[i + 1].PrepFlag = !0);
                break;
            }
            return t && Le.EventMgr.event(p.UI_UpdateQuest), t;
        }
        updateCurEventQuestInfo(e) {
            var t = !1;
            for (let i = 0; i < this._curEventQuestArr.length; i++) if (this._curEventQuestArr[i].data.Conditions == e) {
                this._curEventQuestArr[i].Complete = !0, t = !0, i + 1 < this._curEventQuestArr.length && (this._curEventQuestArr[i + 1].PrepFlag = !0);
                break;
            }
            return t && Le.EventMgr.event(p.UI_UpdateQuest), t;
        }
        getQuestInfo(e) {
            var t = null, i = null;
            Le.GameMgr.gameMode == U.Active ? i = this._curEventQuestArr : Le.GameMgr.gameMode == U.Level && (i = this._curQuestArr);
            for (let o = 0; o < i.length; o++) if (i[o].data.Conditions == e) {
                t = i[o].data;
                break;
            }
            return t;
        }
        gameTimeHandle() {
            this._gameTime++, this.insertAdTime++, this.gameRunningTime++, Le.DataMgr.newHeroOnlineTime++;
            Le.DataMgr.gameTime++;
            Le.DataMgr.setArchieveValDic(R.GameTime, this._gameTime / 3600), this._gameTime = 0;
        }
        stageBackHandle() {
            // if (Laya.timer.loop(1e3, this, this.gameTimeHandle), Le.UIMgr.getCurrentUI() != i.OfflineUI && (Le.SceneMgr.isguide || this.showOfflineUI()),
            //     Le.SoundMgr.resumeBGM(), true) Le.EventMgr.event(p.AD_NativeAdReport); else {
            //     var o = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("WXHtReturnCode")), n = F.getBlack(), a = o.indexOf(n), s = 0;
            //     a > -1 && (s = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("WXHtDelayTime"))[a]),
            //         Laya.timer.clear(this, this.openGameBoxUI), Laya.timer.once(60 * s * 1e3, this, this.openGameBoxUI, null, !0);
            // }
            // this.stageCallBack && this.stageCallBack.run();
        }
        openGameBoxUI() { }
        stageOverHandle() {
            // Le.SoundMgr.pauseBGM(), Le.DataMgr.gameCloseTime = De.getCurrentTime(), Le.DataMgr.gameTime += this._gameTime,
            //     Le.DataMgr.setArchieveValDic(R.GameTime, this._gameTime / 3600), this._gameTime = 0,
            //     Laya.timer.clear(this, this.gameTimeHandle);
        }
        showOfflineUI() {
            if (t.Platform != e.IOS && (0 != Le.DataMgr.gameCloseTime && null != Le.DataMgr.gameCloseTime || (Le.DataMgr.gameCloseTime = De.getCurrentTime()),
                Le.DataMgr.gameCloseTime > 0)) {
                var o = (De.getCurrentTime() - Le.DataMgr.gameCloseTime) / 1e3;
                o > 30 && Le.UIMgr.openUI(i.OfflineUI, o);
            }
        }
        getMoodCount() {
            return Le.DataMgr.moodCount - this.useWood;
        }
        startAdIntervalsTimer() {
            this.adIntervals = 0, Laya.timer.loop(1e3, this, this.adIntervalsTimerHandle);
        }
        adIntervalsTimerHandle() {
            this.adIntervals++, this.adIntervals >= 60 && Laya.timer.clear(this, this.adIntervalsTimerHandle);
        }
        addShowFunc() {
            Te.onShow(this.stageBackHandle.bind(this));
        }
        doubleResBuffTime() {
            var e = Math.floor(De.getCurrentTime() / 1e3), t = Le.DataMgr.doubleTime - e;
            return t = Math.max(0, t);
        }
        getComponentDicByMode() {
            var e = null;
            return Le.GameMgr.gameMode == U.Active ? e = Le.DataMgr.unlockEventCompoentDic : Le.GameMgr.gameMode == U.Level && (e = Le.DataMgr.unlockComponentDic),
                e;
        }
        getAllComponentValue(e) {
            var t = 0, i = Le.SceneMgr.shipInfo, o = this.getComponentDicByMode();
            for (let a = 1; a <= i.length; a++) if (i[a].Type == D.Free || o[i[a].Id]) {
                var n = Le.CfgMgr.getComponentCfg(i[a].ComponentId);
                n.Type == e && (t += n.Value);
            }
            return t;
        }
        updateAchieveInfo() {
            this.achieveRewardCount = 0, this._achieveInfoArr = [];
            for (let s = 1; s <= Le.CfgMgr.achieveCfg.length; s++) {
                var e = Le.CfgMgr.getAchieveCfg(s), t = Le.DataMgr.getArchieveIndexDic(e.Id);
                t = null == t ? 0 : t;
                var i = De.TransferStringToNumberArr(e.Value), o = Le.DataMgr.getArchieveValDic(e.Id);
                if (o = null == o ? 0 : o, t < i.length) {
                    var n = i[t], a = {
                        Id: e.Id,
                        Index: t,
                        Desc: e.Desc,
                        CurCount: o,
                        Condition: n,
                        RewardNum: De.TransferStringToNumberArr(e.Reward)[t],
                        GetFlag: o >= n
                    };
                    a.GetFlag && this.achieveRewardCount++, this._achieveInfoArr.push(a);
                }
            }
            Le.EventMgr.event(p.UI_UpdateAchieveInfo), Le.EventMgr.event(p.UI_UpdateAchieve);
        }
        playMoodAnimation(e, t, i) {
            null == this._moodAni && (this._moodAni = new Q(e)), this._moodAni.playMoveAnimation(t, i);
        }
        playGetResCountAnimation(e, t, i = !1) {
            var o = new q(), n = {
                ResNum: e,
                Pos: t,
                flag: i
            };
            o.setInfo(n, () => {
                o.destroy();
            });
        }
        getResRatioResult(e) {
            var t = Le.SceneMgr.getCurLevelId();
            Le.GameMgr.gameMode == U.Active && (t = 5);
            var i = Le.CfgMgr.getGlobalCfg("ResWoodRatio").split("|")[t - 1];
            return Math.floor(e + e * (Le.SceneMgr.buffvalue / 1e4) * Number(i));
        }
        getCollectResRatioResult(e) {
            var t = Le.SceneMgr.getCurLevelId();
            Le.GameMgr.gameMode == U.Active && (t = 5);
            var i = Le.CfgMgr.getGlobalCfg("ResCollectRatio").split("|")[t - 1];
            return Math.floor(e + e * (Le.SceneMgr.buffvalue / 1e4) * Number(i));
        }
        getBoxResRatioResult(e) {
            var t = Le.SceneMgr.getCurLevelId();
            Le.GameMgr.gameMode == U.Active && (t = 5);
            var i = Le.CfgMgr.getGlobalCfg("ResBoxRatio").split("|")[t - 1];
            return Math.floor(e + e * (Le.SceneMgr.buffvalue / 1e4) * Number(i));
        }
        getNewYearRemainTime() {
            var e = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("NewYearEndTime")), t = new Date();
            return t.setFullYear(e[0], e[1] - 1, e[2]), t.setHours(0, 0, 0), (Date.parse(t.toString()) - De.getCurrentTime()) / 1e3;
        }
        GetQQRedMoneySwitch() {
            var e = !0;

            return e;
        }
    }
    class Z {
        constructor() {
            this._pool = {};
        }
        GetObject(e, t = null) {
            null == this._pool[e] && (this._pool[e] = new Array(), null == this._preloadobj && (this._preloadobj = Le.SceneMgr.AddToScene(new Laya.Sprite3D("_preloadobj"))));
            var i = this._pool[e].pop();
            if (null == i || i.destroyed) {
                var o = Le.ResMgr.GetPrefab(e);
                if (null == o) return null;
                i = Laya.Sprite3D.instantiate(o);
            }
            return t ? t.addChild(i) : Le.SceneMgr.AddToScene(i), i.active = !0, i;
        }
        Recover(e, t, i = 0) {
            null == t || t.destroyed || null == e || (i > 0 ? Laya.timer.once(i, this, this.recover, [e, t], !1) : this.recover(e, t));
        }
        recover(e, t) {
            t.active = !1, null == this._pool[e] && (this._pool[e] = new Array()), this._pool[e].push(t);
        }
        Release() {
            Laya.timer.clearAll(this);
            for (const i in this._pool) {
                var e = this._pool[i];
                if (e) for (let i = 0; i < e.length; i++) {
                    var t = e[i];
                    t && !t.destroyed && t.destroy(!0);
                }
            }
        }
    }
    class J {
        constructor() {
            this._interstitialAd = null;
        }
        InterstitialManager() { }
        loadInterstitialAd() {
            t.Platform == e.QQAd && (this._interstitialAd = Te.createInsertAd(Le.CfgMgr.getAdCfg(31).toString()));
        }
        showInterstitialAd(e = null, t = -1) {
            this._interstitialAd && (t < 0 && (t = Le.CfgMgr.getGlobalCfg("InterstitialDelayTime")),
                Laya.timer.once(t, this, () => {
                    var t = this._interstitialAd.show();
                    t.then(() => {
                        console.log("####### 插屏显示成功!"), e && e(!0);
                    }), t.catch(t => {
                        e && e(!1);
                    });
                }));
        }
        closeInterstitialAd() {
            this.loadInterstitialAd();
        }
    }
    class $ {
        constructor() {
            this.recordTime = 0, this.recordFlag = !1, this._autoFlag = !1, this._recorederMgr = null,
                this._needshare = !0, this._stopcallback = null;
        }
        init() {
            window.tt.getGameRecorderManager && (this._recorederMgr = window.tt.getGameRecorderManager()),
                this._recorederMgr.onStart(this.onStart.bind(this)), this._recorederMgr.onStop(this.onStop.bind(this)),
                console.log("##### 录屏初始化完成");
        }
        start(e) {
            if (this._recorederMgr) try {
                if (console.log("######### 开始录制的方式：", e), this.recordFlag) return;
                this.recordFlag = !0, this._autoFlag = e, this._recorederMgr.start && this._recorederMgr.start({
                    duration: 300
                }), this.recordTime = 0, Laya.timer.loop(1e3, this, this.recordTimerHandle);
            } catch (e) {
                this._recorederMgr = null, console.warn("录制报错", e);
            }
        }
        recordTimerHandle() {
            this.recordTime++, (this._autoFlag && this.recordTime >= 120 || this.recordTime >= 120) && (console.log("######### 自动停止录制 时间:", this.recordTime),
                this.stop(this._autoFlag));
        }
        stop(e, t = !0, i = null) {
            this._recorederMgr && e == this._autoFlag && (this._stopcallback = i, Laya.timer.clear(this, this.recordTimerHandle),
                this.recordFlag = !1, this._needshare = t, this._recorederMgr.stop && this._recorederMgr.stop());
        }
        onStart() {
            console.log("###### 开始录屏了");
        }
        onStop(e) {
            console.log("###### 录屏结束", e.videoPath), this.recordTime = 0, this.recordpath = e.videoPath,
                this._stopcallback && this._stopcallback(this.recordpath), this._needshare && Le.UIMgr.openUI(i.VedioShareUI, e);
        }
        share(e) {
            this.recordTime < 3 ? Le.UIMgr.showTips("录制时间小于3秒，稍后再试!") : this.stop(this._autoFlag, !1, (t => {
                var i = Laya.Handler.create(this, t => {
                    t && (console.log("分享视频成功"), e());
                });
                console.log("分享视频地址:", t), window.tt.shareAppMessage({
                    channel: "video",
                    desc: Le.DataMgr.sharecard_config[0].title,
                    imageUrl: Le.DataMgr.sharecard_config[0].imageurl,
                    templateId: "bjifj2fd06hj1hkg1r",
                    query: "",
                    extra: {
                        videoPath: t,
                        videoTopics: ["木筏世界迷你版"]
                    },
                    success() {
                        i && i.runWith(!0), Le.RecorderMgr.start(!0);
                    },
                    fail(e) {
                        console.log("分享视频失败", e), i && i.runWith(!1), Le.RecorderMgr.start(!0);
                    }
                });
            }).bind(this));
        }
    }
    let ee = {
        Main: "res/sounds/main.mp3",
        Main2: "res/sounds/main2.mp3",
        Main3: "res/sounds/main3.mp3",
        Sail: "res/sounds/sail.mp3",
        Click: "res/sounds/click.mp3",
        Build: "res/sounds/build.mp3",
        Success: "res/sounds/success.mp3",
        Woods: "res/sounds/woods.mp3",
        Gem: "res/sounds/gem.mp3",
        Plunge: "res/sounds/plunge.mp3",
        Speed: "res/sounds/speed.mp3",
        Paddle: "res/sounds/paddle.mp3",
        Unlock: "res/sounds/unlock.mp3",
        Thunder: "res/sounds/thunder.mp3",
        Rain: "res/sounds/rain.mp3",
        Sleep: "res/sounds/sleep.mp3",
        Sink: "res/sounds/sink.mp3",
        Newyear: "res/sounds/newyear.mp3"
    };
    class te {
        constructor() {
            this._prefabMap = {}, this.PreloadRes = [];
        }
        PreloadResources() {
            let i = t.CDN + t.Platform + "/" + t.GameName + t.Version + "/";
            for (const e in ee) this.PreloadRes.push({
                url: ee[e],
                type: Laya.Loader.SOUND,
                local: !0
            });
            for (const e in _) this.PreloadRes.push({
                url: _[e],
                type: Laya.Loader.JSON,
                local: !0
            });
            for (const e in x) this.PreloadRes.push({
                url: x[e],
                type: Laya.Loader.HIERARCHY,
                local: !0
            });
            for (const e in C) this.PreloadRes.push({
                url: C[e],
                type: Laya.Loader.PREFAB,
                local: !0
            });
            for (const e in w) this.PreloadRes.push({
                url: w[e],
                type: Laya.Loader.ATLAS,
                local: !0
            });
            for (const e in S) this.PreloadRes.push({
                url: S[e],
                type: Laya.Loader.JSON,
                local: !0
            });
            for (const e in k) this.PreloadRes.push({
                url: k[e],
                type: Laya.Loader.JSON,
                local: !0
            });
            for (const e in ee) ee.hasOwnProperty(e) && this.PreloadRes.push({
                url: ee[e],
                type: Laya.Loader.SOUND,
                local: !0
            });
            if (t.Platform != e.OPAd) for (const e in A) A.hasOwnProperty(e) && this.PreloadRes.push({
                url: A[e],
                type: Laya.Loader.IMAGE,
                local: !0
            });
            console.log("开始预加载"), Laya.loader.create(this.PreloadRes, Laya.Handler.create(this, this.onPreLoadResComplete), Laya.Handler.create(this, this.onPreLoadResProgress, null, !1), null, null, null, 1, !0);
        }
        onPreLoadResComplete(e) {
            e && (this.init3dRes(), Le.CfgMgr.initConfigs(), Le.DataMgr.init(), Le.WorldMgr.init(),
                Le.SoundMgr.init(), Le.GameMgr.init(), Le.InterMgr.loadInterstitialAd(), Le.EventMgr.event(p.Res_Load_Complete, [100]));
        }
        init3dRes() {
            this.initPrefab(x.Item), this.initPrefab(x.Effect), this.initPrefab(x.Player), this.initPrefab(x.Components);
        }
        onPreLoadResProgress(e) {
            Le.EventMgr.event(p.Res_Load_Progress, [e]);
        }
        GetRes(e) {
            var t = Laya.loader.getRes(e);
            return null == t && console.warn("资源未加载/已释放:", e), t;
        }
        GetPrefab(e) {
            var t = this._prefabMap[e];
            return null != t && null != t || console.warn("获取资源失败:", e), t;
        }
        initPrefab(e) {
            var t = Laya.loader.getRes(e);
            if (null != t && null != t) for (let e = 0; e < t.numChildren; e++) {
                var i = t.getChildAt(e);
                this._prefabMap[i.name] = i;
            } else console.warn("加载资源失败:", e);
        }
        playEffect(e) {
            var t = Le.ResMgr.GetRes(e), i = new Laya.Particle2D(t);
            return i.emitter.start(), i.play(), i;
        }
    }
    class ie {
        constructor() {
            this.shipCubeId = 0, this.componentId = 0, this.lockBoardCount = 0, this.unlockCount = 0,
                this.lockCount = 1, this.relyId = 0, this.floor = 0, this.state = G.Idle;
        }
    }
    class oe {
        constructor() { }
        static clearQuest() {
            this.clearElements(this._elements1), this.clearElements(this._elements2), this.clearElements(this._elements3),
                this._elements1 = [], this._elements2 = [], this._elements3 = [];
        }
        static clearElements(e) {
            for (let t = 0; t < e.length; t++) e[t].clearAction();
        }
        static pushQuestAction(e) {
            e.actiontype == V.Building || e.actiontype == V.Row_Left || e.actiontype == V.Row_Right ? this._elements1.push(e) : e.actiontype == V.Collection || e.actiontype == V.SeaWood ? this._elements3.push(e) : this._elements2.push(e);
        }
        static getCollectQuest() {
            return this._elements3.length > 0 ? this._elements3.shift() : null;
        }
        static getQuestAction() {
            return this._elements1.length > 0 ? this._elements1.shift() : this._elements2.length > 0 ? this._elements2.shift() : this._elements3.length > 0 ? this._elements3.shift() : null;
        }
    }
    oe._elements1 = [], oe._elements2 = [], oe._elements3 = [];
    class ne {
        constructor() {
            this.open_list = [], this.close_list = [], this.list = [];
        }
        GetMinFFromOpenList() {
            var e = null;
            for (let i = 0; i < this.open_list.length; i++) {
                var t = this.open_list[i];
                (null == e || e.G + e.H > t.G + t.H) && (e = t);
            }
            return e;
        }
        IsBar(e, t, i) {
            return 0 == i[e][t];
        }
        IsInCloseList(e, t) {
            for (let o = 0; o < this.close_list.length; o++) {
                var i = this.close_list[o];
                if (i.x == e && i.y == t) return !0;
            }
            return !1;
        }
        GetPointFromCloseList(e, t) {
            for (let o = 0; o < this.close_list.length; o++) {
                var i = this.close_list[o];
                if (i.x == e && i.y == t) return i;
            }
            return null;
        }
        IsInOpenList(e, t) {
            for (let o = 0; o < this.open_list.length; o++) {
                var i = this.open_list[o];
                if (i.x == e && i.y == t) return !0;
            }
            return !1;
        }
        GetPointFromeOpenList(e, t) {
            for (let o = 0; o < this.open_list.length; o++) {
                var i = this.open_list[o];
                if (i.x == e && i.y == t) return i;
            }
            return null;
        }
        GetG(e) {
            return null == e.father ? 0 : e.x == e.father.x || e.y == e.father.y ? e.father.G + 10 : e.father.G + 14;
        }
        GetH(e, t) {
            return 10 * Math.abs(e.x - t.x) + 10 * Math.abs(e.y - t.y);
        }
        CheckP8(e, t, i, o) {
            for (var n = e.x - 1; n <= e.x + 1; n++) for (var a = e.y - 1; a <= e.y + 1; a++) if (n >= 0 && n < this.list.length && a >= 0 && a < this.list[0].length && (n != e.x || a != e.y) && !this.IsBar(n, a, t) && !this.IsInCloseList(n, a)) if (this.IsInOpenList(n, a)) {
                var s = this.GetPointFromeOpenList(n, a), r = 0;
                (r = e.x == s.x || e.y == s.y ? e.G + 10 : e.G + 14) < s.G && (this.ListRemove(this.open_list, s),
                    s.father = e, s.G = r, this.open_list.push(s));
            } else {
                (s = new ae()).setPosition(n, a), s.father = e, s.G = this.GetG(s), s.H = this.GetH(s, o),
                    this.open_list.push(s);
            }
        }
        FindeWay(e, t, i) {
            this.list = e, this.open_list.splice(0), this.close_list.splice(0);
            var o = new Array();
            for (this.open_list.push(t); !this.IsInOpenList(i.x, i.y) && 0 != this.open_list.length;) {
                var n = this.GetMinFFromOpenList();
                if (null == n) return null;
                this.ListRemove(this.open_list, n), this.close_list.push(n), this.CheckP8(n, this.list, t, i);
            }
            for (var a = this.GetPointFromeOpenList(i.x, i.y); null != a && null != a.father;) o.push(a),
                a = a.father;
            return o.reverse();
        }
        ListRemove(e, t) {
            var i = e.indexOf(t);
            i > -1 && e.splice(i, 1);
        }
    }
    class ae {
        constructor(e = 0, t = 0, i = 0, o = 0, n = null) {
            this._x = 0, this._y = 0, this._G = 0, this._H = 0, this._father = null, this._x = e,
                this._y = t, this._G = i, this._H = o, this._father = n;
        }
        get x() {
            return this._x;
        }
        get y() {
            return this._y;
        }
        get G() {
            return this._G;
        }
        get H() {
            return this._H;
        }
        get father() {
            return this._father;
        }
        set G(e) {
            this._G = e;
        }
        set H(e) {
            this._H = e;
        }
        set father(e) {
            this._father = e;
        }
        setPosition(e, t) {
            this._x = e, this._y = t;
        }
    }
    class se {
        constructor() {
            this.gameobject = null, this.taskicon = null, this.progress = null, this.maskobj = null,
                this._type = 0, this._startEngle = 90, this._endEngle = 0, this._totalTime = 0,
                this._curTime = 0;
            let e = Le.ResMgr.GetRes(C.BubbleItem);
            this.gameobject = e.create(), Le.UIMgr.findUI(i.MainUI).uiview.addChild(this.gameobject),
                this.gameobject.zOrder = 1001, this.progress = this.gameobject.getChildByName("progress"),
                this.taskicon = this.gameobject.getChildByName("taskicon"), this.maskobj = new Laya.Sprite(),
                this.progress.mask = this.maskobj, this.createMaskHandle(), this.gameobject.on(Laya.Event.CLICK, this, this.gameClickHandle);
        }
        setInfo(e, t) {
            this._type = e, e == V.Building ? this.taskicon.skin = "game/game_hammer.png" : e == V.Collection ? Le.GameMgr.gameMode == U.Active ? this.taskicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.taskicon.skin = "game/game_wood.png") : e == V.SeaWood ? (this.taskicon.skin = "game/game_woodborad.png",
                t.targetWood && 4 == t.targetWood.type && (this.taskicon.skin = "game/game_DriftBattle.png")) : e == V.Row_Left || e == V.Row_Right ? this.taskicon.skin = "game/game_rowing.png" : e == V.Sleep ? this.taskicon.skin = "game/game_Sleep.png" : e == V.Cat ? this.taskicon.skin = "game/game_hand.png" : e == V.Swing ? this.taskicon.skin = "game/game_play.png" : e == V.Save ? this.taskicon.skin = "game/game_saveman.png" : this.taskicon.skin = "game/game_gem.png",
                this.setBubbleVisible(!0);
        }
        gameClickHandle() {
            this._type == V.Building || this._type == V.Collection || this._type == V.SeaWood || this._type == V.Save || this._type == V.Row_Left || this._type == V.Row_Right || (this._type == V.Sleep ? Le.EventMgr.event(p.UI_ShowBuffButton, {
                type: 3
            }) : this.handle && this.handle.run());
        }
        startWork(e) {
            this.progress.visible = !0, this._totalTime = 1e3 * e, Laya.timer.loop(1, this, this.createMaskHandle);
        }
        setBubbleVisible(e) {
            this.gameobject.visible = e, e || this.pos(1e4, 0);
        }
        pos(e, t) {
            this.gameobject.pos(e, t, !0);
        }
        createMaskHandle() {
            this._curTime += Laya.timer.delta, this._endEngle = this._startEngle + this._curTime / this._totalTime * 360,
                this.maskobj.graphics.clear(), this.maskobj.graphics.drawPie(this.progress.width / 2, this.progress.height / 2, this.progress.width, this._startEngle, this._endEngle, "0xffffff"),
                this._endEngle >= 450 && (this._startEngle = 90, this._curTime = 0, this.progress.visible = !1,
                    this.setBubbleVisible(!1), Laya.timer.clear(this, this.createMaskHandle));
        }
        destroy() {
            Laya.timer.clearAll(this), this.gameobject.off(Laya.Event.CLICK, this, this.gameClickHandle),
                this.gameobject.destroy();
        }
    }
    class re {
        constructor(e) {
            this.gameobject = null, this.isdialog = !1, this.object = e;
            let t = Le.ResMgr.GetRes(C.DialogboxItem);
            this.gameobject = t.create(), Le.UIMgr.findUI(i.MainUI).uiview.addChild(this.gameobject),
                this.gameobject.zOrder = 1002, this.txtcontent = this.gameobject.getChildByName("txtcontent"),
                this.gameobject.visible = !1;
        }
        showDialog(e) {
            if (!this.isdialog) {
                Laya.timer.clear(this, this.setVisable), Laya.timer.clear(this, this.update), this.setVisable(!0);
                var t = e.length, i = Math.ceil(t / 11);
                this.gameobject.height = 36 * i, this.txtcontent.height = 21 * i;
                var o = De.Clamp(t, 0, 11);
                this.gameobject.width = 22.63 * o, this.txtcontent.width = 21.63 * o, this.txtcontent.text = e,
                    Laya.timer.once(5e3, this, this.setVisable, [!1]), Laya.timer.frameLoop(1, this, this.update);
            }
        }
        update() {
            if (null != this.object && !this.object.destroyed) {
                var e = De.trans3dTo2dPosition(this.object.transform.position, Le.SceneMgr.camera.camera);
                this.gameobject.pos(e.x, e.y - 160);
            }
        }
        setVisable(e) {
            this.gameobject.visible = e, this.isdialog = e, 0 == e && (Laya.timer.clear(this, this.setVisable),
                Laya.timer.clear(this, this.update));
        }
        release() {
            Laya.timer.clearAll(this), this.gameobject.destroy();
        }
    }
    class le extends Laya.Script3D {
        constructor() {
            super();
        }
        onAwake() {
            this.gameobject = this.owner, this.transform = this.gameobject.transform;
        }
        initProperty() {
            this.transform.localPosition = new Laya.Vector3(0, 0, 0), this.transform.localRotation = new Laya.Quaternion(0, 0, 0, -1),
                this.transform.localScale = new Laya.Vector3(1, 1, 1);
        }
    }
    class he extends le {
        constructor() {
            super(...arguments), this.type = 1, this.uid = 0, this.floor = 1, this.point = new ae(),
                this._animclip = "", this._movespeed = .7, this._pathindex = 0, this._upaxis = new Laya.Vector3(0, 1, 0),
                this.ismoving = !1, this.isswiming = !1, this.issleep = !1, this.bubbleitem = null,
                this.dialogitem = null;
        }
        onAwake() {
            super.onAwake(), this.childObj = this.gameobject.getChildAt(0), this.childObj.transform.localPosition = new Laya.Vector3(0, .05, 0),
                this.childObj.transform.localRotationEuler = new Laya.Vector3(0, 180, 0), this._animator = this.childObj.getComponent(Laya.Animator),
                this.playAnim(P.idle), this.bubbleitem = new se(), this.dialogitem = new re(this.gameobject),
                this.bubbleitem.setBubbleVisible(!1);
        }
        onUpdate() {
            this.updateBubblePosition();
        }
        updateBubblePosition() {
            var e = De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera);
            this.bubbleitem.pos(e.x - 45, e.y - 140);
        }
        showDialog() {
            if (this.dialogitem) {
                var e = Le.CfgMgr.getBoatmanCfg(this.uid);
                if (e.TextInfo && e.TextInfo.length > 0 && Math.random() < .3) {
                    var t = e.TextInfo.split("|");
                    t.length > 0 && this.dialogitem.showDialog(t[De.random(0, t.length - 1)]);
                }
            }
        }
        sleep() {
            this.issleep || null == this.bubbleitem || null == this.gameobject || this.gameobject.destroyed || (this.issleep = !0,
                1 != this.type && (this.bubbleitem.setInfo(V.Sleep, null), this.playAnim(P.sleep)));
        }
        wakeup() {
            this.issleep && null != this.bubbleitem && null != this.gameobject && !this.gameobject.destroyed && (this.issleep = !1,
                this.bubbleitem.setBubbleVisible(!1), this.playAnim(P.idle));
        }
        playAnim(e, t, i) {
            if (e != this._animclip || i) {
                this._animator.play(e, 0, 0);
                var o = 1e3 * this._animator.getControllerLayer(0).getAnimatorState(e).clip.duration();
                null != t && Laya.timer.once(o, this, t), Laya.timer.clear(this, this.playBuildSoundHandle),
                    e == P.build && Laya.timer.loop(o, this, this.playBuildSoundHandle);
            }
        }
        pauseAnim(e) {
            this._animator.getCurrentAnimatorPlayState().animatorState.speed = e ? 0 : 1;
        }
        startmove(e, t, i, o) {
            if (this.isswiming) console.warn("开始移动失败！当前角色正在移动（游泳）中，请等待角色移动完成。"); else {
                if (Le.SceneMgr.resetAstarMap(this.floor), null == e) {
                    var n = Le.SceneMgr.ship.getCanWalkPoint(this.floor);
                    n.length > 0 && (e = n[De.random(0, n.length - 1)]);
                }
                if (null == e) return console.warn("寻路目标点异常,停止移动"), void this.stopmove();
                if (3 != this.type) if (0 == e.navtype) {
                    var a = Le.SceneMgr.ship.getNearWalkPointByCom(this.gameobject, e);
                    a && (this._path = Le.SceneMgr.findWayPath(this.point, a.point, this.floor)), this._path && this._path.push(e);
                } else this._path = Le.SceneMgr.findWayPath(this.point, e.point, this.floor);
                null != this._path && this._path.length > 0 ? (this.ismoving = !0, this._pathindex = 0,
                    this.playAnim(P.walk), t && t.run(), this.move(i, o)) : this.stopmove(o);
            }
        }
        move(e, t) {
            if (this._path && this._pathindex < this._path.length) {
                var i = this._path[this._pathindex], o = i.point, n = i.transform.localPosition.clone();
                this.point.setPosition(o.x, o.y), this.transform.lookAt(n, this._upaxis, !0);
                var a = Laya.Vector3.distance(this.transform.localPosition, n) / .002 / this._movespeed / Le.WorldMgr.worldtimescale;
                Laya.Tween.to(this.transform, {
                    localPositionX: i.transform.localPositionX,
                    localPositionZ: i.transform.localPositionZ
                }, a, null, Laya.Handler.create(this, this.movecomplete, [e, t]), 0, !1);
            } else this.stopmove(t);
        }
        movecomplete(e, t) {
            var i = !1;
            e && (i = e.run()), i || (this._pathindex++, this.move(e, t));
        }
        stopmove(e) {
            this.ismoving = !1, this._path = null, this._pathindex = -1, this.playAnim(P.idle),
                e && e.run();
        }
        playBuildSoundHandle() {
            Le.SoundMgr.playSound(ee.Build);
        }
        lookAtTarget(e) {
            this.transform.lookAt(e.position, this._upaxis);
        }
        release() {
            this.gameobject.destroy(!0), this.bubbleitem && (this.bubbleitem.destroy(), this.bubbleitem = null),
                this.dialogitem && (this.dialogitem.release(), this.dialogitem = null), this.destroy();
        }
    }
    class de {
        constructor(e, t, i, o, n, a) {
            this._working = !1, this._completed = !1, this._actiontype = 0, this._startcallback = e,
                this._endcallback = t, this._updatecallback = i, this._time = o, this._target = n,
                this._actiontype = a, this._completed = !1, this._updatecallback && (this._updatecallback.once = !1);
        }
        get isComplete() {
            return this._completed;
        }
        get Working() {
            return this._working;
        }
        get time() {
            return this._time;
        }
        get actiontype() {
            return this._actiontype;
        }
        get target() {
            return this._target;
        }
        startAction(e) {
            if (this._completed = !1, this._working = !0, this.mariner = e, this.actiontype == V.SeaWood || this.actiontype == V.Save) {
                var t = this.actiontype == V.SeaWood ? this.targetWood.gameobject : this.targetMariner.gameobject;
                if (this._target = Le.SceneMgr.ship.getNearComponentByObj(t, Le.SceneMgr.ship.groundfloor),
                    null == this._target) return console.warn("救人或捡木板任务失败，找不到离木板最近的组件"), void (this._completed = !0);
            }
            this.climbStairs();
        }
        startQuest() {
            this.mariner.startmove(this._target, null, null, Laya.Handler.create(this, this.onStartAction));
        }
        onStartAction() {
            if (null != this.mariner && !this.mariner.gameobject.destroyed) {
                switch (this._startcallback && this.actiontype != V.Row_Left && this.actiontype != V.Row_Right && this._startcallback.run(),
                this.mariner.lookAtTarget(this._target.transform), this._actiontype) {
                    case V.Building:
                    case V.Collection:
                    case V.Row_Left:
                    case V.Row_Right:
                    case V.Cat:
                    case V.Swing:
                        this.mariner.startWork(this._actiontype, this._target);
                        break;

                    case V.SeaWood:
                        this.mariner.moveToSeaWood(this.targetWood, this._target, Laya.Handler.create(this, this.onCompleteAction));
                        break;

                    case V.Save:
                        this.mariner.moveToSeaWood(this.targetMariner, this._target, Laya.Handler.create(this, this.onCompleteAction));
                }
                if (this.actiontype == V.Row_Left || this.actiontype == V.Row_Right) {
                    this.mariner.pauseAnim(!0);
                    var e = 0;
                    for (let t = 0; t < Le.SceneMgr.boatmanlist.length; t++) 1 == Le.SceneMgr.boatmanlist[t].type && e++;
                    if (Le.SceneMgr.oarsCount == Le.SceneMgr.rowingCount || e < Le.SceneMgr.oarsCount && e == Le.SceneMgr.rowingCount) {
                        for (let e = 0; e < Le.SceneMgr.rowingMariners.length; e++) Le.SceneMgr.rowingMariners[e].pauseAnim(!1);
                        this._startcallback.run();
                    }
                }
                this._time > 0 && (Laya.timer.frameLoop(1, this, this.onUpdataAction), Laya.timer.once(1e3 * this._time, this, this.onCompleteAction));
            }
        }
        onUpdataAction() {
            this._updatecallback && this._updatecallback.run();
        }
        onCompleteAction() {
            Laya.timer.clear(this, this.onUpdataAction), this._endcallback && this._endcallback.run(),
                this.mariner.playAnim(P.idle), this.mariner.endWork && this.mariner.endWork(this._actiontype),
                this._completed = !0;
        }
        climbStairs() {
            if (!this._target) {
                return console.warn("找不楼梯，或者楼梯还没建好"), this._completed = !0;
            }
            if ((this._target.floor != this.mariner.floor)) {
                if (this._target.floor > this.mariner.floor)
                    if ((i = Le.SceneMgr.ship.getComponentByType(j.UpStairs, this.mariner.floor)).length > 0) {
                        var e = i[0], t = Le.SceneMgr.ship.getComponentByType(j.DownStairs, this.mariner.floor + 1)[0];
                        this.mariner.startmove(e, null, null, Laya.Handler.create(this, this.startclimb, [e, t]));
                    } else console.warn("找不楼梯，或者楼梯还没建好"), this._completed = !0;
                else if (this._target.floor < this.mariner.floor) {
                    var i;
                    if ((i = Le.SceneMgr.ship.getComponentByType(j.DownStairs, this.mariner.floor)).length > 0) {
                        e = i[0], t = Le.SceneMgr.ship.getComponentByType(j.UpStairs, this.mariner.floor - 1)[0];
                        this.mariner.startmove(e, null, null, Laya.Handler.create(this, this.startclimb, [e, t]));
                    } else console.warn("找不楼梯，或者楼梯还没建好,任务结束"), this._completed = !0;
                }
            } else this.startQuest();
        }
        startclimb(e, t) {
            this.mariner.startClimb(e, t, Laya.Handler.create(this, this.climbStairs));
        }
        clearAction() {
            Laya.timer.clearAll(this);
        }
    }
    class ge extends he {
        constructor() {
            super(...arguments), this._time = 0, this._movetime = 10, this._issleep = !1, this._questflag = !1,
                this.completeHandle = Laya.Handler.create(this, this.completemove, null, !1), this.produce = 0;
        }
        get ship() {
            return Le.SceneMgr.ship;
        }
        completemove() {
            this._issleep ? super.sleep() : Math.random() < Math.random() && (this.playAnim(P.happy, () => {
                this.playAnim(P.idle);
            }), this._questflag && null == this._quest && (this._quest = new de(Laya.Handler.create(this, this.starthandle), Laya.Handler.create(this, this.endhandle), null, 3, this.ship.getComponentByPointXY(this.point.x, this.point.y, this.floor, !0), V.Cat),
                oe.pushQuestAction(this._quest))), this.showDialog();
        }
        starthandle() {
            console.log("开始撸猫");
        }
        endhandle() {
            var e = Math.floor(this.produce * (1 + Le.SceneMgr.buffvalue) / 60 * 1);
            console.log("结束撸猫,获得木材", e), Le.DataMgr.addMoodCount(e), Le.GameMgr.playGetResCountAnimation(e, De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera)),
                this._quest = null, this._questflag = !1, this.startReward();
        }
        onAwake() {
            super.onAwake(), this.initProperty(), this._movetime = De.RandomRange(5, 10);
        }
        onUpdate() {
            null == Le.SceneMgr.ship || this.ismoving || Le.SceneMgr.ship.isSail || null != this._quest || (this._time += De.deltaTime(),
                this._time < this._movetime || (this._movetime = De.RandomRange(5, 10), this._time = 0,
                    this.startmove(null, null, null, this.completeHandle)));
        }
        sleep() {
            this._issleep = !0, this.ismoving || super.sleep();
        }
        startReward() {
            this.produce <= 0 || null != this._quest || Laya.timer.once(1e3 * De.random(10, 20), this, () => {
                this._questflag = !0;
            });
        }
        release() {
            Laya.Tween.clearAll(this.transform), Laya.timer.clearAll(this), super.release();
        }
    }
    class ce {
        constructor(e) {
            this._aniFlag = !1, this._tweenPos = null, this._tweenRote = null, this._hightY = 0,
                this._lowY = 0, this._parent = e, this.gameobject = Le.ObjPool.GetObject("Select", e),
                this.transform = this.gameobject.transform;
        }
        get RelyId() {
            return this.gameobject.relyId;
        }
        setRelyId(e) {
            this.gameobject.relyId = e;
        }
        showSelectBox(e) {
            if (e && null == this._selectBox && (this._selectBox = Le.ObjPool.GetObject("SelectBox", this._parent)),
                this._selectBox) {
                var t = this.transform.position;
                this._selectBox.transform.position = new Laya.Vector3(t.x, Math.floor(t.y), t.z),
                    this._selectBox.active = e;
            }
        }
        setPosition(e) {
            this._hightY = e.y + .65, this._lowY = e.y + .35, this.transform.position = new Laya.Vector3(e.x, e.y + .5, e.z);
        }
        setActive(e) {
            this.gameobject.active = e, this.removeAnimation(), e && (this._aniFlag = !0, this.addPositionAnimation(),
                this.addRotationAnimation());
        }
        addPositionAnimation() {
            if (this._aniFlag) {
                this.transform.position;
                this._tweenPos = De.tween3d(this, {
                    y: this._hightY
                }, 500, Laya.Ease.backOut, Laya.Handler.create(this, () => {
                    this.transform.position, this._tweenPos = De.tween3d(this, {
                        y: this._lowY
                    }, 300, Laya.Ease.backOut, Laya.Handler.create(this, () => {
                        this.addPositionAnimation();
                    }));
                }));
            }
        }
        addRotationAnimation() {
            this._aniFlag && (this._tweenRote = De.tween3d(this, {
                localRotationEulerY: 360
            }, 1e3, Laya.Ease.circOut, Laya.Handler.create(this, () => {
                this.transform.localRotationEulerY = 0, this.addRotationAnimation();
            })));
        }
        removeAnimation() {
            this._aniFlag = !1, this._tweenPos && this._tweenPos.clear(), this._tweenRote && this._tweenRote.clear();
        }
    }
    class pe extends le {
        constructor() {
            super(), this.target = new Laya.Vector3(0, 0, 0), this._touchid = -1, this._touchpoint = new Laya.Point(),
                this._camdisarr = [], this.x_Speed = 100, this.y_Speed = 100, this.xMinLimit = -80,
                this.xMaxLimit = 80, this.distance = 15, this.damping = 8, this.x_OriginAngle = -40,
                this.y_OriginAngle = -25, this.inWater = !1, this.flag = !1;
        }
        onAwake() {
            super.onAwake(), this.camera = this.owner, this.camera.enableHDR = !1, this.camera.clearFlag = Laya.CameraClearFlags.Sky,
                this.camera.fieldOfView = 60, this.camera.farPlane = 5e3;
        }
        defaultProperty(e) {
            null == e && (e = Le.SceneMgr.islandinfo);
            var t = De.TransferStringToNumberArr(e.ShipCamAngleLimit);
            this.xMinLimit = t[0], this.xMaxLimit = t[1], this.distance = e.ShipCamDistance,
                this.damping = 8, t = De.TransferStringToNumberArr(e.ShipCamOriginAngle), this.setRotateAngle(t[0], t[1]),
                this.camRotation(new Laya.Vector3(), !1);
            var i = e.CamDistance.toString().split("|");
            for (let e = 0; e < i.length; e++) {
                var o = De.TransferStringToNumberArr(i[e]);
                this._camdisarr[o[0]] = o[1];
            }
        }
        setRotateAngle(e, t) {
            this.x_OriginAngle = -Math.abs(e), this.y_OriginAngle = -t - 180, this.transform.localRotationEuler = new Laya.Vector3(this.x_OriginAngle, this.y_OriginAngle, 0);
        }
        mouseDown(e) {
            this.flag || Le.SceneMgr.isguide || -1 == this._touchid && this._touchid != e.touchId && (this._touchid = e.touchId,
                this._touchpoint.setTo(e.stageX, e.stageY), Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.mouseMove));
        }
        mouseUp(e) {
            this.flag || Le.SceneMgr.isguide || -1 != this._touchid && this._touchid == e.touchId && (this._touchid = -1,
                this._touchpoint.setTo(0, 0), Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.mouseMove));
        }
        mouseMove(e) {
            if (!this.flag && !Le.SceneMgr.isguide && -1 != this._touchid && this._touchid == e.touchId && null != Le.SceneMgr.ship) {
                var t = 100 * (e.stageX / Laya.stage.width - this._touchpoint.x / Laya.stage.width), i = 100 * (e.stageY / Laya.stage.height - this._touchpoint.y / Laya.stage.height);
                this.y_OriginAngle -= t * this.x_Speed * De.deltaTime(), this.x_OriginAngle -= i * this.y_Speed * De.deltaTime(),
                    this.x_OriginAngle = this.ClampAngle(this.x_OriginAngle, this.xMinLimit, this.xMaxLimit),
                    this._touchpoint.setTo(e.stageX, e.stageY);
            }
        }
        focusIsland(e) {
            this.flag = !0;
            var t = this.distance, i = De.TransferStringToNumberArr(Le.SceneMgr.islandinfo.IslandCamOriginAngle);
            this.setRotateAngle(i[0], i[1]), this.target.setValue(Le.SceneMgr.islandCenterPos.x, Le.SceneMgr.islandCenterPos.y, Le.SceneMgr.islandCenterPos.z),
                this.distance = 40, Laya.Tween.to(this, {
                    distance: t
                }, 2e3), Laya.timer.once(3500, this, e => {
                    e.run();
                }, [e]);
        }
        onUpdate() {
            null != this.target && (this.camRotation(this.target), this.x_OriginAngle > 2 ? (this.inWater = !0,
                Le.SceneMgr.ship.alphaShipWall(this.camera.transform.position, !0, this.distance)) : (this.inWater && Le.SceneMgr.ship.alphaShipWall(this.camera.transform.position, !1, this.distance),
                    this.inWater = !1));
        }
        camRotation(e, t = !1) {
            var i = De.QuaternionEuler(this.x_OriginAngle, this.y_OriginAngle, 0), o = new Laya.Vector3(0, 0, this.distance), n = De.Add(De.QuaternionMultiply(i, o), e);
            t ? (this.transform.rotation = De.QuaternionLerp(this.transform.rotation, i, De.deltaTime() * this.damping),
                this.transform.position = De.Lerp(this.transform.position, n, De.deltaTime() * this.damping)) : (this.transform.rotation = i,
                    this.transform.position = n);
        }
        ClampAngle(e, t, i) {
            return e < -360 && (e += 360), e > 360 && (e -= 360), De.Clamp(e, t, i);
        }
        isOnStageView(e) {
            var t = De.trans3dTo2dPosition(e, this.camera);
            return !(!De.NumberInRange(t.x, 0, Laya.stage.width) || !De.NumberInRange(t.y, 0, Laya.stage.height));
        }
        updataDistance(e = -1) {
            if (e <= 0 || null == e) {
                var t = Le.SceneMgr.buildPro / 100;
                e = this.distance;
                for (const i in this._camdisarr) t >= Number(i) && (e = this._camdisarr[i]);
            }
            Laya.Tween.to(this, {
                distance: e
            }, 4e3, null, null, null, !1);
        }
        destroy() {
            this.camera.destroy(), super.destroy();
        }
    }
    class me extends le {
        constructor() {
            super();
        }
        onAwake() {
            super.onAwake(), this.light = this.owner, this.shadowOperation();
        }
        shadowOperation() {

        }
        sunlight(e) {
            // Laya.Tween.clearAll(this.light), Laya.Tween.to(this.light, {
            //     intensity: e
            // }, 1e3);
        }
    }
    class ue {
        constructor(e) {
            this.offset = new Laya.Point(), this.passhand = "game/guide_hand.png", this.pickhand = "game/guide_hand_pick.png",
                this.releasekhand = "game/guide_hand_release.png", this.target = e, this.mainui = Le.UIMgr.findUI(i.MainUI),
                this.img = this.mainui.selectbtn.addChild(new Laya.Image("game/guide_hand.png")),
                this.img.anchorX = .5, this.img.anchorY = .5, this.doLager(), this.img.once(Laya.Event.CLICK, this, this.clickhandle),
                Laya.timer.frameLoop(1, this, this.update);
        }
        update() {
            if (null != this.target) {
                var e = De.trans3dTo2dPosition(this.target.transform.position, Le.SceneMgr.camera.camera);
                this.img.pos(e.x + this.offset.x + 12, e.y + 0 + this.offset.y);
            }
        }
        doLager() {
            Laya.Tween.clearAll(this.img), De.doLager(this, this.img, 300, 1.1);
        }
        clickhandle() {
            Laya.Tween.clearAll(this.img), this.offset.y = -85, this.img.skin = this.pickhand,
                this.target.guestMovetoship && this.target.guestMovetoship();
        }
        release() {
            Laya.timer.clearAll(this), Laya.Tween.clearAll(this.img), this.img.destroy();
        }
    }
    class fe extends he {
        constructor() {
            super(...arguments), this._time = 0, this._movetime = .5, this._swimspeed = .7,
                this._climbspeed = .7, this._issleeping = !1, this.moveStepHandle = Laya.Handler.create(this, () => null != this._curAction && !this._curAction.Working && (this.stopmove(),
                    console.warn("startAction"), this.bubbleitem.setInfo(this._curAction.actiontype, this._curAction),
                    this._curAction.startAction(this), !0), [], !1);
        }
        get ship() {
            return Le.SceneMgr.ship;
        }
        onAwake() {
            super.onAwake(), this.initProperty(), this._hammer = this.childObj.getChildByName("root").getChildByName("spine").getChildByName("Larm").getChildByName("Lhand").getChildByName("weaponL").getChildByName("Hammer"),
                this._oarsL = this.childObj.getChildByName("root").getChildByName("spine").getChildByName("Larm").getChildByName("Lhand").getChildByName("weaponL").getChildByName("Oars_animate_R"),
                this._oarsR = this.childObj.getChildByName("root").getChildByName("spine").getChildByName("Rarm").getChildByName("Rhand").getChildByName("weaponR").getChildByName("Oars_animate_L"),
                this._hammer.active = !1, this._oarsL.active = !1, this._oarsR.active = !1, De.castShadow(this.gameobject, !0, !0),
                this.playAnim(P.idle), this._movetime = De.RandomRange(2, 8), this._swimeff = Le.ObjPool.GetObject("fx_row", this.gameobject),
                this._swimeff.transform.localPosition = new Laya.Vector3(0, 0, .5), this._swimeff.transform.localRotationEuler = new Laya.Vector3(),
                this._swimeff.active = !1;
        }
        showGuestHand() {
            this._guestIcon = new ue(this), this.playAnim(P.guide_PickUp);
        }
        guestMovetoship() {
            var e = this.ship.getComponentByPointXY(this.point.x, this.point.y, this.floor, !0);
            this._guestIcon.img.skin = this._guestIcon.pickhand, Laya.Tween.to(this.transform, {
                localPositionY: .7
            }, 500, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(this.transform, {
                    localPositionX: e.transform.localPositionX,
                    localPositionZ: e.transform.localPositionZ
                }, 2e3, null, Laya.Handler.create(this, () => {
                    this._guestIcon.img.skin = this._guestIcon.releasekhand, this._guestIcon.target = null,
                        Laya.Tween.to(this.transform, {
                            localPositionY: 0
                        }, 500, Laya.Ease.quadOut, Laya.Handler.create(this, () => {
                            Le.DataMgr.setunlockBoatmanDic(3), this.playAnim(P.sleep);
                        }));
                }));
            })), Laya.timer.once(2600, this, () => {
                this._guestIcon.img.visible = !1;
            }, [], !1), Laya.timer.once(4e3, this, () => {
                this.playAnim(P.idle), this.isswiming = !1, this.showGuideStep1();
            }, [], !1);
        }
        showGuideStep1() {
            Le.SceneMgr.createBuildGuide();
            var e = Le.SceneMgr._guideCubeArr[0];
            e.handicon = this._guestIcon, this._guestIcon.offset.setTo(0, 80), this._guestIcon.img.visible = !0,
                this._guestIcon.target = e.gameobject, this._guestIcon.doLager(), this._guestIcon.img.skin = this._guestIcon.passhand;
        }
        showGuideStep2() {
            this._guestIcon.img.visible = !0, this._guestIcon.target = Le.SceneMgr.guidewood,
                this._guestIcon.doLager(), this._guestIcon.img.skin = this._guestIcon.passhand,
                Le.SceneMgr.guidewood.gameobject.active = !0, Le.SceneMgr.guidewood.icon = this._guestIcon,
                Le.SceneMgr.guidewood.collider.enabled = !0;
        }
        onUpdate() {
            super.onUpdate(), this.update();
        }
        sleep() {
            super.sleep(), this.ismoving || null != this._curAction || this.go2sleep();
        }
        wakeup() {
            super.wakeup(), this._issleeping = !1, this._coffin && (this._coffin.active = !1);
        }
        update() {
            if (null != this.ship && !this.isswiming && !this.issleep) {
                if (null != this._curAction) return this._curAction.isComplete ? void (this._curAction = null) : void (this._curAction.Working || (this.bubbleitem.setInfo(this._curAction.actiontype, this._curAction),
                    this._curAction.startAction(this)));
                if (!this.ismoving) return null == this._curAction && (this._curAction = oe.getQuestAction(),
                    this._curAction && this._curAction.Working && this._curAction.mariner != this) ? (console.warn("接取新任务 该新任务已被领取:", this._curAction.actiontype, this.uid),
                        void (this._curAction = null)) : this._curAction ? (this.bubbleitem.setInfo(this._curAction.actiontype, this._curAction),
                            void this._curAction.startAction(this)) : (this._time += De.deltaTime(), void (this._time >= this._movetime && (this._time = 0,
                                this._movetime = De.RandomRange(2, 8), this.startmove(null, null, this.moveStepHandle),
                                this.showDialog())));
            }
        }
        stopmove(e) {
            super.stopmove(e), null == this._curAction && this.go2sleep();
        }
        stopRowing() {
            this.pauseAnim(!1), this._curAction = null, this.playAnim(P.idle, null, !0), this._oarsL.active = !1,
                this._oarsR.active = !1;
        }
        moveToSeaWood(e, t, i) {
            this._swimeff.active = !0, this.isswiming = !0, Le.SoundMgr.playSound(ee.Plunge),
                this.lookAtTarget(e.transform);
            var o = Laya.Vector3.distance(this.transform.position, e.transform.position) / .002 / this._swimspeed / Le.WorldMgr.worldtimescale, n = De.InverseTransformPoint(this.ship.child.transform, e.transform.position);
            Laya.Tween.to(this.transform, {
                localPositionX: n.x,
                localPositionZ: n.z
            }, o, null, Laya.Handler.create(this, this.moveToShip, [e, t, i]), 0, !1), this.playAnim(P.swim_jumpIntoSea, () => {
                this.playAnim(P.swimming);
            }, !0);
        }
        moveToShip(e, t, i) {
            this.lookAtTarget(t.transform);
            var o = Laya.Vector3.distance(this.transform.position, t.transform.position) / .002 / this._swimspeed / Le.WorldMgr.worldtimescale;
            Laya.Tween.to(this.transform, {
                localPositionX: t.transform.localPositionX,
                localPositionZ: t.transform.localPositionZ
            }, o, null, Laya.Handler.create(this, t => {
                this.playAnim(P.swim_upToShip, () => {
                    this.isswiming = !1, this._swimeff.active = !1, this.bubbleitem.setBubbleVisible(!1),
                        e && e.getwoods && e.getwoods(), t && t.run();
                }, !0);
            }, [i]), 0, !1);
            var n = null, a = De.TransformPoint(this.ship.child.transform, t.transform.localPosition);
            this._curAction && this._curAction.actiontype == V.Save && (a = t.transform.localPosition,
                n = Laya.Handler.create(this, e => {
                    Le.DataMgr.savedplayer = 1, Le.DataMgr.setunlockBoatmanDic(Number(Le.CfgMgr.getGlobalCfg("SavePlayerID"))),
                        e.playAnim(P.swim_upToShip, () => {
                            Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(1), t), e.gameobject.destroy(),
                                e.destroy();
                        }, !0);
                }, [e])), Le.SceneMgr.isguide && null != this._guestIcon && (this._guestIcon.release(),
                    this._guestIcon = null), Laya.Tween.to(e.transform, {
                        localPositionX: a.x,
                        localPositionZ: a.z
                    }, o, null, n, 0, !1);
        }
        startWork(e, t) {
            if (null != this._curAction && !this.gameobject.destroyed) {
                if (e == V.Row_Left || e == V.Row_Right) {
                    var i = t.gameobject.getChildByName("Oars");
                    i && (i.active = !1), this.bubbleitem.setBubbleVisible(!1), Le.SoundMgr.playSound(ee.Paddle),
                        Le.SceneMgr.rowingMariners.push(this), this.pauseAnim(!0), Le.SceneMgr.rowingCount++,
                        this.transform.localRotationEulerY = this._curAction.target.transform.localRotationEulerY + 180;
                }
                switch (e) {
                    case V.Building:
                        this.playAnim(P.build), this._hammer.active = !0, this.bubbleitem.startWork(this._curAction.time),
                            Le.SceneMgr.isguide && this._guestIcon && (this._guestIcon.target = null, this._guestIcon.img.visible = !1);
                        break;

                    case V.Collection:
                    case V.Cat:
                        this.playAnim(P.gathering), this.bubbleitem.startWork(this._curAction.time);
                        break;

                    case V.Row_Left:
                        (i = this._oarsL.parent.addChild(i.clone())).name = this._oarsL.name, i.transform.localPosition = this._oarsL.transform.localPosition.clone(),
                            i.transform.localRotation = this._oarsL.transform.localRotation.clone(), this._oarsL.destroy(),
                            this._oarsL = i, this._oarsL.active = !0, this.playAnim(P.rowing_left);
                        break;

                    case V.Row_Right:
                        (i = this._oarsR.parent.addChild(i.clone())).name = this._oarsR.name, i.transform.localPosition = this._oarsR.transform.localPosition.clone(),
                            i.transform.localRotation = this._oarsR.transform.localRotation.clone(), this._oarsR.destroy(),
                            this._oarsR = i, this._oarsR.active = !0, this.playAnim(P.rowing_right);
                        break;

                    case V.Swing:
                        this.playAnim(P.play_swing), this.bubbleitem.startWork(this._curAction.time), this.transform.localRotationEuler = this._curAction.target.transform.localRotationEuler.clone(),
                            this.transform.localRotationEulerY += 180;
                }
            }
        }
        endWork(o) {
            if (!this.gameobject.destroyed) {
                switch (this.bubbleitem.setBubbleVisible(!1), o) {
                    case V.Building:
                        this._hammer.active = !1, Le.SceneMgr.isguide && this._guestIcon && this.showGuideStep2();
                        break;

                    case V.Collection:
                    case V.Cat:
                        Le.DataMgr.setArchieveValDic(R.CollectRes, 1), Le.SoundMgr.playSound(ee.Woods);
                        break;

                    case V.SeaWood:
                        if (Le.SceneMgr.isguide) {
                            Le.SceneMgr.isguide = !1;
                            var n = Le.UIMgr.findUI(i.MainUI);
                            if (n.uiview.visible = !0, n.guidslide.visible = !0, Laya.Tween.to(n.guidslide, {
                                alpha: 0
                            }, 2e3, null, null, 3500), De.SendEvent("完成新手关卡用户数量"), De.SendLevelEvent("完成新手关卡"),
                                t.Platform == e.QQAd && Le.GameMgr.redMoneySwitch) {
                                var a = 100 * Le.CfgMgr.getGlobalCfg("NewMoneyNumber");
                                a = De.random(1, a) / 100, Le.UIMgr.openUI(i.GetRedMoneyUI, {
                                    money: a,
                                    type: E.NewPlayer
                                });
                            }
                        }
                }
                this.go2sleep();
            }
        }
        go2sleep() {
            this._issleeping || this.issleep && (this._issleeping = !0, this.bubbleitem.setInfo(V.Sleep, this._curAction),
                this.startmove(this.ship.getComponentByPointXY(this.point.x, this.point.y, this.floor, !0), null, null, Laya.Handler.create(this, () => {
                    this.issleep ? (null == this._coffin && (this._coffin = Le.ObjPool.GetObject("coffin", this.gameobject),
                        this._coffin.transform.localPosition = new Laya.Vector3(0, 0, 0)), this._coffin.active = !0,
                        this.playAnim(P.sleep)) : this.bubbleitem.setBubbleVisible(!1);
                })));
        }
        startClimb(e, t, i) {
            this.playAnim(P.climb_stairs);
            var o = Laya.Vector3.distance(this.transform.localPosition, t.transform.localPosition) / .002 / this._climbspeed / Le.WorldMgr.worldtimescale;
            if (Laya.Tween.to(this.transform, {
                localPositionY: t.transform.localPositionY
            }, o, null, Laya.Handler.create(this, this.endClimb, [t, i]), 0, !1), e.floor > t.floor) var n = Le.SceneMgr.ship.getComponentByType(j.UpStairs, t.floor); else n = Le.SceneMgr.ship.getComponentByType(j.UpStairs, e.floor);
            this.transform.localRotationEulerY = n[0].transform.localRotationEulerY;
        }
        endClimb(e, t) {
            this.floor = e.floor, this.point.setPosition(e.point.x, e.point.y), t.run();
        }
        release() {
            null != this._curAction && (this._curAction.clearAction(), this._curAction = null),
                Laya.Tween.clearAll(this.transform), Laya.timer.clearAll(this), this.bubbleitem.destroy(),
                super.release();
        }
    }
    class ye extends he {
        constructor() {
            super(...arguments), this._time = 0, this._movetime = 10, this._issleeping = !1,
                this._climbspeed = .7, this._swimspeed = .7, this.moveStepHandle = Laya.Handler.create(this, this.movestep, null, !1),
                this.completeHandle = Laya.Handler.create(this, this.completemove, null, !1);
        }
        get ship() {
            return Le.SceneMgr.ship;
        }
        movestep() {
            return null != this._action && !this._action.Working && (this.stopmove(), this.bubbleitem.setInfo(this._action.actiontype, this._action),
                this._action.startAction(this), !0);
        }
        completemove() {
            this.issleep ? null == this._action && this.go2sleep() : Math.random() < Math.random() && this.playAnim(P.happy, () => {
                this.playAnim(P.idle);
            });
        }
        onAwake() {
            super.onAwake(), this.initProperty(), this._movetime = De.RandomRange(5, 10), this._swimeff = Le.ObjPool.GetObject("fx_row", this.gameobject),
                this._swimeff.transform.localPosition = new Laya.Vector3(0, 0, .5), this._swimeff.transform.localRotationEuler = new Laya.Vector3(),
                this._swimeff.active = !1;
        }
        onUpdate() {
            if (null != this.ship && !this.isswiming && !this.issleep && !this.ship.isSail) if (null == this._action) {
                if (this._action = oe.getCollectQuest(), this._action && this._action.Working) this._action = null; else if (!this.ismoving) {
                    if (this._action) return this.bubbleitem.setInfo(this._action.actiontype, this._action),
                        void this._action.startAction(this);
                    this._time += De.deltaTime(), this._time >= this._movetime && (this._time = 0, this._movetime = De.RandomRange(5, 10),
                        this.startmove(null, null, this.moveStepHandle, this.completeHandle));
                }
            } else this._action.isComplete && (this._action = null);
        }
        startWork(e, t) {
            null != this._action && e == V.Collection && e == V.SeaWood && (this.playAnim(P.gathering),
                this.bubbleitem.startWork(this._action.time));
        }
        endWork(e) {
            null != this._action && e == V.Collection && e == V.SeaWood && (this._action = null,
                Le.DataMgr.setArchieveValDic(R.CollectRes, 1), Le.SoundMgr.playSound(ee.Woods),
                this.go2sleep());
        }
        sleep() {
            super.sleep(), this.ismoving || null != this._action || this.go2sleep();
        }
        wakeup() {
            super.wakeup(), this._issleeping = !1;
        }
        go2sleep() {
            this._issleeping || this.issleep && (this._issleeping = !0, this.bubbleitem.setInfo(V.Sleep, this._action),
                this.startmove(this.ship.getComponentByPointXY(this.point.x, this.point.y, this.floor, !0), null, null, Laya.Handler.create(this, () => {
                    this.issleep ? this.playAnim(P.sleep) : this.bubbleitem.setBubbleVisible(!1);
                })));
        }
        startClimb(e, t, i) {
            this.playAnim(P.climb_stairs);
            var o = Laya.Vector3.distance(this.transform.localPosition, t.transform.localPosition) / .002 / this._climbspeed / Le.WorldMgr.worldtimescale;
            if (Laya.Tween.to(this.transform, {
                localPositionY: t.transform.localPositionY
            }, o, null, Laya.Handler.create(this, this.endClimb, [t, i]), 0, !1), e.floor > t.floor) var n = Le.SceneMgr.ship.getComponentByType(j.UpStairs, t.floor); else n = Le.SceneMgr.ship.getComponentByType(j.UpStairs, e.floor);
            this.transform.localRotationEulerY = n[0].transform.localRotationEulerY;
        }
        endClimb(e, t) {
            this.floor = e.floor, this.point.setPosition(e.point.x, e.point.y), t.run();
        }
        moveToSeaWood(e, t, i) {
            this._swimeff.active = !0, this.isswiming = !0, Le.SoundMgr.playSound(ee.Plunge),
                this.lookAtTarget(e.transform);
            var o = Laya.Vector3.distance(this.transform.position, e.transform.position) / .002 / this._swimspeed / Le.WorldMgr.worldtimescale, n = De.InverseTransformPoint(this.ship.child.transform, e.transform.position);
            Laya.Tween.to(this.transform, {
                localPositionX: n.x,
                localPositionZ: n.z
            }, o, null, Laya.Handler.create(this, this.moveToShip, [e, t, i]), 0, !1), this.playAnim(P.swim_jumpIntoSea, () => {
                this.playAnim(P.swimming);
            }, !0);
        }
        moveToShip(e, t, i) {
            this.lookAtTarget(t.transform);
            var o = Laya.Vector3.distance(this.transform.position, t.transform.position) / .002 / this._swimspeed / Le.WorldMgr.worldtimescale;
            Laya.Tween.to(this.transform, {
                localPositionX: t.transform.localPositionX,
                localPositionZ: t.transform.localPositionZ
            }, o, null, Laya.Handler.create(this, t => {
                this.playAnim(P.swim_upToShip, () => {
                    this.isswiming = !1, this._swimeff.active = !1, this.bubbleitem.setBubbleVisible(!1),
                        e && e.getwoods && e.getwoods(), t && t.run();
                }, !0);
            }, [i]), 0, !1);
            var n = De.TransformPoint(this.ship.child.transform, t.transform.localPosition);
            Laya.Tween.to(e.transform, {
                localPositionX: n.x,
                localPositionZ: n.z
            }, o, null, null, 0, !1);
        }
    }
    class be extends le {
        constructor() {
            super(...arguments), this.speed = .02;
        }
        onAwake() {
            super.onAwake(), this.gameobject.getChildAt(0).transform.localRotationEulerY = -180,
                De.castShadow(this.gameobject, !0, !0);
        }
        onUpdate() {
            if (null != this.endpos) {
                this.transform.lookAt(this.endpos, new Laya.Vector3(0, 1, 0));
                var e = De.MoveTowards(this.transform.position, this.endpos, 2 * De.deltaTime());
                this.transform.position = e, De.Distance(this.transform.position, this.endpos) <= .1 && (this.endpos = null,
                    this.gameobject.destroy(), this.destroy());
            }
        }
    }
    class ve extends le {
        constructor() {
            super(), this._floatspeed = 1, this._floattype = 1, this._time = 0, this._stoptime = 5,
                this._temp = new Laya.Vector3(), this.type = 0, this.flag = !1, this.maxradius = 0,
                this.minradius = 0, this.radian = 0, this._iscollected = !1, this.flashflag = !1;
        }
        onAwake() {
            super.onAwake(), this.initProperty(), De.castShadow(this, !0, !0), this.collider = this.gameobject.getComponent(Laya.PhysicsCollider),
                this._stoptime = Le.CfgMgr.getGlobalCfg("SeaItemStopTime"), this._floatspeed = Le.CfgMgr.getGlobalCfg("SeaItemFloatSpeed");
        }
        setInfo(e) {
            this.type = e.type, this.flag = e.flag, 4 == this.type ? (this.transform.localRotationEulerY = De.random(0, 360),
                this.transform.localRotationEulerZ = -90) : 5 == this.type ? this.transform.localRotationEulerY = 0 : this.transform.localRotationEulerY = De.random(0, 360);
        }
        onUpdate() {
            if (this.flag && null != Le.SceneMgr.ship) {
                this.radian += De.deltaTime();
                var e = .9 * Math.sin(this.radian);
                switch (this._floattype) {
                    case 1:
                        De.Distance(this.transform.position, Le.SceneMgr.ship.transform.position) <= this.minradius && (this._floattype = 3),
                            this._temp.setValue(Le.SceneMgr.ship.transform.position.x, e, Le.SceneMgr.ship.transform.position.z),
                            this.transform.position = De.MoveTowards(this.transform.position, this._temp, De.deltaTime() * this._floatspeed);
                        break;

                    case 2:
                        this.transform.position = De.MoveTowards(this.transform.position, this._temp, De.deltaTime() * this._floatspeed),
                            Le.SceneMgr.camera.isOnStageView(this.transform.position) ? this._time = 0 : this._time += De.deltaTime(),
                            (this._time >= 3 || De.Distance(this.transform.position, Le.SceneMgr.ship.transform.position) >= this.maxradius) && this.release();
                        break;

                    case 3:
                        if (this._time += De.deltaTime(), this._time >= this._stoptime) {
                            this._floattype = 2, this._time = 0;
                            var t = De.ExtendedLinePoint(Le.SceneMgr.ship.transform.position.x, Le.SceneMgr.ship.transform.position.z, this.transform.position.x, this.transform.position.z, this.maxradius);
                            this._temp.setValue(t.x, e, t.y);
                        }
                        break;

                    case 0:
                        this._time += De.deltaTime(), this._time >= this._stoptime && (this.flag = !1, this.release());
                }
            }
        }
        onClick() {
            if (!this._iscollected) if (this.icon && this.icon.release(), this.flag = !1, 1 == this.type || 4 == this.type) {
                this._iscollected = !0;
                var e = new de(null, null, null, 0, null, V.SeaWood);
                e.targetWood = this, oe.pushQuestAction(e);
                var t = this.gameobject.meshRenderer.materials;
                this.defmat = t[0], this.flashmat = t[1], this.flash();
            } else if (2 == this.type || 3 == this.type) Le.UIMgr.openUI(i.SeaBoxUI, this.type),
                this.release(); else if (5 == this.type) {
                    var o = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("SalvageRedMoney")), n = Math.floor(De.random(o[0], o[1])) / 100;
                    Le.UIMgr.openUI(i.GetRedMoneyUI, {
                        money: n,
                        type: E.Balance
                    }), this.release();
                }
        }
        flash() {
            this.gameobject.meshRenderer.material = this.flashflag ? this.defmat : this.flashmat,
                this.flashflag = !this.flashflag, Laya.timer.once(500, this, this.flash);
        }
        getwoods() {
            if (this._iscollected = !0, 1 == this.type) {
                if (Le.GameMgr.gameMode == U.Active) {
                    var o = Le.CfgMgr.getGlobalCfg("SeaWoodResult").split("|")[4], n = De.TransferStringToNumberArr(o), a = De.random(n[0], n[1]);
                    a = Le.GameMgr.getResRatioResult(a);
                    Le.DataMgr.addMoodCount(a), Le.GameMgr.playGetResCountAnimation(a, De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera)),
                        Le.EventMgr.event(p.UI_UpdateMood, !0), Le.DataMgr.setArchieveValDic(R.CollectMood, 1);
                } else if (Le.GameMgr.gameMode == U.Level) {
                    o = Le.CfgMgr.getGlobalCfg("SeaWoodResult").split("|")[Le.SceneMgr.getCurLevelId() - 1],
                        n = De.TransferStringToNumberArr(o), a = De.random(n[0], n[1]), a = Le.GameMgr.getResRatioResult(a);
                    Le.DataMgr.addMoodCount(a), Le.GameMgr.playGetResCountAnimation(a, De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera)),
                        Le.EventMgr.event(p.UI_UpdateMood, !0), Le.DataMgr.setArchieveValDic(R.CollectMood, 1);
                }
            } else {
                Le.GameMgr.GetBottleCount++;
                var s = null;
                1 == Le.DataMgr.level && 2 == Le.GameMgr.GetBottleCount ? t.Platform != e.WXAd && (s = 19) : t.Platform == e.TouTAd && Le.DataMgr.bottleDay != De.getCurrentDate() ? (Le.DataMgr.bottleDay = De.getCurrentDate(),
                    s = De.random(20, 22)) : s = null, Le.UIMgr.openUI(i.BottleUI, s);
            }
            this.release();
        }
        release() {
            Le.SceneMgr.sea.releaseItem(this.type, this), Laya.Tween.clearAll(this), this.flag = !1,
                this._floattype = 0, this.gameobject.destroy(), this.destroy();
        }
    }
    class Ie extends le {
        constructor() {
            super(), this._speed = 5e-4, this._woodcount = 0, this._woodmaxcount = 0, this._boxcount = 0,
                this._boxmaxcount = 0, this._bottlecount = 0, this._bottlemaxcount = 1, this._redcount = 0,
                this._redmaxcount = 0, this._maxRadius = 15, this._minRadius = 6, this._itemlist = [],
                this._redbagIndex = 0, this.woodtimearr = [], this.boxtimearr = [], this.bottletimearr = [],
                this.redbagtimearr = [], this.dradontimearr = [];
        }
        onAwake() {
            super.onAwake(), this._speed = Le.CfgMgr.getGlobalCfg("SeaFaceMoveSpeed") / 1e4,
                this._woodmaxcount = Le.CfgMgr.getGlobalCfg("WoodCount"), this._boxmaxcount = Le.CfgMgr.getGlobalCfg("ChestBoxCount"),
                this._bottlemaxcount = Le.CfgMgr.getGlobalCfg("SeaBottleCount"), this._redmaxcount = Le.CfgMgr.getGlobalCfg("RedCount");
            var e = De.SplitToStr(Le.CfgMgr.getGlobalCfg("RefreshWood"), "|")[Le.DataMgr.level - 1];
            this.woodtimearr = De.TransferStringToNumberArr(e), e = De.SplitToStr(Le.CfgMgr.getGlobalCfg("RefreshBox"), "|")[Le.DataMgr.level - 1],
                this.boxtimearr = De.TransferStringToNumberArr(e), this.bottletimearr = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("RefreshBottle")),
                this.dradontimearr = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("RefreshBottle")),
                this.redbagtimearr = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("RefreshRedbag")),
                // this.surface1 = this.gameobject.getChildByName("sea_surface"),
                //  this.surface2 = this.surface1.getChildAt(0),
                // this.surface2.transform.localRotationEulerY = 90,
                //  this.surface1.transform.localPositionY = -.03,
                // De.castShadow(this.surface1, !1, !0), De.castShadow(this.surface2, !1, !0),
                De.castShadow(this.gameobject.getChildByName("hill"), !0, !0),
                De.castShadow(this.gameobject.getChildByName("sea_ground"), !1, !1)
            //,  this.mat1 = this.surface1.meshRenderer.material,
            // this.mat2 = this.surface2.meshRenderer.material, 
            // this.surface1.meshRenderer.sortingFudge += 1e6,
            // this.surface2.meshRenderer.sortingFudge += 1e6;
        }
        onUpdate() {
            this.seafacemove();
        }
        createdDradon() {
            Laya.timer.clear(this, this._createdDradon);
            var e = Math.floor(1e3 * De.RandomRange(this.dradontimearr[0], this.dradontimearr[1]));
            Laya.timer.once(e, this, this._createdDradon);
        }
        _createdDradon() {
            if (null != Le.SceneMgr.ship) {
                var e = Le.SceneMgr.AddToScene(new Laya.Sprite3D("DragonFly"));
                Le.ObjPool.GetObject("DragonFly", e);
                var t = De.random(40, 80), i = De.random(20, 35), o = Le.SceneMgr.ship.transform.position.clone();
                o.x += De.RandomRange(-2, 2), o.z += De.RandomRange(-2, 2), o.y = i;
                var n = De.random(0, 180), a = De.getCirclePosByAngle(n, o.x, o.z, t), s = new Laya.Vector3(a.x, i, a.y), r = De.Less(o, s), l = De.Multiply(De.Normalized(r), t);
                l.y = i;
                var h = e.addComponent(be);
                h.transform.position = s, h.endpos = l;
            }
            this.createdDradon();
        }
        seafacemove() {
            // this.mat1.tilingOffsetW += this._speed, this.mat1.tilingOffsetZ += this._speed,
            //     this.mat2.tilingOffsetW += this._speed, this.mat2.tilingOffsetZ += this._speed;
        }
        createItem(e) {
            if (null != Le.SceneMgr.ship && !Le.SceneMgr.ship.isSail && !Le.SceneMgr.isguide) {
                var t = Le.SceneMgr.getCurLevelId();
                Le.GameMgr.gameMode == U.Active && (t = 5);
                var i = De.getCirclePosByAngle(De.random(1, 360), Le.SceneMgr.ship.transform.position.x,
                    Le.SceneMgr.ship.transform.position.z, De.RandomRange(.65 * this._maxRadius, this._maxRadius) + t),
                    o = "";
                if (1 == e && this._woodcount < this._woodmaxcount ? (Le.GameMgr.gameMode == U.Active ?
                    o = "Plank_NewYear" :
                    Le.GameMgr.gameMode == U.Level && (o = "Plank"),
                    this._woodcount++) : 2 == e && this._boxcount < this._boxmaxcount ? (o = "Chest",
                        this._boxcount++) : 3 == e && this._boxcount < this._boxmaxcount ? (o = "Chest",
                            this._boxcount++) : 4 == e && this._bottlecount < this._bottlemaxcount ? (o = "Bottle",
                                this._bottlecount++) : 5 == e && this._redcount < this._redmaxcount && (o = "RedBag",
                                    this._redcount++), "" != o) {
                    var n = Le.ObjPool.GetObject(o).addComponent(ve);
                    n.transform.position = new Laya.Vector3(i.x, 0, i.y), n.maxradius = this._maxRadius,
                        n.minradius = De.RandomRange(this._minRadius / 2, this._minRadius) + Le.SceneMgr.ship.maxDistance,
                        n.setInfo({
                            type: e,
                            flag: !0
                        }), this._itemlist.push(n);
                }
            }
        }
        createBox() {
            Laya.timer.clear(this, this._createBox), Laya.timer.once(Math.floor(1e3 * De.RandomRange(this.boxtimearr[0], this.boxtimearr[1])), this, this._createBox);
        }
        _createBox() {
            this.createBox(), this.createItem(2);
        }
        createBox2() {
            Laya.timer.clear(this, this._createBox2), Laya.timer.once(Math.floor(1e3 * De.RandomRange(this.boxtimearr[0], this.boxtimearr[1])), this, this._createBox2);
        }
        _createBox2() {
            this.createItem(3), this.createBox2();
        }
        createWood() {
            Laya.timer.clear(this, this._createWood),
                Laya.timer.once(Math.floor(1e3 * De.RandomRange(this.woodtimearr[0], this.woodtimearr[1])),
                    this, this._createWood);
        }
        _createWood() {
            this.createWood(), this.createItem(1);
        }
        createBottle() {
            Laya.timer.clear(this, this._createBottle), 1 == Le.DataMgr.level ? Laya.timer.once(Math.floor(1e3 * De.RandomRange(this.bottletimearr[0], this.bottletimearr[1])) / 2, this, this._createBottle) : Laya.timer.once(Math.floor(1e3 * De.RandomRange(this.bottletimearr[0], this.bottletimearr[1])), this, this._createBottle);
        }
        _createBottle() {
            this.createBottle(), this.createItem(4);
        }
        createRedbag() {
            Laya.timer.clear(this, this._createRedbag), Laya.timer.once(1e3 * this.redbagtimearr[this._redbagIndex], this, this._createRedbag);
        }
        _createRedbag() {
            this._redbagIndex >= this.redbagtimearr.length - 1 && (this._redbagIndex = 0), this.createRedbag(),
                this.createItem(5);
        }
        releaseItem(e, t) {
            1 == e ? this._woodcount-- : 2 == e ? this._boxcount-- : 3 == e ? this._boxcount-- : 4 == e ? this._bottlecount-- : 5 == e && this._redcount--;
            var i = this._itemlist.indexOf(t);
            -1 != i && this._itemlist.splice(i, 1);
        }
        clearItems() {
            var e = [];
            for (let i = 0; i < this._itemlist.length; i++) {
                var t = this._itemlist[i];
                e.push(t);
            }
            for (let t = 0; t < e.length; t++) e[t].release();
        }
        disableItem() {
            Laya.timer.clear(this, this._createWood), Laya.timer.clear(this, this._createBox2),
                Laya.timer.clear(this, this._createBox), Laya.timer.clear(this, this._createBottle);
            for (let e = 0; e < this._itemlist.length; e++) {
                this._itemlist[e].collider.enabled = !1;
            }
        }
    }
    class we extends le {
        constructor() {
            super(...arguments), this._buildBoard = null, this._buildIcon = null, this.animclips = {},
                this.working = !1, this.isshow = !1, this._shipId = 0, this._time = 0, this._collecttime = 0;
        }
        get point() {
            return this.points[0];
        }
        onAwake() {
            if (super.onAwake(), this.animator = this.gameobject.getComponent(Laya.Animator),
                this.animator) {
                var e = this.animator.getControllerLayer(0);
                this.animclips = e._statesMap;
            }
            this.playAnim(P.ani_obj_idle);
        }
        onUpdate() {
            if (this.checkCollectQuest(), this.item) {
                var e = De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera);
                this.item.pos(e.x, e.y - 140);
            }
        }
        checkCollectQuest() {
            null != Le.SceneMgr.ship && (Le.SceneMgr.isguide || 0 != this.gameobject.active && (this.working || null != this.cominfo && 1 == this.cominfo.Type && this.comtype == j.Collect && (Le.SceneMgr.ship.isSail || (null == this._quest ? (this._time += De.deltaTime(),
                this._time >= this.cominfo.Produce && (this._time = 0, this._quest = new de(Laya.Handler.create(this, this.startCollect), Laya.Handler.create(this, this.collectComplete, [this.cominfo.Value]), null, this.cominfo.BuildingTime / Le.WorldMgr.worldtimescale, this, V.Collection),
                    oe.pushQuestAction(this._quest), this.playAnim(P.ani_obj_play))) : this._quest.isComplete && (this._quest = null)))));
        }
        playAnim(e) {
            this.animator && null != this.animclips[e] && this.animator.play(e, 0, 0);
        }
        startCollect() {
            this.working = !0;
        }
        collectComplete(e) {
            this.working = !1, Le.GameMgr.doubleResBuffTime() > 0 && (e *= 2), e = Le.GameMgr.getCollectResRatioResult(e),
                Le.DataMgr.addMoodCount(e), Le.EventMgr.event(p.UI_UpdateMood, !0), this._quest = null,
                Le.GameMgr.playGetResCountAnimation(e, De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera)),
                this.playAnim(P.ani_obj_idle);
        }
        setActive(e) {
            this.gameobject.active = e, this.playAnim(P.ani_obj_idle), e && (this.working = !1,
                this.isshow = !0, 2 == this.cominfo.Type && (Le.SceneMgr.buffvalue += this.cominfo.Value),
                this.cominfo.Type, null != this._buildBoard && (this._buildBoard.destroy(), this._buildBoard = null),
                this.comtype == j.Swing && (Laya.timer.clear(this, this.createSwingQuest), Laya.timer.once(1e3 * Number(this.cominfo.Produce), this, this.createSwingQuest)));
        }
        createSwingQuest() {
            var e = Laya.Handler.create(this, () => {
                console.log("开始荡秋千"), this.playAnim(P.ani_obj_play);
            }), t = Laya.Handler.create(this, () => {
                console.log("结束荡秋千"), this.playAnim(P.ani_obj_idle), this.item = new se(), this.item.setInfo(0, null),
                    this.item.handle = Laya.Handler.create(this, () => {
                        if (null != this.item) {
                            this.item.destroy(), this.item = null;
                            var e = Number(Le.CfgMgr.getGlobalCfg("SwingGem"));
                            Le.GameMgr.playGetResCountAnimation(e, De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera), !0),
                                Le.DataMgr.addGoldCount(e), Laya.timer.once(1e3 * Number(this.cominfo.Produce), this, this.createSwingQuest),
                                Le.EventMgr.event(p.UI_UpdateGold, !0);
                        }
                    });
            }), i = new de(e, t, null, 5, this, V.Swing);
            oe.pushQuestAction(i);
        }
        createBuildBoard(e, t) {
            var i = "BuildBoard";
            this.working = !0, Le.SceneMgr.isBoard(e.ComponentId) || (this._shipId = e.Id, i = "FinishBox"),
                this._buildBoard = Le.ObjPool.GetObject(i, t), this._buildBoard.transform.position = this.transform.position;
            var o = this._buildBoard.getComponent(Laya.Animator);
            o && (o.enabled = !1);
        }
        showBuildIcon(e) {
            if (e) {
                var t = Le.UIMgr.findUI(i.MainUI);
                t && (this._buildIcon = new Laya.Image("game/game_buildComplete.png"), this._buildIcon.anchorX = .5,
                    this._buildIcon.anchorY = 1, De.doLager(this, this._buildIcon, 400, 1.2), t.selectbtn.addChild(this._buildIcon),
                    this._buildIcon.on(Laya.Event.CLICK, this, this.buildIconClickHandle), Laya.timer.loop(1, this, this.updateBuildIconPositon));
            } else this._buildIcon.destroy(), Laya.timer.clear(this, this.updateBuildIconPositon),
                this.setActive(!0);
        }
        buildIconClickHandle() {
            if (this._buildIcon.visible) {
                this._buildIcon.visible = !1;
                var e = 1e3;
                if (null != this._buildBoard) {
                    var t = this._buildBoard.getComponent(Laya.Animator);
                    if (t) t.enabled = !0, e = 1e3 * t.getDefaultState().clip.duration();
                }
                Le.ObjPool.GetObject("fx_FinishBox", this._buildBoard).transform.localPosition = new Laya.Vector3(0, 0, 0),
                    Laya.timer.once(e, this, () => {
                        this.showBuildIcon(!1), Le.SoundMgr.playBtnClick(), Le.UIMgr.openUI(i.BuildOverUI, {
                            shipId: this._shipId
                        });
                    }), Le.EventMgr.event(p.Game_HideBuildItem);
            }
        }
        updateBuildIconPositon() {
            var e = De.trans3dTo2dPosition(this.transform.position, Le.SceneMgr.camera.camera);
            this._buildIcon.pos(e.x, e.y - 1.5 * this._buildIcon.height, !0);
        }
        destroy() {
            Laya.timer.clearAll(this), null != this._buildIcon && (this._buildIcon.destroy(),
                this._buildIcon = null), null != this.item && (this.item.destroy(), this.item = null),
                this.gameobject.destroy(), this.enabled = !1, super.destroy();
        }
    }
    class _e extends le {
        constructor() {
            super(), this._shipDic = {}, this._shipBoardMap = {}, this._shipItemMap = {}, this._shipMap = {},
                this._shipComList = [], this.wallcomslist = [], this._floatspeed = .1, this.groundfloor = 1,
                this.isSail = !1, this._centerpos = new Laya.Vector3(), this.maxDistance = 0;
        }
        get shipComList() {
            return this._shipComList;
        }
        onAwake() {
            super.onAwake(), super.initProperty();
        }
        initShioComs(e = !1, t = null) {
            var i = new Laya.Vector3(), o = null == t ? Le.CfgMgr.shipsDataArr[Le.SceneMgr.mapinfo.SceneData] : t, n = U.Level == Le.GameMgr.gameMode ? "OBJ_Ship" + Le.SceneMgr.getCurLevelId() : "OBJ_Event_Ship" + Le.DataMgr.eventLevel;
            this.child = Le.ObjPool.GetObject(n, this.gameobject), null == this.child && (this.child = this.gameobject.addChild(new Laya.Sprite3D(n))),
                this.child.transform.localRotationEuler = new Laya.Vector3(0, 180, 0), this.child.transform.localPosition = new Laya.Vector3(0, 0, 0),
                this.animator = this.child.getComponent(Laya.Animator), this.playDiveAnim(!1);
            for (let t = 0; t < o.length; t++) {
                var a = o[t], s = "";
                s = a.isMeshObj ? a.meshName : a.name;
                var r = Le.ObjPool.GetObject(s, this.child);
                if (null != r) {
                    var l = r.addComponent(we);
                    this._shipDic[a.name] = l;
                    var h = new Laya.Vector3(-a.position[0], a.position[1], a.position[2]), d = new Laya.Vector3(a.rotation[0], a.rotation[1], a.rotation[2]), g = new Laya.Vector3(a.scale[0], a.scale[1], a.scale[2]);
                    l.gameobject.name = a.name, l.transform.localPosition = h, l.transform.localRotationEuler = d,
                        l.transform.localScale = g, l.gameobject.active = e, i = De.Add(i, l.transform.position);
                }
            }
            i = De.Divide(i, o.length);
            for (const e in this._shipDic) {
                l = this._shipDic[e];
                var c = De.Distance(i, l.transform.position);
                c >= this.maxDistance && (this.maxDistance = c);
            }
            return Le.DataMgr.sinkCount > 0 && (this.groundfloor = 2, this.child.transform.localPositionY = -1.9),
                De.castShadow(this.child, !0, !0), this._centerpos = i, i;
        }
        playDiveAnim(e) {
            null != this.animator && (e ? (this.animator.speed = 1, this.animator.play("Diving", 0, 0)) : (this.animator.speed = 0,
                this.child.transform.localRotationEuler = new Laya.Vector3(0, 180, 0)));
        }
        playSailAnim(e) {
            for (let i = 0; i < this.shipComList.length; i++) {
                var t = this.shipComList[i];
                t.comtype == j.Sails && t.playAnim(e);
            }
        }
        startfloat() {
            this._floatspeed = .17, this.transform.position = Le.SceneMgr.startPosition.clone(),
                this.transform.lookAt(Le.SceneMgr.endPosition, new Laya.Vector3(0, 1, 0));
        }
        alphaShipWall(e, t, i) {
            if (Le.GameMgr.gameMode != U.Level || 1 != this.groundfloor) if (t) for (let t = 0; t < this.wallcomslist.length; t++) {
                (o = this.wallcomslist[t]).isshow && (o.gameobject.active = !(De.Distance(o.transform.position, e) <= i));
            } else for (let e = 0; e < this.wallcomslist.length; e++) {
                var o;
                (o = this.wallcomslist[e]).isshow && 0 == o.gameobject.active && (o.gameobject.active = !0);
            }
        }
        startSail(e) {
            this.isSail = !0, this.playDiveAnim(!1), this.setSailEffVisable(!0), this.playSailAnim(P.ani_obj_play),
                this.move2endPos(e), Le.SceneMgr.camera.updataDistance(Le.SceneMgr.islandinfo.SailCamDistance);
        }
        move2endPos(e) {
            var t = Le.SceneMgr.endPosition, i = De.Distance(t, Le.SceneMgr.startPosition) / this._floatspeed * 22.5;
            Laya.Tween.to(this.transform, {
                localPositionX: t.x,
                localPositionZ: t.z
            }, i, Laya.Ease.sineInOut, Laya.Handler.create(this, () => {
                this.isSail = !1, this.setSailEffVisable(!1), this.playSailAnim(P.ani_obj_idle),
                    e && e.run();
            }), 0, !1);
        }
        setSailEffVisable(e) {
            if (null == this._speedline && (this._speedline = Le.ObjPool.GetObject("fx_env_speed", this.gameobject),
                this._speedline && (this._speedline.transform.localPosition = new Laya.Vector3(0, 0, 0)),
                this._speedline && (this._speedline.transform.localRotationEuler = new Laya.Vector3(0, 0, 0))),
                null == this.flowingEff) {
                var t = "Flowing" + Le.SceneMgr.getCurLevelId();
                Le.GameMgr.gameMode == U.Active && (t = "Flowing_Event"), this.flowingEff = Le.ObjPool.GetObject(t, this.child);
                var i = this.flowingEff.getChildByName("Lv" + Le.DataMgr.levelStage + t);
                if (null != i) for (let e = 0; e < this.flowingEff.numChildren; e++) {
                    var o = this.flowingEff.getChildAt(e);
                    o.active = i.name == o.name;
                }
                this.flowingEff && (this.flowingEff.transform.localPosition = new Laya.Vector3(0, 0, 0)),
                    this.flowingEff && (this.flowingEff.transform.localRotationEuler = new Laya.Vector3(0, 0, 0));
            }
            this.flowingEff && (this.flowingEff.active = e), this._speedline && (this._speedline.active = e);
        }
        startSink() {
            if (!this.isSail) {
                if (this.groundfloor = 2, null == this.divingEff) {
                    var e = "Diving" + Le.SceneMgr.getCurLevelId();
                    Le.GameMgr.gameMode == U.Active && (e = "Diving_Event"), this.divingEff = Le.ObjPool.GetObject(e, this.child),
                        this.divingEff.transform.localPosition = new Laya.Vector3(0, 0, 0), this.divingEff.transform.localRotationEuler = new Laya.Vector3(0, 0, 0);
                }
                this.divingEff && (this.divingEff.active = !0), this.playDiveAnim(!0), Laya.Tween.to(this.child.transform, {
                    localPositionY: -1.9
                }, 2e3, null, Laya.Handler.create(this, () => {
                    this.playDiveAnim(!1), this.divingEff && (this.divingEff.active = !1);
                }));
            }
        }
        onUpdate() {
            if (!Le.SceneMgr.camera.flag) {
                var e = De.TransformPoint(this.transform, Le.SceneMgr.centrePosition);
                Le.SceneMgr.camera.target.setValue(e.x, e.y, e.z);
            }
        }
        resetMaps() {
            this._shipBoardMap = {}, this._shipItemMap = {}, this._shipMap = {}, this._shipComList = [];
        }
        initPoints(e, t, i, o, n) {
            var a = e.ResName, s = this._shipDic[a];
            if (null != s) {
                for (let e = 0; e < s.gameobject.numChildren; e++) {
                    s.gameobject.getChildAt(e).active = !0;
                }
                s.shipinfo = e, s.cominfo = Le.CfgMgr.getComponentCfg(e.ComponentId), s.floor = t,
                    s.navtype = i, s.points = o, s.comtype = n, n == j.Board ? this.setShipMap(this._shipBoardMap, s) : this.setShipMap(this._shipItemMap, s),
                    this.setShipMap(this._shipMap, s), this._shipComList.push(s), n == j.Wall && this.wallcomslist.push(this._shipDic[a]);
            } else console.warn("无 ##### name =", a);
        }
        setShipMap(e, t) {
            null == e[t.floor] && (e[t.floor] = []);
            for (let o = 0; o < t.points.length; o++) {
                var i = t.points[o];
                null == e[t.floor][i.x] && (e[t.floor][i.x] = []), null == e[t.floor][i.x][i.y] && (e[t.floor][i.x][i.y] = []),
                    e[t.floor][i.x][i.y].push(t);
            }
        }
        showCompoentActive(e, t = !0) {
            this._shipDic && this._shipDic[e] && this._shipDic[e].setActive(t);
        }
        buildComponent(e) {
            this._shipDic && this._shipDic[e.ResName] && this._shipDic[e.ResName].createBuildBoard(e, this.child);
        }
        showBuildIcon(e, t) {
            this._shipDic && this._shipDic[e] && this._shipDic[e].showBuildIcon(t);
        }
        getComponent(e) {
            return this._shipDic[e];
        }
        getShipCubePos(e) {
            if (!this._shipDic || !this._shipDic[e]) {
                return new Laya.Vector3(0, 0, 0);
            }
            return this._shipDic[e].transform.position;
        }
        getCanWalkPoint(e) {
            var t = [], i = this._shipBoardMap[e];
            if (null != i) for (let e = 0; e < i.length; e++) {
                var o = i[e];
                if (null != o) for (let e = 0; e < o.length; e++) {
                    var n = o[e];
                    if (null != n) for (let e = 0; e < n.length; e++) {
                        var a = n[e];
                        a.gameobject.active && t.push(a);
                    }
                }
            }
            return t;
        }
        getComponentByPointXY(e, t, i, o) {
            var n = (o ? this._shipBoardMap : this._shipItemMap)[i];
            if (null != n[e] && null != n[e][t]) {
                var a = n[e][t];
                if (a.length > 0) return a[0];
            }
            return null;
        }
        getComponentListByPointXY(e, t, i) {
            return this._shipMap[i][e][t];
        }
        getComponentByType(e, t) {
            var i = [];
            if (null != t) {
                var o = this._shipItemMap[t];
                for (let t = 0; t < o.length; t++) {
                    if (null != (n = o[t])) for (let t = 0; t < n.length; t++) {
                        if (null != (a = n[t])) for (let t = 0; t < a.length; t++) {
                            (s = a[t]).comtype == e && s.gameobject.active && i.push(s);
                        }
                    }
                }
            } else for (const t in this._shipItemMap) {
                o = this._shipItemMap[t];
                for (let t = 0; t < o.length; t++) {
                    var n;
                    if (null != (n = o[t])) for (let t = 0; t < n.length; t++) {
                        var a;
                        if (null != (a = n[t])) for (let t = 0; t < a.length; t++) {
                            var s;
                            (s = a[t]).comtype == e && s.gameobject.active && i.push(s);
                        }
                    }
                }
            }
            return i.length <= 0 && console.warn("找不到指定类型的组件格子:", e), i;
        }
        getNearComponent(e, t) {
            var i = 0, o = null, n = this._shipBoardMap[t];
            for (let h = 0; h < n.length; h++) {
                var a = n[h];
                if (null != a) for (let n = 0; n < a.length; n++) {
                    var s = a[n];
                    if (null != s) for (let n = 0; n < s.length; n++) {
                        var r = s[n];
                        if (r.gameobject.active && 1 == Le.SceneMgr.checkMapPointType(r.point.x, r.point.y, t)) {
                            var l = De.Distance(e.transform.position, r.transform.position);
                            (null == o || l <= i) && (o = r, i = l);
                        }
                    }
                }
            }
            return o;
        }
        getNearComponentByObj(e, t) {
            if (null != t) return this.getNearComponent(e, t);
            var i = [];
            for (const t in this._shipBoardMap) {
                var o = this.getNearComponent(e, Number(t));
                o && i.push(o);
            }
            var n = 0, a = null;
            for (let t = 0; t < i.length; t++) {
                var s = De.Distance(e.transform.position, i[t].transform.position);
                (null == a || s <= n) && (a = i[t], n = s);
            }
            return a;
        }
        getNearComponentByDistance(e, t) {
            var i = 9999999999, o = null;
            for (let s = 0; s < this._shipComList.length; s++) {
                var n = this._shipComList[s];
                if ((n.gameobject.active || n.working) && n.floor == t && n.comtype == j.Board) {
                    var a = De.Distance(n.transform.position, e.transform.position);
                    a <= i && (i = a, o = n);
                }
            }
            return o;
        }
        getNearWalkPointByCom(e, t) {
            if (null != e && !e.destroyed) {
                var i = t.point, o = [{
                    x: i.x + 1,
                    y: i.y
                }, {
                    x: i.x - 1,
                    y: i.y
                }, {
                    x: i.x,
                    y: i.y + 1
                }, {
                    x: i.x,
                    y: i.y - 1
                }, {
                    x: i.x + 1,
                    y: i.y + 1
                }, {
                    x: i.x - 1,
                    y: i.y + 1
                }, {
                    x: i.x - 1,
                    y: i.y - 1
                }, {
                    x: i.x + 1,
                    y: i.y - 1
                }], n = 99999999, a = null;
                for (let i = 0; i < o.length; i++) {
                    var s = this.getComponentByPointXY(o[i].x, o[i].y, t.floor, !0);
                    if (s && (s.gameobject.active || s.working) && 1 == Le.SceneMgr.checkMapPointType(s.point.x, s.point.y, s.floor)) {
                        var r = De.Distance(s.transform.position, e.transform.position);
                        r <= n && (n = r, a = s);
                    }
                }
                if (null != a) return a;
                console.warn("找不到目标物体附件最近的可行走的地板 目标点:", t);
            }
        }
        findSamePositionBoard(e) {
            var t = null, i = [], o = this._shipDic[e];
            for (const t in this._shipDic) {
                if (this._shipDic.hasOwnProperty(t)) if (e != t) De.Distance(o.transform.position, this._shipDic[t].transform.position) < .8 && i.push(this._shipDic[t]);
            }
            for (let e = 0; e < i.length; e++) if (i[e].gameobject.active) {
                t = i[e];
                break;
            }
            return t;
        }
        buildComponentComplete(e) {
            this._shipDic[e].buildIconClickHandle();
        }
        destroy() {
            for (const e in this._shipDic) this._shipDic.hasOwnProperty(e) && (this._shipDic[e].destroy(),
                this._shipDic[e] = null);
            this._shipDic = null, this._shipMap = null, this._shipItemMap = null, this._shipComList = null,
                this._shipBoardMap = null, this.gameobject.destroy(!0), super.destroy();
        }
    }
    class Ce {
        constructor(e) {
            let t = Le.ResMgr.GetRes(C.SwitchPage);
            this.gameobject = t.create(), this.gameobject.zOrder = 100001, e.addChild(this.gameobject);
        }
        playSwitchAnimation(e, t, i = null) {
            this.doorleft = this.gameobject.getChildByName("doorleft"), this.doorright = this.gameobject.getChildByName("doorright"),
                this.aniicon = this.gameobject.getChildByName("aniicon");
            var o = Laya.stage.width, n = Laya.stage.height;
            this.doorleft.width = o / 2, this.doorright.width = o / 2, this.doorleft.height = n,
                this.doorright.height = n;
            var a = 0, s = 0, r = 0;
            "open" == e ? (this.doorleft.x = 0, this.doorright.x = o / 2, a = -o / 2, s = o,
                r = 0, this.aniicon.scale(1, 1)) : "close" == e && (this.doorleft.x = -o / 2, this.doorright.x = o,
                    a = 0, s = o / 2, r = 1, this.aniicon.scale(0, 0)), Laya.timer.once(t, this, () => {
                        Laya.timer.once(300, this, () => {
                            Laya.Tween.to(this.aniicon, {
                                scaleX: r,
                                scaleY: r
                            }, 500, Laya.Ease.elasticOut, null);
                        }), Laya.Tween.to(this.doorleft, {
                            x: a
                        }, 500, Laya.Ease.circIn, null), Laya.Tween.to(this.doorright, {
                            x: s
                        }, 500, Laya.Ease.circIn, Laya.Handler.create(this, () => {
                            i && i();
                        }));
                    });
        }
        destroy() {
            this.gameobject.destroy(), this.gameobject = null;
        }
    }
    class xe {
        constructor() {
            this.gifticon = null, this.icon = null, this.taskicon = null, this.progress = null,
                this.maskobj = null, this.treeObj = null, this._startEngle = 90, this._endEngle = 0,
                this._totalTime = 0, this._curTime = 0, this._dayMaxCount = 5, this._preCountTime = [],
                this._diamResultCount = 0, this._woodRate = 1.5, this._randomWegith = [], this.wishTime = 0,
                this.canGetGift = !1, this.offsetY = 120, this.createChrismasTree(), this.createBubbleItem(),
                this.init(), this.gifticon && this.icon && (this.gifticon.visible || this.icon.visible) && Laya.timer.frameLoop(1, this, this.update);
        }
        createChrismasTree() {
            var e = De.getCirclePosByAngle(De.random(1, 360), Le.SceneMgr.startPosition.x, Le.SceneMgr.startPosition.z, 3.6 + Le.SceneMgr.ship.maxDistance);
            null != this.treeObj && (e = new Laya.Vector2(this.treeObj.transform.position.x, this.treeObj.transform.position.z),
                this.treeObj.destroy(), this.treeObj = null), this.treeObj = Le.ObjPool.GetObject("Lv" + Le.DataMgr.christmasGiftTreeLevel + "SpringBasin"),
                this.treeObj && (this.treeObj.transform.rotationEuler = Le.SceneMgr.ship.transform.rotationEuler.clone(),
                    this.treeObj.transform.position = new Laya.Vector3(e.x, 0, e.y));
        }
        init() {
            this._dayMaxCount = Number(Le.CfgMgr.getGlobalCfg("ChristmasNumber")), this._preCountTime = Le.CfgMgr.getGlobalCfg("ChristmasTime").split("|");
            var e = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("ChristmasGem"));
            this._diamResultCount = De.random(e[0], e[1]), this._woodRate = Number(Le.CfgMgr.getGlobalCfg("ChristmasRatio")),
                this._randomWegith = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("ChristmasRate"), "|");
            var t = De.getCurrentDate();
            Le.DataMgr.christmasGiftDay != t && (Le.DataMgr.christmasGiftDay = t, Le.DataMgr.christmasGiftCount = 0),
                Le.DataMgr.christmasGiftCount < this._dayMaxCount ? 2 == Le.DataMgr.christmasGiftTreeLevel && this.startWish() : (this.gifticon.visible = !1,
                    this.icon.visible = !1);
        }
        update() {
            if (null != this.treeObj) {
                var e = De.trans3dTo2dPosition(this.treeObj.transform.position, Le.SceneMgr.camera.camera);
                this.icon.pos(e.x, e.y - this.offsetY), this.gifticon.pos(e.x, e.y - this.offsetY);
            } else this.gifticon.visible = !1, this.icon.visible = !1;
        }
        getSeaBoxResult() {
            var e = Le.CfgMgr.getGlobalCfg("SeaBoxResult").split("|")[Le.SceneMgr.getCurLevelId() - 1], t = De.TransferStringToNumberArr(e), i = De.random(t[0], t[1]);
            return i = Le.GameMgr.getBoxResRatioResult(i);
        }
        createBubbleItem() {
            if (null == this.treeObj) return;
            let e = Le.ResMgr.GetRes(C.BubbleItem);
            this.icon = e.create();
            var t = Le.UIMgr.findUI(i.MainUI);
            t.uiview.addChild(this.icon), this.icon.zOrder = 1001, this.icon.anchorX = .5, this.icon.anchorY = .5,
                this.progress = this.icon.getChildByName("progress"), this.taskicon = this.icon.getChildByName("taskicon"),
                this.taskicon.skin = "game/game_sgift.png", this.maskobj = new Laya.Sprite(), this.progress.mask = this.maskobj,
                this.createMaskHandle(!0), this.icon.on(Laya.Event.CLICK, this, this.gameClickHandle),
                this.setBubbleVisible(!1), this.gifticon = new Laya.Image("game/game_build_gift.png"),
                this.gifticon.size(77, 91), this.gifticon.anchorX = .5, this.gifticon.anchorY = .5,
                t.uiview.addChild(this.gifticon), this.gifticon.zOrder = 1001, this.gifticon.on(Laya.Event.CLICK, this, this.gameClickHandle);
        }
        createMaskHandle(e = !1) {
            this._curTime += Laya.timer.delta, this._endEngle = this._startEngle + this._curTime / this._totalTime * 360,
                this.maskobj.graphics.clear(), this.maskobj.graphics.drawPie(this.progress.width / 2, this.progress.height / 2, this.progress.width, this._startEngle, this._endEngle, "0xffffff"),
                this._endEngle >= 450 && (this._startEngle = 90, this._curTime = 0, this.progress.visible = !1,
                    this.setBubbleVisible(!1), Laya.timer.clear(this, this.createMaskHandle), 0 == e && (this.gifticon.visible = !0,
                        this.canGetGift = !0));
        }
        startWork(e) {
            this.progress.visible = !0, this.maskobj.visible = !0, this._startEngle = 90, this._curTime = 0,
                this._totalTime = 1e3 * e, Laya.timer.clear(this, this.createMaskHandle), Laya.timer.loop(1, this, this.createMaskHandle);
        }
        setBubbleVisible(e) {
            this.icon.visible = e, e || this.icon.pos(1e4, 0);
        }
        startWish() {
            this.offsetY = 160;
            var e = Number(this._preCountTime[Le.DataMgr.christmasGiftCount]);
            this.wishTime = De.getCurrentTime() + 1e3 * e, this.canGetGift = !1, this.gifticon.visible = !1,
                this.setBubbleVisible(!0), Le.DataMgr.christmasGiftResultType = De.RandomByWeight(this._randomWegith),
                0 == Le.DataMgr.christmasGiftResultType ? Le.DataMgr.christmasGiftResultCount = this._diamResultCount : 1 == Le.DataMgr.christmasGiftResultType ? Le.DataMgr.christmasGiftResultCount = this.getSeaBoxResult() : 2 == Le.DataMgr.christmasGiftResultType && (Le.DataMgr.christmasGiftResultCount = 60),
                this.startWork(e);
        }
        levelUp() {
            Le.DataMgr.christmasGiftTreeLevel++, this.createChrismasTree(), this.startWish();
        }
        getWishGift() {
            this.canGetGift = !1, 0 == Le.DataMgr.christmasGiftResultType ? (Le.DataMgr.addGoldCount(Le.DataMgr.christmasGiftResultCount),
                Le.UIMgr.showTips("Diamonds +" + Le.DataMgr.christmasGiftResultCount)) : 1 == Le.DataMgr.christmasGiftResultType ? (Le.DataMgr.addMoodCount(Le.DataMgr.christmasGiftResultCount),
                    Le.UIMgr.showTips("Wood +" + Le.DataMgr.christmasGiftResultCount)) : 2 == Le.DataMgr.christmasGiftResultType && (Le.GameMgr.speedtimestart = De.getCurrentTime(),
                        Le.WorldMgr.worldtimescale = 2, Le.UIMgr.showTips("Obtain 60 seconds construction acceleration")), Le.DataMgr.christmasGiftCount++,
                Le.DataMgr.christmasGiftCount < this._dayMaxCount ? this.startWish() : (this.icon.visible = !1,
                    this.gifticon.visible = !0);
        }
        gameClickHandle() {
            Le.DataMgr.christmasGiftCount >= this._dayMaxCount ? Le.UIMgr.showTips("Please come back tomorrow!") : 1 == Le.DataMgr.christmasGiftTreeLevel ?
                Le.UIMgr.openUI(i.ChristmasWishUI) : Le.UIMgr.openUI(i.ChristmasGiftUI);
        }
        release() {
            Laya.timer.clearAll(this), this.icon.destroy(), this.gifticon.destroy(), this.treeObj.destroy();
        }
    }
    class Me {
        constructor() {
            this.endPosition = new Laya.Vector3(0, 0, 0), this.startPosition = new Laya.Vector3(0, 0, 0),
                this.centrePosition = new Laya.Vector3(0, 0, 0), this.islandCenterPos = new Laya.Vector3(0, 0, 0),
                this.oarsCount = 0, this.rowingCount = 0, this.rowingMariners = [], this.buffvalue = 0,
                this._ambientColor = new Laya.Vector3(), this.boatmanlist = [], this.animallist = [],
                this.complete = !1, this.isguide = !1, this._shipState = H.Building, this._shipmap = {},
                this._astarmgr = new ne(), this._shipInfo = {}, this._relyIdArr = null, this._withIdArr = [],
                this._preRelyIdArr = [], this._sailIdArr = {}, this._sinkIdArr = null, this._curSailIndex = 0,
                this._maxLevelStage = 0, this._maxFloor = 0, this._guideCubeArr = [], this._boardInfo = null,
                this._buildInfoArr = [], this._ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0)),
                this._outHitResult = new Laya.HitResult(), this._unlockCountArr = [0, 0, 0, 0],
                this._floorBoardCountArr = [0, 0, 0, 0], this._buildIdArr = [], this._sailcallback = null,
                this.useGold = 0, this._buildPro = 0, this.staticcombinlist = [], this.buildcount = 0,
                this.switchSceneFlag = !1, this.islandObj = [];
        }
        get relyIdArr() {
            return this._relyIdArr;
        }
        get curSailIndex() {
            return this._curSailIndex;
        }
        get floorBoardCountArr() {
            return this._floorBoardCountArr;
        }
        get unlockCountArr() {
            return this._unlockCountArr;
        }
        get ship() {
            return this._ship;
        }
        get buildInfoArr() {
            return this._buildInfoArr;
        }
        get boardInfo() {
            return this._boardInfo;
        }
        get shipmap() {
            return this._shipmap;
        }
        get shipInfo() {
            return this._shipInfo;
        }
        get shipState() {
            return this._shipState;
        }
        set shipState(e) {
            this._shipState = e;
        }
        get buildPro() {
            return this._buildPro;
        }
        get maxLevelStage() {
            return this._maxLevelStage;
        }
        get maxFloor() {
            return this._maxFloor;
        }
        AddToScene(e) {
            return this.scene.addChild(e);
        }
        loadScene(e = null, t = null) {
            this.staticcombinlist = [], Le.GameMgr.gameMode == U.Level ? this.mapinfo = Le.CfgMgr.getMapCfg(this.getCurLevelId()) : (Le.GameMgr.gameMode = U.Active) && (this.mapinfo = Le.CfgMgr.getEventMapCfg(Le.DataMgr.eventLevel)),
                Laya.Scene3D.load(this.mapinfo.SceneRes, Laya.Handler.create(this, i => {
                    this.init(e, i, t);
                }));
        }
        init(e, t, i) {
            this.scene && this.scene.destroy(!0), this.scene = Laya.stage.addChild(t), this.scene.enableFog = !0,
                this.camera = this.scene.getChildByName("MainCamera").addComponent(pe),
                //  this.light = this.scene.getChildByName("Directional Light").addComponent(me),
                this.sea = this.scene.getChildByName("Sea").addComponent(Ie),
                this.initLight(),
                e && e(), this.initGame(), i && i();
        }
        initIsland() {
            var e = Le.DataMgr.levelStage + 1, t = this.getCurLevelId();
            Le.GameMgr.gameMode == U.Active && (t = Le.DataMgr.eventLevel, e = Le.DataMgr.eventLevelStage),
                e > this.maxLevelStage && (e = 1, t++);
            for (let e = 0; e < this.islandObj.length; e++) this.islandObj[e].destroy(!0);
            this.islandObj = [];
            var i = Le.CfgMgr.getMapCfg(t);
            if (i) {
                var o = Le.CfgMgr.getIslandCfg(De.TransferStringToNumberArr(i.Islands)[e - 1]);
                if (o) {
                    var n = De.TransferStringToNumberArr(o.Unlock), a = o.IslandPlayer.toString().split("|");
                    for (let e = 0; e < n.length; e++) {
                        var s = n[e], r = De.TransferStringToNumberArr(a[e]), l = Le.CfgMgr.getBoatmanCfg(s);
                        if (l && 3 == r.length) {
                            var h = Le.SceneMgr.AddToScene(new Laya.Sprite3D()), d = Le.ObjPool.GetObject(l.RoleUrl, h);
                            d.transform.localPosition = new Laya.Vector3(0, 0, 0), d.transform.localRotationEuler = new Laya.Vector3(0, 180, 0),
                                h.transform.position = new Laya.Vector3(-r[0], r[1], r[2]), h.transform.lookAt(this.startPosition, new Laya.Vector3(0, 1, 0));
                            var g = d.getComponent(Laya.Animator);
                            g && (1 == l.Type ? (d.getChildByName("root").getChildByName("spine").getChildByName("Larm").getChildByName("Lhand").getChildByName("weaponL").getChildByName("Hammer").active = !1,
                                d.getChildByName("root").getChildByName("spine").getChildByName("Larm").getChildByName("Lhand").getChildByName("weaponL").getChildByName("Oars_animate_R").active = !1,
                                d.getChildByName("root").getChildByName("spine").getChildByName("Rarm").getChildByName("Rhand").getChildByName("weaponR").getChildByName("Oars_animate_L").active = !1,
                                g.play(P.happy_dance, 0, 0)) : 2 == l.Type ? g.play(P.happy, 0, 0) : 3 == l.Type && g.play(P.happy, 0, 0)),
                                this.islandObj.push(h);
                        }
                    }
                }
            }
        }
        initLight() {
            // this.lightscene = new Laya.Scene3D(), Laya.stage.addChild(this.lightscene), this.lightcamera = this.lightscene.addChild(new Laya.Camera()),
            //     this.lightcamera.fieldOfView = 60, this.lightcamera.clearFlag = Laya.CameraClearFlags.DepthOnly,
            //     this.lightcamera.transform.localRotationEulerY = 180, this.lightcamera.transform.localPositionX = 1.75,
            //     this.sunlight = Le.ObjPool.GetObject("SunLight", this.lightscene), this.sunlight.getChildAt(0).particleSystem.play(),
            //     this.sunlight.active = !1;
        }
        initGame() {
            if (null != this.christmastree && (this.christmastree.release(), this.christmastree = null),
                this.buffvalue = 0, -1 == Le.DataMgr.moodCount) {
                var o = Le.CfgMgr.getGlobalCfg("StartWood").split("|");
                Le.DataMgr.moodCount = Number(o[this.getCurLevelId() - 1]), Le.EventMgr.event(p.UI_UpdateMood, !1);
            }
            this.complete = !1, this.camera.flag = !1;
            var n = Le.GameMgr.gameMode == U.Level ? Le.DataMgr.levelStage : Le.DataMgr.eventLevelStage, a = Le.GameMgr.gameMode == U.Level ? this.getCurLevelId() : Le.DataMgr.eventLevel;
            this.islandinfo = Le.CfgMgr.getIslandCfg(De.TransferStringToNumberArr(this.mapinfo.Islands)[n - 1]);
            var s = De.TransferStringToNumberArr(this.islandinfo.Unlock);
            for (let e = 0; e < s.length; e++) s[e] > 0 && 3 != s[e] && (Le.DataMgr.getunlockBoatmanDic(s[e]) || Le.UIMgr.openUI(i.UnlockSkinUI, {
                Id: s[e],
                sign: !0
            }));
            s = De.TransferStringToNumberArr(this.islandinfo.StartPosition), this.startPosition.setValue(-s[0], 0, s[1]),
                s = De.TransferStringToNumberArr(this.islandinfo.EndPosition), this.endPosition.setValue(-s[0], 0, s[1]),
                s = De.TransferStringToNumberArr(this.islandinfo.ShipCentrePos), this.centrePosition.setValue(s[0], s[1], s[2]),
                s = De.TransferStringToNumberArr(this.islandinfo.IslandCentrePos), this.islandCenterPos.setValue(-s[0], s[1], s[2]),
                this.camera.defaultProperty(), this._shipState = H.Building, this.playBgMusic(a)
            if (null == this._ship) {
                var l = Le.SceneMgr.AddToScene(new Laya.Sprite3D("ship"));
                this._ship = l.addComponent(_e), this._ship.initShioComs();
            }
            this._ship.startfloat(), null == this._boardInfo && (this._boardInfo = new ie()),
                this._boardInfo.unlockCount = 0, this.updateShipInfo();
            for (let e = 1; e <= this._shipInfo.length; e++) {
                if (!this._shipInfo[e].active && this._shipInfo[e].Sailing <= this._curSailIndex) {
                    if (this._shipInfo[e].Type == D.Free) {
                        this._buildPro += this._shipInfo[e].Progress,
                            this._shipInfo[e].active = !0, this._ship.showCompoentActive(this._shipInfo[e].ResName),
                            this.isBoard(this._shipInfo[e].ComponentId) && (this._relyIdArr = De.TransferStringToNumberArr(this._shipInfo[e].RelyId)),
                            this._boardInfo.lockBoardCount++;
                    } else if (this._shipInfo[e].Type == D.Transparent) {
                        this._shipInfo[e].active = !0,
                            this._ship.showCompoentActive(this._shipInfo[e].ResName);
                    } else {
                        if (-1 == this._withIdArr.indexOf(this._shipInfo[e].Id)) {
                            var h = this._shipInfo[e].ComponentId;
                            if (this.isBoard(h)) {
                                this._boardInfo.shipCubeId = -1,
                                    this._boardInfo.componentId = h,
                                    this._boardInfo.lockBoardCount++;
                            } else {
                                var d = new ie();
                                d.shipCubeId = this._shipInfo[e].Id,
                                    d.componentId = h,
                                    d.floor = this._shipInfo[e].Floor,
                                    this._buildInfoArr.push(d);
                            }
                        }
                        this._shipInfo[e].active = !1;
                    }
                    if (this._shipInfo[e].Type == D.Free || this.isBoard(this._shipInfo[e].ComponentId)) {
                        this._floorBoardCountArr[this._shipInfo[e].Floor - 1]++;
                        for (let t = this._shipInfo[e].Floor; t < this._floorBoardCountArr.length; t++) this._floorBoardCountArr[t]++;
                    }
                }
            }
            for (let e = 1; e <= this._shipInfo.length; e++) if (this._shipInfo[e].Type == D.Unlock && !this.isBoard(this._shipInfo[e].ComponentId)) {
                var g = 0;
                g = this.getUnlockBoardCount(g, this._shipInfo[e].Id);
                for (let t = 0; t < this._buildInfoArr.length; t++) if (this._shipInfo[e].Id == this._buildInfoArr[t].shipCubeId) {
                    this._buildInfoArr[t].lockBoardCount = g;
                    break;
                }
            }
            this._buildInfoArr.sort((e, t) => e.lockBoardCount - t.lockBoardCount), this.quickCreateShip(),
                this.setBoardRelyId(), this.calUnlockItemCount(), Le.EventMgr.event(p.UI_UpdateTask),
                Le.EventMgr.event(p.UI_UpdateShipStar), this.initMariner(), this.isShipToNextPosition(),
                this.isguide || this.createBuildGuide(), De.castShadow(this.ship.gameobject, !0, !0);
            for (const e in this.shipmap) this.resetAstarMap(Number(e));
            var c = this.scene.getChildAt(2);
            for (let e = 0; e < c.numChildren; e++) {
                var m = c.getChildAt(e);
                m && (m.active = !0, 1 == Le.DataMgr.getunlockBoatmanDic(Number(m.name)) && (m.active = !1));
            }
            this.sea.createWood(), this.sea.createBox(), this.sea.createBox2(),
                this.sea.createBottle(),
                this.camera.updataDistance(), this.initIsland(), Le.EventMgr.event(p.UI_UpdateDot);
        }
        createActiveEntrance() {
            if (1 == Le.CfgMgr.getGlobalCfg("NewYearSwitch")) {
                var e = this.getNewYearEntrancePosition(), t = this._ship.child.addChild(new Laya.Sprite3D("player"));
                Le.ObjPool.GetObject("animals_spr", t).relyId = -3, this._ship.gameobject.addChild(t),
                    t.transform.rotationEuler = this.ship.transform.rotationEuler.clone(), t.transform.position = new Laya.Vector3(e.x, 0, e.y),
                    t.transform.localRotationEulerY += 180;
            }
        }
        getNewYearEntrancePosition() {
            var e = null, t = De.getCirclePosByAngle(De.random(1, 360), this.ship.transform.position.x, this.ship.transform.position.z, 2 + this.getCurLevelId());
            if (Le.DataMgr.getunlockBoatmanDic(23)) for (let i = 0; i < this.animallist.length; i++) if ("LittleShip" == this.animallist[i].name) {
                De.Distance(new Laya.Vector3(t.x, 0, t.y), this.animallist[i].transform.position) < 2 && (e = this.getNewYearEntrancePosition());
                break;
            }
            return null == e && (e = new Laya.Vector3(t.x, 0, t.y)), e;
        }
        switchSceneByMode() {
            this.switchSceneFlag = !0, Le.GameMgr.gameMode == U.Level ? Le.GameMgr.gameMode = U.Active : Le.GameMgr.gameMode == U.Active && (Le.GameMgr.gameMode = U.Level);
            for (let e = 0; e < this.rowingMariners.length; e++) this.rowingMariners[e].stopRowing();
            this.rowingMariners = [];
            for (let e = 0; e < this.boatmanlist.length; e++) this.boatmanlist[e].release();
            this.boatmanlist = [], this.seaturtle && (this.seaturtle.destroy(), this.seaturtle = null),
                Le.GameMgr.curBuildSelectIndex = 0, oe.clearQuest(), Le.EventMgr.event(p.UI_UpdateMood),
                Le.EventMgr.event(p.UI_UpdateMoodIcon), this.resetShipData();
            var e = new Ce(Laya.stage);
            e.playSwitchAnimation("close", 0, () => {
                this.loadScene(() => {
                    e.playSwitchAnimation("open", 1e3, () => {
                        e.destroy();
                    }), this.switchSceneFlag = !1;
                });
            });
        }
        add2StaticList(e, t = !0) {
            if (null != e.meshFilter && -1 == this.staticcombinlist.indexOf(e) && this.staticcombinlist.push(e),
                e.numChildren > 0) for (let t = 0; t < e.numChildren; t++) {
                    var i = e.getChildAt(t);
                    this.add2StaticList(i, !1);
                }
            t && Laya.StaticBatchManager.combine(this.ship.child, this.staticcombinlist);
        }
        playBgMusic(e) {
            Le.GameMgr.gameMode == U.Level ? e <= 2 ? Le.SoundMgr.playBGM(ee.Main) : 3 == e ? Le.SoundMgr.playBGM(ee.Main2) : e <= Le.CfgMgr.getGlobalCfg("TotalLevel") && Le.SoundMgr.playBGM(ee.Main3) : Le.GameMgr.gameMode == U.Active && Le.SoundMgr.playBGM(ee.Newyear);
        }
        initMariner() {
            for (let e = 0; e < this.animallist.length; e++) this.animallist[e].destroy(!0);
            this.animallist = [], oe.clearQuest();
            var e = this.ship.getCanWalkPoint(this.ship.groundfloor);
            if (this.isguide = Le.GameMgr.isNewPlayerGuest(), this.isguide) {
                De.SendEvent("进入新手关卡数量"), De.SendLevelEvent("进入新手关卡");
                var t = this.creatBoatman(Le.CfgMgr.getBoatmanCfg(3), e[0]);
                t.isswiming = !0, t.transform.localPosition = new Laya.Vector3(0, -.45, 4.4), t.transform.localRotationEulerY = De.random(0, 360),
                    t.showGuestHand();
                var i = Le.ObjPool.GetObject("Plank").addComponent(ve);
                i.transform.position = new Laya.Vector3(0, 0, 0), i.transform.localPosition = new Laya.Vector3(-1, 0, 4.4),
                    i.maxradius = 0, i.minradius = 0, i.type = 1, i.flag = !1, this.guidewood = i, this.guidewood.collider.enabled = !1,
                    this.guidewood.gameobject.active = !1;
            } else {
                for (var o in this.boatmanlist = [], Le.DataMgr.unlockBoatmanDic) if (1 == Le.DataMgr.unlockBoatmanDic[o]) {
                    var n = Le.CfgMgr.getBoatmanCfg(o);
                    null != n && this.creatBoatman(n, e[De.random(0, e.length - 1)]);
                }
                1 == Number(Le.CfgMgr.getGlobalCfg("ChristmasStartSwitch")) && Le.DataMgr.level > 1 && (this.christmastree = new xe());
            }
            Laya.timer.once(12e4, this, this.createdWaterPlayer, [], !1);
        }
        creatBoatman(e, t = null) {
            if (1 == Number(e.PlayerOnline)) {
                var i = this._ship.child.addChild(new Laya.Sprite3D("player")), o = De.TransferStringToNumberArr(e.FeatureBuff);
                this.buffvalue += Number(o[this.getCurLevelId() - 1]), Le.ObjPool.GetObject(e.RoleUrl, i);
                var n = null;
                if (1 == e.Type) n = i.addComponent(fe); else if (2 == e.Type) (n = i.addComponent(ge)).produce = e.FeatureProduce,
                    n.startReward(); else if (3 == e.Type) {
                        var a = De.getCirclePosByAngle(De.random(1, 360), this.ship.transform.position.x, this.ship.transform.position.z, De.RandomRange(2, 6) + this.ship.maxDistance), s = i.getChildAt(0).getComponent(Laya.Animator);
                        s && 23 != e.Id && s.play("swing", 0, 0), this.seaturtle = i, this._ship.gameobject.addChild(i),
                            i.transform.rotationEuler = this.ship.transform.rotationEuler.clone(), i.transform.position = new Laya.Vector3(a.x, 0, a.y),
                            i.transform.localRotationEulerY += 180, this.animallist.push(i);
                    } else 4 == e.Type && (n = i.addComponent(ye));
                if (n) {
                    if (null == t) {
                        var r = this.ship.getCanWalkPoint(this.ship.groundfloor);
                        t = r[De.random(0, r.length - 1)];
                    }
                    n.type = e.Type, n.uid = e.Id, n.point.setPosition(t.point.x, t.point.y), n.floor = t.floor,
                        n.transform.localPosition = t.transform.localPosition.clone(), this.boatmanlist.push(n);
                }
                return n;
            }
        }
        createdWaterPlayer() {
            if (!(1 == Le.DataMgr.savedplayer || Le.DataMgr.level > 2 || this.seamariner || this.ship.isSail || this.complete)) if (this.isguide) Laya.timer.once(6e4, this, this.createdWaterPlayer, [], !1); else {
                var e = this._ship.child.addChild(new Laya.Sprite3D("player")), t = Le.CfgMgr.getGlobalCfg("SavePlayerID"), i = Le.CfgMgr.getBoatmanCfg(t);
                Le.ObjPool.GetObject(i.RoleUrl, e);
                var o = e.addComponent(fe), n = De.getCirclePosByAngle(De.random(1, 360), this.ship.transform.position.x, this.ship.transform.position.z, 6 + Le.SceneMgr.ship.maxDistance);
                o.type = 1, o.uid = 1, o.transform.position = new Laya.Vector3(n.x, 0, n.y), o.isswiming = !0,
                    o.playAnim(P.swim_help), o.saved = !1, o.transform.localPositionY = -.5, this.seamariner = o;
                var a = o.gameobject.addChild(new Laya.Sprite3D("ClickBox")), s = a.addComponent(Laya.PhysicsCollider);
                s.colliderShape = new Laya.BoxColliderShape(1, 1, 1), s.owner.relyId = -2, o.clickbox = a;
            }
        }
        clickSeaPlayer() {
            if (this.seamariner && !this.seamariner.saved) {
                this.seamariner.saved = !0;
                var e = new de(null, null, null, 0, null, V.Save);
                e.targetMariner = this.seamariner, oe.pushQuestAction(e);
            }
        }
        updateShipInfo() {
            if (Le.GameMgr.gameMode == U.Level) {
                var e = this.getCurLevelId(Le.DataMgr.level);
                this._shipInfo = Le.CfgMgr.getLevelShipCfg(e);
            } else Le.GameMgr.gameMode == U.Active && (this._shipInfo = Le.CfgMgr.getEventLevelShipCfg(Le.DataMgr.eventLevel));
            this._buildPro = 0, this._withIdArr.length = 0;
            var t = {};
            this._shipmap = {}, this._ship.resetMaps();
            for (let e = 1; e <= this._shipInfo.length; e++) {
                null == t[c = this._shipInfo[e].MapFloor] && (t[c] = {
                    x: 0,
                    y: 0,
                    floor: c
                });
                var i = this._shipInfo[e].MapType, o = this._shipInfo[e].ComType, n = this._shipInfo[e].NavMapIndex.split("|"), a = new Array();
                for (let e = 0; e < n.length; e++) {
                    var s = De.TransferStringToNumberArr(n[e]);
                    null == this._shipmap[c] && (this._shipmap[c] = []), null == this._shipmap[c][s[0]] && (this._shipmap[c][s[0]] = []),
                        this._shipmap[c][s[0]][s[1]] = 0, s[0] >= t[c].x && (t[c].x = s[0]), s[1] >= t[c].y && (t[c].y = s[1]);
                    var r = new ae(s[0], s[1]);
                    a.push(r);
                }
                if (this._ship.initPoints(this._shipInfo[e], c, i, a, o), this._shipInfo[e].WithId && 0 != this._shipInfo[e].WithId) {
                    var l = De.TransferStringToNumberArr(this._shipInfo[e].WithId);
                    for (let e = 0; e < l.length; e++) this._withIdArr.push(l[e]);
                }
                if (this._shipInfo[e].Type == D.Unlock && (null == this._sailIdArr[this._shipInfo[e].Sailing] && (this._sailIdArr[this._shipInfo[e].Sailing] = []),
                    this._sailIdArr[this._shipInfo[e].Sailing].push(this._shipInfo[e].Id), Le.GameMgr.gameMode == U.Level && (this._maxLevelStage = Math.max(this._maxLevelStage, this._shipInfo[e].Stage),
                        this._maxFloor = Math.max(this._maxFloor, this._shipInfo[e].Floor)), Le.DataMgr.sinkCount <= 0 && this._shipInfo[e].Sink > 0 && (null == this._sinkIdArr && (this._sinkIdArr = []),
                            this._sinkIdArr.push(this._shipInfo[e].Id))), 0 == this._curSailIndex) {
                    var h = Le.GameMgr.gameMode == U.Level ? Le.DataMgr.levelStage : Le.DataMgr.eventLevelStage;
                    this._shipInfo[e].Stage == h && (this._curSailIndex = this._shipInfo[e].Sailing);
                }
                var d = this._shipInfo[e].PreRelyId;
                d > 0 && -1 == this._preRelyIdArr.indexOf(d) && this._preRelyIdArr.push(d);
            }
            for (const e in t) {
                var g = t[e], c = g.floor;
                if (null == this._shipmap[c]) {
                    console.warn("船 导航地图层初始化有问题", c);
                    break;
                }
                for (let e = 0; e < g.x + 1; e++) for (let t = 0; t < g.y + 1; t++) null == this._shipmap[c][e][t] && (this._shipmap[c][e][t] = 0);
            }
        }
        getUnlockBoardCount(e, t) {
            for (let i = 1; i <= this._shipInfo.length; i++) {
                if (-1 != De.TransferStringToNumberArr(this._shipInfo[i].RelyId).indexOf(t)) {
                    (this.isBoard(this._shipInfo[i].ComponentId) || this._shipInfo[i].Type == D.Free) && e++,
                        e = this.getUnlockBoardCount(e, this._shipInfo[i].Id);
                    break;
                }
            }
            return e;
        }
        createBuildGuide() {
            this.hideallBuildGuide();
            for (let o = 0; o < this._relyIdArr.length; o++) {
                var e = this._shipInfo[this._relyIdArr[o]].PreRelyId;
                if ((e <= 0 || e > 0 && -1 == this._preRelyIdArr.indexOf(e)) && this._shipInfo[this._relyIdArr[o]].Sailing <= this._curSailIndex) {
                    var t = this._guideCubeArr[o];
                    null == t && (t = new ce(this._ship.child), this._guideCubeArr.push(t));
                    var i = this.getSpecialComponentBuildInfo(this._relyIdArr[o]);
                    null != i && i.state != G.Idle || (t.setRelyId(this._relyIdArr[o]),
                        t.setPosition(this._ship.getShipCubePos(this._shipInfo[this._relyIdArr[o]].ResName)),
                        t.setActive(!0));
                }
            }
        }
        hideallBuildGuide() {
            for (let e = 0; e < this._guideCubeArr.length; e++) this._guideCubeArr[e].setActive(!1),
                this._guideCubeArr[e].showSelectBox(!1);
        }
        getBuildGuideByRelyId(e) {
            for (let t = 0; t < this._guideCubeArr.length; t++) if (e == this._guideCubeArr[t].RelyId) return this._guideCubeArr[t];
            return null;
        }
        getRelyId(e) {
            var t = {
                relyId: 0,
                object: null
            }, i = 0;
            return e.setValue(e.x * Laya.stage.clientScaleX, e.y * Laya.stage.clientScaleY),
                this.camera.camera.viewportPointToRay(e, this._ray),
                this.scene.physicsSimulation.rayCast(this._ray, this._outHitResult),
                this._outHitResult.succeeded && (i = this._outHitResult.collider.owner.relyId, t.relyId = i,
                    console.log(this._outHitResult),
                    null == i && (t.relyId = -1), t.object = this._outHitResult.collider.owner), t;
        }
        buildComponent(o) {
            var n = Le.CfgMgr.getComponentCfg(this._shipInfo[o].ComponentId), a = 0;
            Le.GameMgr.gameMode == U.Active ? a = Le.DataMgr.eventMoodCount : Le.GameMgr.gameMode == U.Level && (a = Le.GameMgr.getMoodCount())
            if (a < n.ResNumber) {
                return Le.UIMgr.showTips("Wood Are Not Enough!"), void (t.Platform == e.TouTAd && Le.UIMgr.openUI(i.MoreResUI));
            }
            Le.DataMgr.addMoodCount(-n.ResNumber), Le.EventMgr.event(p.UI_UpdateMood)
                , this._ship.buildComponent(this._shipInfo[o])
                , this.updateComponentUnlockCount(o)
            if (this.isBoard(n.Id)) {
                this.updateRelyList(o),
                    this.setBoardRelyId(), this.calUnlockItemCount(), this.createBuildGuide(),
                    console.log("########## 创建id =", o, "######## 依赖 rely =", this._relyIdArr);
            } else {
                this.getSpecialComponentBuildInfo(o).state = G.WaitBuild;
                var s = this.getBuildGuideByRelyId(o);
                s && (s.setActive(!1), s.showSelectBox(!1), s.handicon && (s.handicon.img.visible = !1));
            }
            var r = this._ship.getComponent(this._shipInfo[o].ResName), l = n.BuildingTime / Le.WorldMgr.worldtimescale, h = new de(Laya.Handler.create(this, this.startBuildShip, [o]), Laya.Handler.create(this, this.endBuildShip, [o]), null, l, r, V.Building);
            oe.pushQuestAction(h);
        }
        removePrerelyId(e) {
            for (let i = 0; i < this._preRelyIdArr.length; i++) {
                var t = this._preRelyIdArr.indexOf(e);
                -1 != t && this._preRelyIdArr.splice(t, 1);
            }
        }
        startBuildShip(e) {
            var t = this.getSpecialComponentBuildInfo(e);
            t && (t.state = G.Building, t.lockBoardCount = 0, Le.EventMgr.event(p.UI_UpdateBuildItem),
                this._buildIdArr.push({
                    id: e,
                    buildTime: 0
                }), this._buildIdArr.length <= 1 && Laya.timer.loop(1, this, this.buildUpdateHandle));
        }
        buildUpdateHandle() {
            if (this._buildIdArr.length > 0) for (let e = 0; e < this._buildIdArr.length; e++) this._buildIdArr[e].buildTime += Laya.timer.delta,
                Le.EventMgr.event(p.UI_UpdateBuildItemProgress, {
                    id: this._buildIdArr[e].id,
                    time: this._buildIdArr[e].buildTime
                }); else Laya.timer.clear(this, this.buildUpdateHandle);
        }
        endBuildShip(e) {
            this._shipInfo[e].active = !0, this.removePrerelyId(e);
            var t = this.getSpecialComponentBuildInfo(e);
            t ? (t.state = G.BuildOver, Le.EventMgr.event(p.UI_UpdateBuildItem), this._ship.showBuildIcon(this._shipInfo[e].ResName, !0)) : (this._ship.showCompoentActive(this._shipInfo[e].ResName),
                this.buildShipSail(e)), this.markEvent(e), Le.GameMgr.gameMode == U.Active ? Le.DataMgr.setUnlockEventCompoentDic(e, !0) : Le.GameMgr.gameMode == U.Level && Le.DataMgr.setUnlockCompoentDic(e, !0);
            var i = this._ship.getComponent(this._shipInfo[e].ResName);
            this.resetAstarMap(i.floor), this.camera.updataDistance();
            for (let t = 0; t < this._buildIdArr.length; t++) e == this._buildIdArr[t].id && this._buildIdArr.splice(t, 1);
        }
        markEvent(e) {
            1 == Le.DataMgr.level ? 10 == e ? De.SendLevelEvent("建造8块木板") : 16 == e ? De.SendLevelEvent("建造14块木板") : 18 == e ? De.SendLevelEvent("建造16块木板") : 20 == e && De.SendLevelEvent("建造完成第一艘船") : 2 == Le.DataMgr.level ? 29 == e ? De.SendLevelEvent("建造29块木板") : 62 == e ? De.SendLevelEvent("第二层建造完成") : 72 == e && De.SendLevelEvent("第三层建造完成") : 3 == Le.DataMgr.level ? 275 == e && De.SendLevelEvent("第三关建造完成") : 4 == Le.DataMgr.level ? 295 == e && De.SendLevelEvent("第四关建造完成") : 5 == Le.DataMgr.level && 192 == e && De.SendLevelEvent("第五关建造完成");
        }
        quickCreateShip() {
            var e = Le.GameMgr.getComponentDicByMode();
            for (let i = 1; i <= this._shipInfo.length; i++) if (e[i]) {
                var t = De.TransferStringToNumberArr(this._shipInfo[i].RelyId);
                for (let e = 0; e < t.length; e++) t[e] > 0 && -1 == this._relyIdArr.indexOf(t[e]) && this._relyIdArr.push(t[e]);
            }
            for (let t = 1; t <= this._shipInfo.length; t++) {
                var i = this._shipInfo[t].Id;
                if (this._shipInfo[t].Type == D.Free && this._boardInfo.unlockCount++, e[i]) {
                    var o = this.getSpecialComponentBuildInfo(i);
                    o ? (o.state = G.Finish, o.unlockCount++, o.lockBoardCount = 9999) : this._boardInfo.unlockCount++,
                        this._ship.showCompoentActive(this._shipInfo[i].ResName), this._shipInfo[i].active = !0,
                        this.removePrerelyId(i), this.showWithShipCube(i), this.hideSpecialBoard(i), this.removeSailId(i),
                        this.removeSinkId(i), this._shipInfo[i].Sailing == this._curSailIndex && (this._buildPro += this._shipInfo[i].Progress,
                            Le.EventMgr.event(p.UI_UpdateTask, {
                                shipId: i
                            })), this.removeRelyListId(i);
                }
            }
            this.setBoardRelyId(), this.calUnlockItemCount(), this.isShipToNextPosition(), this.isSink();
        }
        buildShipSail(e) {
            this.isBoard(this._shipInfo[e].ComponentId) || (this.updateRelyList(e), this.setBoardRelyId(),
                this.calUnlockItemCount(), this.createBuildGuide(), this.showWithShipCube(e), this.hideSpecialBoard(e),
                console.log("########## 创建id =", e, "######## 依赖 rely =", this._relyIdArr)), this.removeSailId(e),
                this.removeSinkId(e), this._buildPro += this._shipInfo[e].Progress, Le.EventMgr.event(p.UI_UpdateTask, {
                    shipId: e,
                    reward: !0
                }), this.isShipToNextPosition(), this.isSink();
        }
        isSink() {
            this._sinkIdArr && this._sinkIdArr.length <= 0 && !Le.WorldMgr.night && (Le.UIMgr.showTips("Ready to sink"),
                this._shipState = H.Sinking, this._sinkIdArr = null, Le.EventMgr.event(p.UI_ShipSink, !0));
        }
        isShipToNextPosition() {
            var e = this._sailIdArr[this._curSailIndex];
            if (e && e.length <= 0 && !Le.WorldMgr.night) if (Le.GameMgr.gameMode == U.Level) {
                Le.UIMgr.showTips("Ready to sail"), this._buildPro = 0, this._shipState = H.Sailing, Le.EventMgr.event(p.UI_ShipSail, !0);
                for (let e = 0; e < this._guideCubeArr.length; e++) this._guideCubeArr[e].setActive(!1);
            } else Le.GameMgr.gameMode == U.Active && (Le.DataMgr.getunlockBoatmanDic(26) || (Le.UIMgr.openUI(i.UnlockSkinUI, {
                Id: 26
            }), Le.UIMgr.openUI(i.UnlockSkinUI, {
                Id: 27
            }), Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(26)), Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(27))));
        }
        receiveSpecialComponent(e) {
            var t = this.getSpecialComponentBuildInfo(e);
            t && (t.state = G.Finish, t.unlockCount++, t.lockBoardCount = 9999, this.buildShipSail(e),
                Le.EventMgr.event(p.UI_UpdateBuildItem)), this.isShipToNextPosition();
        }
        getSpecialComponentBuildInfo(e) {
            var t = null;
            if (!this.isBoard(this._shipInfo[e].ComponentId)) for (let i = 0; i < this._buildInfoArr.length; i++) if (e == this._buildInfoArr[i].shipCubeId) {
                t = this._buildInfoArr[i];
                break;
            }
            return t;
        }
        updateRelyList(e) {
            this.removeRelyListId(e);
            var t = De.TransferStringToNumberArr(this._shipInfo[e].RelyId);
            for (let e = 0; e < t.length; e++) t[e] > 0 && !this._shipInfo[t[e]].active && -1 == this._relyIdArr.indexOf(t[e]) && this._relyIdArr.push(t[e]);
        }
        removeRelyListId(e) {
            var t = this._relyIdArr.indexOf(e);
            -1 != t && this._relyIdArr.splice(t, 1);
        }
        updateComponentUnlockCount(e) {
            this.isBoard(this._shipInfo[e].ComponentId) && this._boardInfo.unlockCount++;
        }
        removeSailId(e) {
            for (const i in this._sailIdArr) if (this._sailIdArr.hasOwnProperty(i)) {
                var t = this._sailIdArr[i].indexOf(e);
                if (-1 != t) {
                    this._sailIdArr[i].splice(t, 1);
                    break;
                }
            }
        }
        removeSinkId(e) {
            if (this._sinkIdArr) {
                var t = this._sinkIdArr.indexOf(e);
                -1 != t && this._sinkIdArr.splice(t, 1);
            }
        }
        hideSpecialBoard(e) {
            if (this._shipInfo[e].HideBoardId > 0) {
                var t = De.TransferStringToNumberArr(this._shipInfo[e].HideBoardId);
                for (let e = 0; e < t.length; e++) {
                    var i = this._shipInfo[t[e]];
                    this._ship.showCompoentActive(i.ResName, !1);
                }
            }
        }
        showWithShipCube(e) {
            var t = De.TransferStringToNumberArr(this._shipInfo[e].WithId);
            for (let o = 0; o < t.length; o++) if (t[o] > 0) {
                var i = this.getShipCubeInfo(t[o]);
                this.removeSailId(t[o]), this.removeSinkId(t[o]), this._ship.showCompoentActive(i.ResName),
                    this._shipInfo[e].active = !0;
            }
        }
        setBoardRelyId() {
            var e = -1;
            for (let o = 0; o < this._relyIdArr.length; o++) {
                var t = this._shipInfo[this._relyIdArr[o]];
                if (null != t) {
                    if (this.isBoard(t.ComponentId)) {
                        e = t.Id;
                        break;
                    }
                    var i = De.TransferStringToNumberArr(t.RelyId);
                    for (let o = 0; o < i.length; o++) if (i[o] > 0 && this.isBoard(this._shipInfo[i[o]].ComponentId)) {
                        e = t.Id;
                        break;
                    }
                }
            }
            if (e > 0) {
                var o = this._shipInfo[e].PreRelyId;
                o > 0 && !this._shipInfo[o].active && (e = o);
            }
            this._boardInfo.relyId = e;
        }
        calUnlockItemCount() {
            if (this._relyIdArr && this.shipState == H.Building) {
                var e = 0;
                if (Le.GameMgr.gameMode == U.Active ? e = Le.DataMgr.eventMoodCount : Le.GameMgr.gameMode == U.Level && (e = Le.GameMgr.getMoodCount()),
                    this._unlockCountArr = [0, 0, 0, 0], this._boardInfo.unlockCount < this._boardInfo.lockBoardCount && this._boardInfo.relyId > 0 && this.isBoard(this._shipInfo[this._boardInfo.relyId].ComponentId)) Le.CfgMgr.getComponentCfg(this._shipInfo[this._boardInfo.relyId].ComponentId).ResNumber <= e && this._unlockCountArr[this._shipInfo[this._boardInfo.relyId].Floor - 1]++;
                for (let t = 0; t < this._buildInfoArr.length; t++) {
                    if (this._boardInfo.unlockCount >= this._buildInfoArr[t].lockBoardCount && this._buildInfoArr[t].state == G.Idle) Le.CfgMgr.getComponentCfg(this._buildInfoArr[t].componentId).ResNumber <= e && this._unlockCountArr[this._buildInfoArr[t].floor - 1]++,
                        -1 == this._relyIdArr.indexOf(this._buildInfoArr[t].shipCubeId) && this._relyIdArr.push(this._buildInfoArr[t].shipCubeId);
                }
                Le.EventMgr.event(p.UI_UpdateBuildItem), Le.EventMgr.event(p.UI_UpdateBuildCount);
            }
        }
        getShipCubeInfo(e) {
            return this._shipInfo[e];
        }
        getBuildInfoById(e) {
            var t = null;
            if (this._shipInfo[e].ComponentId == this._boardInfo.componentId) t = this._boardInfo; else for (let i = 0; i < this._buildInfoArr.length; i++) if (e == this._buildInfoArr[i].shipCubeId) {
                t = this._buildInfoArr[i];
                break;
            }
            return t && (t.shipCubeId = e), t;
        }
        getCurLevelId(e = null) {
            for (var t = null != e ? e : Le.DataMgr.level, i = Le.CfgMgr.getGlobalCfg("TotalLevel"); t > i;) t -= i;
            return t;
        }
        isBoard(e) {
            return e % 100 == 1;
        }
        changeMapState(e, t, i, o) {
            this._shipmap[e][t][i] = o;
        }
        setAmbientColor(e, t, i, o = !1) {
            null == this.scene || this.scene.ambientColor.x == e && this.scene.ambientColor.y == t && this.scene.ambientColor.z == i || (o ? (Laya.Tween.clearAll(this._ambientColor),
                this._ambientColor.setValue(this.scene.ambientColor.x, this.scene.ambientColor.y, this.scene.ambientColor.z),
                Laya.Tween.to(this._ambientColor, {
                    x: e,
                    y: t,
                    z: i,
                    update: new Laya.Handler(this, () => {
                        this.scene.ambientColor = this._ambientColor.clone();
                    })
                }, 500, null, Laya.Handler.create(this, () => {
                    this.scene.ambientColor = this._ambientColor.clone();
                }))) : this.scene.ambientColor = new Laya.Vector3(e, t, i));
        }
        IsShowSpecialComponetBoard(e) {
            var t = this._ship.findSamePositionBoard(this._shipInfo[e].ResName), i = !1;
            return t && (i = t.gameobject.active), i;
        }
        showGlowworm(e) { }
        resetAstarMap(e) {
            var t = this._shipmap[e];
            for (let a = 0; a < t.length; a++) {
                var i = t[a];
                if (null != i) for (let s = 0; s < i.length; s++) {
                    t[a][s] = 0;
                    var o = this.ship.getComponentListByPointXY(a, s, e);
                    if (null != o) for (let e = 0; e < o.length; e++) {
                        var n = o[e];
                        if (n.working) {
                            t[a][s] = 1;
                            break;
                        }
                        if (n.gameobject.active && (t[a][s] = n.navtype, 0 == n.navtype)) break;
                    }
                }
            }
        }
        checkMapPointType(e, t, i) {
            return this.resetAstarMap(i), this._shipmap[i][e][t];
        }
        findWayPath(e, t, i) {
            var o = [], n = this._astarmgr.FindeWay(this._shipmap[i], e, t);
            for (let e = 0; e < n.length; e++) {
                var a = n[e], s = this.ship.getComponentByPointXY(a.x, a.y, i, !0);
                null == s && (s = this.ship.getComponentByPointXY(a.x, a.y, i, !1)), s ? o.push(s) : console.warn("获取路径点地板的组件脚本出错", a.x, a.y, i);
            }
            return o;
        }
        startSink(e) {
            Le.SoundMgr.playSound(ee.Sink), this.ship.startSink(), this.hideallBuildGuide(),
                Laya.timer.once(2e3, this, () => {
                    this.createBuildGuide(), e && e();
                });
        }
        startSail(e) {
            Le.SoundMgr.playBGM(ee.Sail), Le.DataMgr.setArchieveValDic(R.SailCount, 1), Laya.timer.clear(this, this.createdWaterPlayer),
                this.sea.disableItem(), this.seamariner && (this.seamariner.ITEM && this.seamariner.ITEM.release(),
                    this.seamariner.gameobject.destroy(), this.seamariner.destroy(), this.seamariner = null);
            var t = Laya.Handler.create(this, () => {
                Le.UIMgr.showTips("Arrived at the destination!"), this.release(e);
            }), i = Laya.Handler.create(this, e => {
                this.sea.clearItems(), null != this.christmastree && (this.christmastree.release(),
                    this.christmastree = null), this.ship.startSail(e), this.ship.transform.position.y = 0;
            }, [t]);
            this.oarsCount = 0, this.rowingCount = 0, this.rowingMariners = [];
            var o = this.ship.getComponentByType(j.Oars_Left);
            for (let e = 0; e < o.length; e++) this.oarsCount++, console.log("派发 左 边船桨任务"),
                oe.pushQuestAction(new de(i, null, null, 0, o[e], V.Row_Left));
            o = this.ship.getComponentByType(j.Oars_Right);
            for (let e = 0; e < o.length; e++) this.oarsCount++, console.log("派发 右 边船桨任务"),
                oe.pushQuestAction(new de(i, null, null, 0, o[e], V.Row_Right));
            this.oarsCount <= 0 && i.run();
        }
        buildComponentComplete(e) {
            this._ship.buildComponentComplete(this.shipInfo[e].ResName);
        }
        sealShip(e) {
            oe.clearQuest(), Le.DataMgr.moodCount = -1, Laya.Scene3D.load(M.CrystalBall, Laya.Handler.create(this, t => {
                this.scene && this.scene.destroy(!0), this.scene = Laya.stage.addChild(t);
                var i = this.scene.getChildByName("Show_Ship").getChildByName("Ship").addComponent(_e);
                i.initShioComs(!0);
                var o = De.TransferStringToNumberArr(this.mapinfo.CollectPos);
                i.child.transform.localPosition = new Laya.Vector3(-o[0], o[1], o[2]), i.child.transform.localRotationEuler = new Laya.Vector3(0, 0, 0),
                    i.child.transform.localScale = new Laya.Vector3(o[3], o[3], o[3]);
                var n = this.scene.getChildByName("Show_Ship").getChildByName("2CrystalBall").getChildByName("2CrystalBall").getComponent(Laya.Animator).getCurrentAnimatorPlayState().animatorState.clip.duration();
                Laya.Tween.to(i.transform, {
                    localRotationEulerY: 360 * n
                }, 1e3 * n, Laya.Ease.quadOut), console.log("搜藏动画时间:" + n), Laya.timer.once(1e3 * n + 3e3, this, e => {
                    this.complete = !1, e.run();
                }, [e]);
            }));
        }
        release(o) {
            this.complete = !0;
            for (let e = 0; e < this.rowingMariners.length; e++) this.rowingMariners[e].stopRowing();
            this.rowingMariners = [];
            for (let e = 0; e < this.boatmanlist.length; e++) this.boatmanlist[e].release();
            if (this.boatmanlist = [], this.seaturtle && (this.seaturtle.destroy(), this.seaturtle = null),
                oe.clearQuest(), Laya.timer.clear(this, this.createdWaterPlayer), Le.DataMgr.levelStage >= this._maxLevelStage) {
                Le.SoundMgr.playSound(ee.Success);
                var n = Laya.Handler.create(this, () => {

                    this.scene && this.scene.destroy(!0), oe.clearQuest(), this.reportEventName(),
                        this.resetShipData(), this._maxLevelStage = 0, Le.DataMgr.levelStage = 1, Le.DataMgr.level++,
                        Le.DataMgr.sinkCount = 0, Le.GameMgr.curBuildSelectIndex = 0, Le.GameMgr.buildUIOpenCount = 0,
                        Le.GameMgr.resetCurQuestInfo(), Le.DataMgr.retUnlockCompoentDic(), o(), Le.RecorderMgr.stop(Le.RecorderMgr._autoFlag, !0),
                        this.loadScene(null, () => {
                            t.Platform == e.QQAd && Le.GameMgr.redMoneySwitch && Le.UIMgr.openUI(i.PassRedMoneyUI);
                        });
                });
                this.camera.focusIsland(Laya.Handler.create(this, e => {
                    this.sealShip(e);
                }, [n]));
            } else this.camera.focusIsland(Laya.Handler.create(this, e => {
                Le.DataMgr.levelStage++, this._shipState = H.Building, this._curSailIndex++, this._sailIdArr = {},
                    this._shipInfo = {}, Le.GameMgr.resetCurQuestInfo(), this.initGame(), e();
            }, [o]));
        }
        resetShipData() {
            this._relyIdArr = [], this._sinkIdArr = null, this._guideCubeArr.length = 0, this._buildInfoArr.length = 0,
                this._sailIdArr = {}, this._shipInfo = {}, this._ship.destroy(), this._ship = null,
                this._boardInfo = null, this._floorBoardCountArr = [0, 0, 0, 0], this._curSailIndex = 0;
            var e = this.getCurLevelId(), t = null;
            Le.GameMgr.gameMode == U.Active ? t = Le.CfgMgr.getEventLevelShipCfg(Le.DataMgr.eventLevel) : Le.GameMgr.gameMode == U.Level && (t = Le.CfgMgr.getLevelShipCfg(e));
            for (let e = 1; e <= t.length; e++) t[e].active = !1;
        }
        reportEventName() {
            var e = Le.DataMgr.level;
            De.SendEvent("建筑完成第" + e + "艘船的用户数量");
        }
    }
    class Se {
        constructor() {
            this._bgChannel = null, this._isOpenVoice = !1, this._switch = !0, this._isOpenVoice = !0;
        }
        setIsOpenVoice(e) {
            this._isOpenVoice = e, this.setMusicVolume(e ? 1 : 0), this.setSoundVolume(e ? 1 : 0);
        }
        init() {
            Laya.SoundManager.autoStopMusic = !0, t.Platform == e.VivoAd && (this._switch = 1 == Le.CfgMgr.getGlobalCfg("MusicSwitch"));
        }
        playBGM(e) {
            this._isOpenVoice && this._switch && (this.stopBGM(), this._bgChannel = Laya.SoundManager.playMusic(e, 0));
        }
        pauseBGM() {
            this._bgChannel && this._switch && this._bgChannel.pause(), this.setIsOpenVoice(!1);
        }
        resumeBGM() {
            this.setIsOpenVoice(!0), this._bgChannel && this._switch && this._bgChannel.resume();
        }
        stopBGM() { }
        playBtnClick() {
            this._isOpenVoice && this.playSound(ee.Click);
        }
        playSound(e) {
            this._isOpenVoice && Laya.SoundManager.playSound(e);
        }
        stopSound(e) {
            Laya.SoundManager.stopSound(e);
        }
        setSoundVolume(e) {
            Laya.SoundManager.setSoundVolume(e);
        }
        setMusicVolume(e) {
            Laya.SoundManager.setMusicVolume(e);
        }
    }
    class ke {
        constructor() {
            this._zOrder = 1e3, this._tipsZOrder = 1e5, this._uiArray = [], this._bannerFlag = !0;
        }
        toUI(e, t = null) {
            if (null != e && null != e) {
                for (let e = this._uiArray.length - 1; e >= 0; e--) {
                    let t = this._uiArray[e];
                    this.onUIClose(t, null);
                }
                this._uiArray.length = 0, this.openUI(e, t, !0);
            }
        }
        closeUI(e, t = null) {
            if (null == e || null == e) return;
            let i;
            for (let o = this._uiArray.length - 1; o >= 0; o--) if ((i = this._uiArray[o]).uiconfig == e) {
                this.onUIClose(i, t), this._uiArray.splice(o, 1);
                break;
            }
            this._uiArray.length > 0 && (i = this._uiArray[this._uiArray.length - 1], this.checkBanner(i, !0));
        }
        openUI(e, t = null, i = !0) {
            null != e && null != e && (e.res && e.res.length > 0 ? Laya.loader.load(e.res, Laya.Handler.create(this, function () {
                this.createUI(e, t, i);
            })) : this.createUI(e, t, i));
        }
        openUniqueUI(e, t = null, i = !0) {
            if (null == e || null == e) return;
            let o = this.findUI(e);
            if (o) return null != t && o.updateData(t), void (o.visible = i);
            this.openUI(e, t, i);
        }
        createUI(e, t = null, i = !0) {
            if (null == e || null == e) return;
            let o = Laya.ClassUtils.getRegClass(e.class);
            if (null == o) return void console.warn("openUI error", e);
            let n = new o(e);
            n.uiconfig = e, null != t && n.updateData(t), n.zOrder = this._zOrder++, n.visible = i,
                Laya.stage.addChild(n), this._uiArray.push(n), n.visible && (this.checkBanner(n, !0),
                    e.tween && (Laya.Tween.from(n, {
                        scaleX: .8,
                        scaleY: .8
                    }, 200, Laya.Ease.backOut), n.uitween = e.tween));
        }
        onUIClose(e, t) {
            e.uitween ? Laya.Tween.to(e, {
                scaleX: .8,
                scaleY: .8
            }, 200, Laya.Ease.backIn, Laya.Handler.create(this, function () {
                this.destroyUI(e), t && t.method();
            })) : (this.destroyUI(e), t && t.method());
        }
        destroyUI(e) {
            if (this.checkBanner(e, !1), e._aniList) {
                let t;
                for (let i = 0; i < e._aniList.length; i++) (t = e._aniList[i]) && t.clear && t.clear();
            }
            Laya.timer.clearAll(e), Laya.stage.removeChild(e), e.close(), e.destroy(!0);
        }
        findUI(e) {
            if (null != e && null != e) {
                for (let t = this._uiArray.length - 1; t >= 0; t--) {
                    let i = this._uiArray[t];
                    if (i.uiconfig == e) return i;
                }
                return null;
            }
        }
        getCurrentUI() {
            return null == this._uiArray || this._uiArray.length <= 0 ? null : this._uiArray[this._uiArray.length - 1].uiconfig;
        }
        setUIVisible(e, t) {
            if (null == e || null == e) return;
            let i = this.findUI(e);
            i && (i.visible = t, t && (i.zOrder = this._zOrder++), this.checkBanner(i, t));
        }
        setTop(e) {
            if (null == e || null == e) return;
            let t = this.findUI(e);
            t && (t.zOrder = this._zOrder++);
        }
        showTips(e) {
            let t, i = this._arrTips;
            if (null == i) {
                i = [];
                let e = new Laya.Box();
                Laya.stage.addChild(e), e.zOrder = this._tipsZOrder + 99999;
                for (let o = 0; o < 3; o++) {
                    let o = new Laya.Box();
                    o.width = 558,
                        o.anchorX = o.anchorY = .5, o.centerX = 0;
                    let n = new Laya.Image("game/messageBG.png");
                    o.addChild(n), n.width = 558, n.height = 85, t = new Laya.Text(),
                        t.fontSize = 28, t.color = "#FFFFFF", t.width = 500, t.height = 50, t.y = 15, t.align = "center", t.wordWrap = true,
                        t.valign = "middle", t.x = 29, i.push(t), o.addChild(t), e.addChild(o), o.visible = !1;
                }
                this._arrTips = i, e.width = 558, e.centerX = 0, e.centerY = -100;
            }
            if (0 == i.length) return;
            (t = i.shift()).text = e;
            t.color = "#FFFFFF";
            let o = t.parent;
            o.visible = !0, o.scale(.8, .8), o.alpha = 1, Laya.Tween.to(o, {
                scaleX: 1,
                scaleY: 1
            }, 200, Laya.Ease.backOut, Laya.Handler.create(this, function (e) {
                Laya.timer.once(1400, this, function () {
                    Laya.Tween.to(o, {
                        alpha: 0
                    }, 400, null, Laya.Handler.create(this, function () {
                        e.parent.visible = !1, i.push(e);
                    }));
                });
            }, [t]));
        }
        checkBanner(i, o) {
            if (null == i || null == i || null == i.uiconfig || null == i.uiconfig) return;
            let n = i.uiconfig.adunit;
            o ? n && 0 != n ? (this._bannerFlag = i.uiconfig.showPrompt, this._bannerFlag && Le.BannerMgr.createBanner(n)) : t.Platform == e.WXAd || Le.BannerMgr.hidebanner() : (t.Platform,
                e.WXAd);
        }
        createPrefab(e) {
            return Le.ResMgr.GetRes(e).create();
        }
    }
    class Ae {
        constructor() {
            this._timescale = 120, this._timestamp = 0, this._weathertime = 0, this.WORLD_TIME_SCALE = 1,
                this._worldtimescale = 1, this._timetype = 0, this._dayAmbientColor = new Laya.Vector3(.7075, .7075, .7075),
                this._nightAmbientColor = new Laya.Vector3(0, .2313, .3301), this._lightning = !1,
                this._isday = !0, this._weatherWeight = [], this._night = !1;
        }
        get worldtimescale() {
            return this._worldtimescale * this.WORLD_TIME_SCALE;
        }
        set worldtimescale(e) {
            this._worldtimescale = e;
        }
        get night() {
            return this._night;
        }
        get timetype() {
            return this._timetype;
        }
        init() {
            this._weatherWeight = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("WeatherWeight")),
                this._timescale = Le.CfgMgr.getGlobalCfg("GameTimeScale"), this._timestamp = 25200 / this._timescale;
        }
        startUpdate() {
            Laya.timer.frameLoop(1, this, this.update);
        }
        getDayNightSpeed() {
            return this._timestamp * this._timescale;
        }
        morning() {
            this._timestamp = 18e3 / this._timescale;
        }
        update() {
            if (!Le.SceneMgr.switchSceneFlag) {
                this._timestamp += De.deltaTime() * this.worldtimescale, this._weathertime += De.deltaTime() * this.worldtimescale,
                    this._timestamp * this._timescale > 86400 && (this._timestamp = 0);
                var e = this.GetGameWoldTime();
                switch (this.showBuffFunction(e), this._timetype) {
                    case 0:
                        e.hour >= 7 && (this._timetype = 1, Le.SceneMgr.sunlight && (Le.SceneMgr.sunlight.active = !0,
                            Laya.timer.once(1e4, this, () => {
                                Le.SceneMgr.sunlight.active = !1;
                            }, [], !1)));
                        break;

                    case 1:
                        e.hour >= 13 && (this._timetype = 2);
                        break;

                    case 2:
                        e.hour >= 19 && (this._timetype = 3);
                        break;

                    case 3:
                        0 == e.hour && (this._timetype = 0);
                }
                if (e.hour >= 23 || e.hour < 5) {
                    this._night || Le.SceneMgr.shipState == H.Building && Le.SceneMgr.boatmanlist.length > 0 && (this._night = !0,
                         Le.DataMgr.level > 1 && Le.EventMgr.event(p.UI_ShowBuffButton, {
                            type: 3
                        }));
                    for (let e = 0; e < Le.SceneMgr.boatmanlist.length; e++) {
                        Le.SceneMgr.boatmanlist[e].sleep();
                    }
                }
                if (e.hour >= 5 && e.hour < 23) {
                    this._night && (this._night = !1,  Le.SceneMgr.isSink(),
                        Le.SceneMgr.isShipToNextPosition(), Le.EventMgr.event(p.UI_ShowBuffButton, {
                            type: 1
                        }), Le.EventMgr.event(p.UI_ShowBuffButton, {
                            type: 2
                        }), Le.EventMgr.event(p.UI_ShowBuffButton, {
                            type: 4
                        }));
                    for (let e = 0; e < Le.SceneMgr.boatmanlist.length; e++) {
                        Le.SceneMgr.boatmanlist[e].wakeup();
                    }
                }
                this._lightning || (5 != e.hour || this._isday ? 17 == e.hour && this._isday && (Le.SceneMgr.setAmbientColor(this._nightAmbientColor.x, this._nightAmbientColor.y, this._nightAmbientColor.z, !0),
                    Le.SceneMgr.showGlowworm(!0), this._isday = !1) : (Le.SceneMgr.setAmbientColor(this._dayAmbientColor.x, this._dayAmbientColor.y, this._dayAmbientColor.z, !0),
                        Le.SceneMgr.showGlowworm(!1), this._isday = !0)), this._weathertime >= 30 && (this._weathertime = 0,
                            Le.SceneMgr.isguide || this.randomWeather());
            }
        }
        showBuffFunction(e) {
            this._night || 7 != e.hour && 10 != e.hour && 13 != e.hour && 16 != e.hour && 19 != e.hour && 22 != e.hour || 0 != e.minute || (Le.EventMgr.event(p.UI_ShowBuffButton, {
                type: 1
            }), Le.EventMgr.event(p.UI_ShowBuffButton, {
                type: 2
            }));
        }
        randomWeather() {
            var e = [], t = 0;
            e.push(this._weatherWeight[0]), t += this._weatherWeight[0];
            for (let o = 1; o < this._weatherWeight.length; o++) {
                var i = this._weatherWeight[o] + e[o - 1];
                e.push(i), t += i;
            }
            var o = De.random(1, t), n = -1;
            t = 0;
            for (let i = 0; i < e.length; i++) if (o <= (t += e[i])) {
                n = i;
                break;
            }
            switch (n) {
                case 0:
                    break;

                case 1:
                    Le.SoundMgr.playSound(ee.Rain), this.showWeatherEff("raining");
                    break;

                case 2:
                    Le.SoundMgr.playSound(ee.Thunder), this.lightning();
                    break;

                case 3:
                    this.showWeatherEff("raining"), this.lightning();
                    break;

                case 4:
                    this.showWeatherEff("fx_snowing");
            }
        }
        showWeatherEff(e, t) {
            if (null != Le.SceneMgr.ship && !Le.SceneMgr.ship.gameobject.destroyed) {
                var i = Le.ObjPool.GetObject(e);
                i.transform.position = Le.SceneMgr.ship.transform.position.clone(), null == t && (t = De.random(10, 25)),
                    Le.ObjPool.Recover(e, i, 1e3 * t);
            }
        }
        lightning() { }
        GetGameWoldTime(e = !1) {
            var t = this._timestamp * this._timescale, i = Math.floor(t / 3600), o = Math.floor((t - 3600 * i) / 60);
            return t = Math.floor(t - 3600 * i - 60 * o), e ? (i < 10 ? "0" + i : i) + ":" + (o < 10 ? "0" + o : o) : {
                hour: i,
                minute: o,
                second: t
            };
        }
    }
    class Le {
        static SetupEngine() {
            Le.BannerMgr = new T(), Le.CfgMgr = new B(), Le.UIMgr = new ke(), Le.ResMgr = new te(),
                Le.EventMgr = new z(), Le.DataMgr = new O(), Le.SoundMgr = new Se(), Le.GameMgr = new K(),
                Le.SceneMgr = new Me(), Le.ObjPool = new Z(), Le.RecorderMgr = new $(), Le.WorldMgr = new Ae(),
                Le.InterMgr = new J(), this.initPlatform(), t.Platform == e.IOS && console.log("===============初始化 oc 调用 js");
        }
        static initPlatform() {
            window.SoundMgr = Le.SoundMgr,
                // t.Platform == e.QQAd && window.qq ? window.platform0 = new f() :
                //     t.Platform == e.WXAd ? window.platform0 = new v() :
                //         t.Platform == e.P4399Ad && window.h5api ? window.platform0 = window.h5api
                //             : t.Platform == e.TouTAd && window.tt ? window.platform0 = new y()
                //                 : t.Platform == e.OPAd ? window.platform0 = new u()
                //                     : t.Platform == e.VivoAd ? window.platform0 = new b() :
                //                         t.Platform == e.MeiZu ? window.platform0 = new m()
                //                             : t.Platform == e.HuaWei || t.Platform == e.HuaWei2 ? window.platform0 = new c() :
                (window.platform0 = new I(),
                    console.log(window.platform0, "platform0>>>>>>>>>>>>>>>>>>>>>")), window.EventMgr || (window.EventMgr = Le.EventMgr);
        }
    }
    class Te {
        static exitGame() {
        }
        static preLoadVideoAd(e) {
        }
        static onShow(e) {
            window.platform0.onShow(e);
        }
        static onHide(e) {
            window.platform0.onHide(e);
        }
        static onShare(i) {
            t.Platform == e.WXAd || t.Platform == e.QQAd ? window.platform0.onShare(i) : t.Platform == e.P4399Ad && window.platform0.share();
        }
        static login(i) {
            t.Platform == e.QQAd ? window.platform0.login(i) : t.Platform == e.P4399Ad ? window.platform0.isLogin() ? i && i({
                code: 0
            }) : window.platform0.login(function (e) {
                e.code = 0, i && i(e);
            }) : (t.Platform, e.IOS);
        }
        static launchInfo() {
            return window.platform0.getLaunchOptionsSync();
        }
        static getUserInfo(e) {
            window.platform0.getUserInfo({
                withCredentials: !0,
                success: function (t) {
                    var i = t.userInfo;
                    e && e(i);
                }
            });
        }
        static authorize(i, o) {
            t.Platform == e.QQAd ? window.platform0.getSystemInfo({
                success: function (e) {
                    var t = e.windowWidth / Laya.stage.designWidth, n = i.x * t, a = i.y * t, s = window.platform0.createUserInfoButton({
                        type: "text",
                        text: "",
                        style: {
                            left: n,
                            top: a,
                            width: i.width * t,
                            height: i.height * t,
                            lineHeight: 40,
                            textAlign: "center",
                            fontSize: 30,
                            borderRadius: 4,
                            opacity: .1
                        }
                    });
                    this.button || (this.button = s), s.onTap(function (e) {
                        if (console.log("授权信息：res = " + JSON.stringify(e)), e.userInfo) {
                            var t = {
                                name: e.userInfo.nickName,
                                url: e.userInfo.avatarUrl
                            };
                            console.log(" 用户授权成功：userInfo.nickName = " + t.name + "\tuserInfo.avatarUrl = " + t.url),
                                o && o(!0, t);
                        } else console.log("微信返回的userInfo 为空 ！"), o && o(!1);
                        s.destroy();
                    });
                }
            }) : (t.Platform, e.P4399Ad);
        }
        static isAuthorize(i) {
            t.Platform == e.QQAd ? window.platform0.getSetting({
                success: function (e) {
                    e.authSetting["scope.userInfo"] ? i && i(!0) : i && i(!1);
                }
            }) : (t.Platform, e.P4399Ad);
        }
        static destroyButton() {
            window.platform0.destroyButton();
        }
        static navigateToMiniProgram(e) {
            window.platform0.navigateToMiniProgram(e);
        }
        static createBannerAd(i, o = null, n = !1) {

        }
        static closeBannerAd() {
            t.Platform == e.WXAd ? window.platform0.closeBannerAd() : this.setBannerVisible(!1);
        }
        static setBannerVisible(e) {
            window.platform0.setBannerVisible(e);
        }
        static createNativeAd(e, t = null) {
            return window.platform0.createNativeAd(e, e => {
                t && t(e);
            });
        }
        static closeRewardVedioAd(i = !1, o = null, n = null) {

        }
        static createRewardedVideoAd(i, o, n) {
            if (t.Platform == e.WXAd) {
                if (this.closeRewardVedioAd(), this.videoAd = window.wx.createRewardedVideoAd({
                    adUnitId: i
                }), console.log("创建视频广告", this.videoAd, i), null == this.videoAd) return void console.warn("创建视频广告失败");
                if (this.videoAd.onLoad(e => {
                    console.log("视频广告加载成功", e);
                }), this.videoAd.onError((e => {
                    console.log("视频广告加载出错", e), this.closeRewardVedioAd(!1, o, e);
                }).bind(this)), this.videoAd.onClose(e => {
                    console.log("视频广告关闭", e), this.closeRewardVedioAd(e && e.isEnded, o);
                }), n) return this.videoAd;
                this.showRewardedVideoAd();
            } else if (t.Platform == e.P4399Ad) window.platform0.playAd(e => {
                console.log("代码:" + e.code + ",消息:" + e.message), 1e4 === e.code ? console.log("开始播放") : 10001 === e.code ? (console.log("播放结束"),
                    o && o(!0)) : (console.log("广告异常"), o && o(!1));
            }); else if (t.Platform == e.XiaoMiAd) {
                if (!window.qg || void 0 === window.qg.createRewardedVideoAd) return void (o && o(!0));
                var a = qg.createRewardedVideoAd({
                    adUnitId: i
                });
                if (a) {
                    a.show();
                    var s = function (e) {
                        e && e.isEnded ? (o && o(!0), console.log("正常播放结束，可以下发游戏奖励")) : (o && o(!1), console.log("播放中途退出，不下发游戏奖励")),
                            a.offClose(s);
                    };
                    a.onClose(s), a.onError(function (e) {
                        console.log(e, "错误返回");
                    });
                }
            } else { }
        }
        static videoAdOnCloseTouT(e) {
            e.isEnded && this.toutVideoCallBack && this.toutVideoCallBack(!0);
        }
        static showRewardedVideoAd() {
            this.videoAd && this.videoAd.load().then(() => {
                var e = this.videoAd.show();
                console.log("视频广告显示结果", e);
            });
        }
        static startRecorderVedio() {
            window.platform0.startRecorderVedio();
        }
        static stopRecorderVedio() {
            window.platform0.stopRecorderVedio();
        }
        static clipVideo(e) {
            window.platform0.clipVideo(e);
        }
        static createAppBox(i) {
            t.Platform == e.QQAd ? window.platform0.createAppBox(i) : t.Platform == e.P4399Ad && window.platform0.showRecommend();
        }
        static closeAppBox() {
            null != this.appBox && (this.appBox.offLoad(), this.appBox.offError(), this.appBox.offClose(),
                this.appBox = null);
        }
        static createBlockAd(e, t) {

        }
        static vibrateShort() {
            null != window.platform0.vibrateShort && window.platform0.vibrateShort({});
        }
        static vibrateLong() {
            null != window.platform0.vibrateLong && window.platform0.vibrateLong({});
        }
        static createInnerAudioContext() {
            return window.platform0.createInnerAudioContext();
        }
        static reportUserBehaviorBranchAnalytics(e) {
            window.platform0.reportUserBehaviorBranchAnalytics && window.platform0.reportUserBehaviorBranchAnalytics(e);
        }
        static setUserCloudStorage(i) {
            t.Platform == e.QQAd ? window.platform0.setUserCloudStorage({
                KVDataList: [{
                    key: "buildpro",
                    value: i.toString()
                }],
                success: function (e) {
                    console.log("setUserCloudStorage success", e);
                },
                fail: function (e) {
                    console.log("setUserCloudStorage fail", e);
                }
            }) : t.Platform == e.P4399Ad && i > 0 && window.platform0.submitRankScore(39, i, null);
        }
        static postMessage(e) {
            window.platform0.postMessage(e);
        }
        static getSystemInfoSync() {
            if (t.Platform == e.QQAd) return window.platform0.getSystemInfoSync();
        }
        static saveAppToDesktop(i) {
            t.Platform == e.QQAd ? window.platform0.saveAppToDesktop(i) : t.Platform == e.P4399Ad && window.platform0.showRecommend();
        }
        static canPlayAd(e) {
            window.platform0.canPlayAd(t => {
                e && e(t.canPlayAd, t.remain);
            });
        }
        static addIconToDesktop(e) {
            window.platform0.addIconToDesktop && window.platform0.addIconToDesktop(e);
        }
        static closeNativeAd(e) {
            window.platform0.closeNativeAd(e);
        }
        static createMoreGameBanner() {
            ;
        }
        static createGamePortalAd() {
        }
        static createInsertAd(i, o = null) {
            if ("0" == i) return null;
        }
        static createGridAd() {
            window.platform0.createGridAd && window.platform0.createGridAd();
        }
        static destroyGridAd() {
            window.platform0.destroyGridAd && window.platform0.destroyGridAd();
        }
        static createCustomAd() {
        }
        static destroyCustomAd() {
            window.platform0.destroyCustomAd && window.platform0.destroyCustomAd();
        }
        static hideCustomAd() {
            window.platform0.hideCustomAd && window.platform0.hideCustomAd();
        }
        static navigateToMiniGame(i, o, n) {

        }
    }
    Te.button = null, Te.toutVideoCallBack = null, Te.toutBannerCallBack = null;
    class Be {
        constructor() { }
        login() {
            Te.login(i => {
                if (0 == i.code) {
                    let n = Te.launchInfo();
                    var o = {
                        appid: t.QQAppID,
                        secret: t.Session_key,
                        js_code: i.wxcode,
                        grant_type: "authorization_code"
                    };
                    t.Platform == e.WXAd && (n.query.ShareId && De.SendEvent("从分享进来的新用户数量"), o.appid = t.AppID),
                        console.log(n, "获取启动参数。。。。"), this.loginBack(o);
                    let a = {};
                    if (n) {
                        a.scene = n.scene, a.query = JSON.stringify(n.query);
                        let e = n.query;
                        e && e.sharecard_id && e.account_id && (a.detail = JSON.stringify({
                            sharecard_id: parseInt(e.sharecard_id),
                            account_id: parseInt(e.account_id),
                            from: e.from
                        }));
                    }
                }
            });
        }
        loginBack(i) {
            var o;
            o && r.sendUrl(o, i, e => {
                console.log("####### ", e.openid), t.Openid = e.openid;
            });
        }
        authorize(e, t) {
            t && t(!0);
        }
        shareCard(e) {
            let t = 0, i = Le.DataMgr.sharecard_config.length;
            i > 1 && (t = Math.floor(Math.random() * i));
            let o = Le.DataMgr.sharecard_config[t];
            Te.onShare({
                title: o.title,
                imageUrl: o.imageurl,
                success: function (t) {
                    e.runWith(t);
                }
            });
        }
        sendCloud(i) {
            t.Platform == e.QQAd && Te.setUserCloudStorage(i);
        }
    }
    Be.instance = new Be();
    class Ue {
        constructor() {
            this._props = null, this._target = null, this._posVec = null;
        }
        to(e, t, i, o, n, a, s, r, l) {
            this._target = e, this._update = l, this._props = {};
            for (const i in t) {
                var h = e.transform.position[i];
                null == h && (h = e.transform[i]), this._props[i] = h;
            }
            Laya.timer.frameLoop(1, this, this.frameLoopHandle), Laya.Tween.to(this._props, t, i, o, Laya.Handler.create(this, () => {
                Laya.timer.clear(this, this.frameLoopHandle), n && n.run();
            }), a, s, r);
        }
        frameLoopHandle() {
            if (this._update && this._update.run(), this._target.transform) {
                this._posVec = this._target.transform.position.clone();
                for (const e in this._props) null != this._props.x && (this._posVec.x = this._props.x),
                    null != this._props.y && (this._posVec.y = this._props.y), null != this._props.z && (this._posVec.z = this._props.z),
                    this._target.transform[e] = this._props[e];
                this._target.transform.position = this._posVec;
            } else Laya.timer.clear(this, this.frameLoopHandle);
        }
        clear() {
            Laya.timer.clear(this, this.frameLoopHandle), Laya.Tween.clearAll(this._props);
        }
    }
    class De {
        static GetGiftCount(e, i = null) {
            r.sendUrl("", {
                giftid: e,
                openid: t.Openid
            }, e => {
                i && i(e);
            });
        }
        static CreateRedBag(e, i, o = null) {
            o && o();
        }
        static copyArr(e) {
            var t = [];
            for (let i = 0; i < e.length; i++) t.push(e[i]);
            return t;
        }
        static castShadow(e, t, i) {
            // if (e._render && (e._render.castShadow = t, e._render.receiveShadow = i), e.numChildren > 0) for (let o = 0; o < e.numChildren; o++) this.castShadow(e.getChildAt(o), t, i);
        }
        static tween3d(e, t, i, o, n, a, s, r) {
            var l = new Ue();
            return l.to(e, t, i, o, n, a, s, r), l;
        }
        static GetPercentStr(e, t) {
            var i = e / t;
            return (i = Math.round(1e3 * i)) / 10 + "%";
        }
        static CloneJson(e, t = 1, i = e.length) {
            var o = [];
            for (let n = t; n <= i; n++) o.push(e[n]);
            return o;
        }
        static SplitToStr(e, t) {
            var i = [], o = e.toString().split(t);
            for (let e = 0; e < o.length; e++) i.push(o[e]);
            return i;
        }
        static deltaTime() {
            var e = Laya.timer.delta / 1e3;
            return e > .5 ? .03 : e;
        }
        static NumberInRange(e, t, i) {
            return e <= i && e >= t;
        }
        static getCurrentDate() {
            var e = new Date();
            return e.getFullYear() + "年" + (e.getMonth() + 1) + "月" + e.getDate() + "日";
        }
        static Clamp(e, t, i) {
            return e >= i ? i : e <= t ? t : e;
        }
        static Clamp01(e) {
            return e < 0 ? 0 : e > 1 ? 1 : e;
        }
        static magnitude(e) {
            return Math.sqrt(this.sqrMagnitude(e));
        }
        static sqrMagnitude(e) {
            var t = e.x * e.x + e.y * e.y;
            return t += e.z * e.z;
        }
        static random(e, t) {
            Math.random();
            return Math.round(e + Math.random() * (t - e));
        }
        static RandomRange(e, t) {
            Math.random();
            return e + Math.random() * (t - e);
        }
        static sortHandle(e, t) {
            return e > t ? 1 : -1;
        }
        static AddingZero(e, t) {
            var i = e.toString().length, o = Math.max(0, t - i), n = "";
            for (let e = 0; e < o; e++) n += "0";
            return n + e;
        }
        static isEmpty(e) {
            return void 0 === e || null == e || "" == e;
        }
        static TransferStringToStrArr(e, t = ",") {
            return e.toString().split(t);
        }
        static TransferStringToNumberArr(e, t = ",") {
            var i = [], o = e.toString().split(t);
            for (let e = 0; e < o.length; e++) i.push(parseFloat(o[e]));
            return i;
        }
        static RandomByWeight(e) {
            for (var t = 0, i = 0; i < e.length; i++) t += e[i];
            var o = De.random(1, t + 1), n = 0;
            for (let t = 0; t < e.length; t++) if (o <= (n += e[t])) return t;
            return -1;
        }
        static ScoreToString(e) {
            var t = Math.ceil(e).toString();
            if (4 == t.length) t = (t = t.substring(0, 3)).substring(0, 1) + "." + t.substring(1, 3),
                t = parseFloat(t).toString() + "K"; else if (5 == t.length) t = (t = t.substring(0, 3)).substring(0, 2) + "." + t.substring(2, 3),
                    t = parseFloat(t).toString() + "K"; else if (6 == t.length) t = (t = t.substring(0, 4)).substring(0, 3) + "." + t.substring(3, 4),
                        t = parseFloat(t).toString() + "K"; else if (t.length >= 7) {
                            var i = t.length;
                            t = (t = t.substring(0, i - 3)).substring(0, i - 6) + "." + t.substring(i - 6, i - 5),
                                t = parseFloat(t).toString() + "M";
                        }
            return t;
        }
        static showBannerMoveBtn(e, t, i) {
            Te.setBannerVisible(!1), t.visible = !1, t.y = Laya.stage.height - Le.CfgMgr.getGlobalCfg("BannerFloorY");
            var o = Le.CfgMgr.getGlobalCfg("BannerTime1"), n = Le.CfgMgr.getGlobalCfg("BannerTime2"), a = Le.CfgMgr.getGlobalCfg("BannerTime3");
            o <= 0 ? t.visible = !0 : Laya.timer.once(o, e, e => {
                e.visible = !0;
            }, [t]), Laya.timer.once(o + n, this, (e, t) => {
                e.pos(e.x, t, !0);
            }, [t, i]), Laya.timer.once(o + a, this, () => {
                Te.setBannerVisible(!0);
            });
        }
        static doSmall(e, t, i, o) {
            Laya.Tween.to(t, {
                scaleX: 1,
                scaleY: 1
            }, i, Laya.Ease.backOut, Laya.Handler.create(this, this.doLager, [e, t, i, o], !0));
        }
        static doLager(e, t, i, o) {
            Laya.Tween.clearAll(t), Laya.Tween.to(t, {
                scaleX: o,
                scaleY: o
            }, i, Laya.Ease.backIn, Laya.Handler.create(this, this.doSmall, [e, t, i, o], !0));
        }
        static doScale(e, t) {
            Laya.Tween.to(e, {
                scaleX: t,
                scaleY: t
            }, 100, null, Laya.Handler.create(this, () => {
                Laya.Tween.to(e, {
                    scaleX: 1,
                    scaleY: 1
                }, 100);
            }));
        }
        static UIdoScale(e) {
            Laya.Tween.from(e, {
                scaleX: 0,
                scaleY: 0
            }, 300, Laya.Ease.elasticOut, null, null, !1);
        }
        static doRotationOff(e, t, i, o, n = 0) {
            Laya.Tween.to(t, {
                rotation: t.rotation - o
            }, i, Laya.Ease.backOut, Laya.Handler.create(this, this.doRotationAdd, [e, t, i, o]));
        }
        static doRotationAdd(e, t, i, o, n = 0) {
            Laya.Tween.to(t, {
                rotation: t.rotation + o
            }, i, Laya.Ease.backOut, Laya.Handler.create(this, this.doRotationOff, [e, t, i, o]));
        }
        static doUp(e, t, i, o, n, a) {
            Laya.Tween.to(t, {
                x: t.x + o,
                y: t.y + n
            }, i, null, Laya.Handler.create(this, this.doDown, [e, t, i, o, n, a], !0));
        }
        static doDown(e, t, i, o, n, a) {
            Laya.timer.once(a, this, (() => {
                Laya.Tween.to(t, {
                    x: t.x - o,
                    y: t.y - n
                }, i, null, Laya.Handler.create(this, this.doUp, [e, t, i, o, n, a], !0));
            }).bind(this));
        }
        static saveAppToDesktop() {
            try {
                Te.saveAppToDesktop({
                    success: () => {
                        console.log("添加到桌面成功");
                    },
                    fail: () => {
                        console.log("添加到桌面失败");
                    },
                    complete: () => {
                        console.log("添加到桌面成功");
                    }
                });
            } catch (e) {
                console.log(e);
            }
        }
        static onClickWatchTV(i, o, n) {
            platform.getInstance().showReward(() => {
                Le.DataMgr.setArchieveValDic(R.PlayVedio, 1)
                n && n(true);
            })
        }
        static getCurrentTime() {
            return Date.parse(new Date().toString());
        }
        static transferSecondToHMS(e) {
            var t = Math.floor(e / 86400);
            e -= 24 * t * 60 * 60;
            var i = Math.floor(e / 3600), o = Math.floor((e - 3600 * i) / 60);
            return (t > 0 ? t + "D" : "") + (i < 10 ? "0" + i : i) + ":" + (o < 10 ? "0" + o : o) + ":" + ((e = e - 3600 * i - 60 * o) < 10 ? "0" + e : e);
        }
        static transferSecondToDHM(e) {
            var t = Math.floor(e / 86400);
            e -= 86400 * t;
            var i = Math.floor(e / 3600);
            e -= 3600 * i;
            var o = Math.floor(e / 60), n = t > 0 ? " " + t + "D" : "";
            return n += i > 0 ? i + "h" : "", n += o > 0 ? o + "m" : "";
        }
        static transferSecondToMS(e, t) {
            var i = Math.floor(e / 60);
            e -= 60 * i;
            return t ? (i < 10 ? "0" + i : i) + ":" + (e < 10 ? "0" + e : e) + "" : (i < 10 ? "0" + i : i) + ":" + (e < 10 ? "0" + e : e);
        }
        static shoTouTMoregameView() {
            window.tt.onMoreGamesModalClose(function (e) {
                console.log("modal closed", e);
            }), window.tt.onNavigateToMiniProgram(function (e) {
                console.log(e.errCode), console.log(e.errMsg);
            }), "ios" !== window.tt.getSystemInfoSync().platform0 && window.tt.showMoreGamesModal({
                appLaunchOptions: [{
                    appId: "tt11f0674d8eda6899",
                    query: "foo=bar&baz=qux",
                    extraData: {}
                }],
                success(e) {
                    console.log("success", e.errMsg);
                },
                fail(e) {
                    console.log("fail", e.errMsg);
                }
            });
        }
        static quadEquationGetX(e, t, i) {
            let o = [], n = Math.pow(t, 2) - 4 * e * i;
            return n > 0 ? (o.push((-t + Math.sqrt(n)) / (2 * e)), o.push((-t - Math.sqrt(n)) / (2 * e))) : 0 == n && o.push(-t / (2 * e)),
                o;
        }
        static binaryEquationGetKB(e, t, i, o) {
            return [(t - o) / (e - i), (e * o - i * t) / (e - i)];
        }
        static getInsertPointBetweenCircleAndLine(e, t, i, o, n, a, s) {
            let r = De.binaryEquationGetKB(e, t, i, o), l = r[0], h = r[1], d = 1 + l * l, g = 2 * l * (h - a) - 2 * n, c = n * n + (h - a) * (h - a) - s * s, p = [];
            return De.quadEquationGetX(d, g, c).forEach(e => {
                let t = l * e + h;
                p.push({
                    x: e,
                    y: t
                });
            }), p;
        }
        static isPointInPoly(e, t, i, o, n) {
            var a = 0, s = 0, r = !1;
            for (a = 0, s = e - 1; a < e; s = a++) i[a] > n != i[s] > n && o < (t[s] - t[a]) * (n - i[a]) / (i[s] - i[a]) + t[a] && (r = !r);
            return r;
        }
        static getCirclePosByAngle(e, t, i, o) {
            var n = new Laya.Vector2();
            return n.x = t + o * Math.sin(e * Math.PI / 180), n.y = i + o * Math.cos(e * Math.PI / 180),
                n;
        }
        static getLinePosByDistance(e, t, i) {
            i = this.Distance(e, t);
            var o = this.Normalized(this.Less(t, e)), n = this.Multiply(o, i);
            return this.Add(n, e);
        }
        static getTwoCircleDis(e, t) {
            var i = Math.abs(e.x - (t.x + t.width / 2)), o = Math.abs(e.y - (t.y + t.height / 2)), n = Math.pow(i, 2) + Math.pow(o, 2);
            return Math.sqrt(n);
        }
        static GetStageViewCrossPoint(e, t) {
            var i = new Laya.Point(0, 0), o = new Laya.Point(Laya.stage.width, 0), n = new Laya.Point(Laya.stage.width, Laya.stage.height), a = new Laya.Point(0, Laya.stage.height), s = this.GetIntersection(e, t, i, o);
            return null == s && (s = this.GetIntersection(e, t, o, n)), null == s && (s = this.GetIntersection(e, t, n, a)),
                null == s && (s = this.GetIntersection(e, t, a, i)), s;
        }
        static isInStageView(e, t) {
            return e >= 0 && e <= Laya.stage.width && t >= 0 && t <= Laya.stage.height;
        }
        static GetIntersection(e, t, i, o) {
            var n, a, s = e.x, r = e.y, l = t.x, h = t.y, d = i.x, g = i.y, c = o.x, p = o.y;
            if (s == l && d == c && s == d) return null;
            if (r == h && g == p && r == g) return null;
            if (s == l && d == c) return null;
            if (r == h && g == p) return null;
            if (s == l) n = s, a = (f = -(u = (p - g) / (c - d)) * d + g) + u * s; else if (d == c) {
                n = d, a = -(m = (h - r) / (l - s)) * s + r + m * d;
            } else {
                var m, u, f;
                a = (f = -(u = (p - g) / (c - d)) * d + g) + u * (n = (-(m = (h - r) / (l - s)) * s + r - f) / (u - m));
            }
            return this.IsInsideLine(e, t, n, a) && this.IsInsideLine(i, o, n, a) ? new Laya.Point(n, a) : null;
        }
        static IsInsideLine(e, t, i, o) {
            return (i >= e.x && i <= t.x || i >= t.x && i <= e.x) && (o >= e.y && o <= t.y || o >= t.y && o <= e.y);
        }
        static DistanceVec2(e, t) {
            let i = e.x - t.x, o = e.y - t.y;
            return Math.sqrt(i * i + o * o);
        }
        static ShareGame(i) {
            return !1;
        }
        static GetCircleZPos(e, t, i) {
            return i * i - e * e - t * t >= 0 ? Math.sqrt(i * i - e * e - t * t) : null;
        }
        static trans3dTo2dPosition(e, t) {
            var i = new Laya.Vector4();
            return t.viewport.project(e, t.projectionViewMatrix, i), i.x = i.x / Laya.stage.clientScaleX,
                i.y = i.y / Laya.stage.clientScaleY, i;
        }
        static trans2dTo3dPosition(e, t, i) {
            var o = new Laya.Vector3(0, 0, 0), n = new Laya.Vector3(e, t, 0);
            return i.convertScreenCoordToOrthographicCoord(n, o), o;
        }
        static clampMagnitude(e, t) {
            return this.sqrMagnitude(e) > t * t ? (e = this.Normalized(e), this.Multiply(e, t)) : e;
        }
        static Angle(e, t) {
            var i = new Laya.Vector3(), o = new Laya.Vector3();
            return Laya.Vector3.normalize(e, i), Laya.Vector3.normalize(t, o), 57.29578 * Math.acos(this.Clamp(this.Dot(this.Normalized(e), this.Normalized(t)), -1, 1));
        }
        static Distance(e, t) {
            return Laya.Vector3.distance(e, t);
        }
        static Add(e, t) {
            var i = new Laya.Vector3();
            return Laya.Vector3.add(e, t, i), i;
        }
        static Less(e, t) {
            return new Laya.Vector3(e.x - t.x, e.y - t.y, e.z - t.z);
        }
        static Multiply(e, t) {
            return new Laya.Vector3(e.x * t, e.y * t, e.z * t);
        }
        static Lerp(e, t, i) {
            var o = new Laya.Vector3();
            return Laya.Vector3.lerp(e, t, i, o), o;
        }
        static Divide(e, t) {
            return new Laya.Vector3(e.x / t, e.y / t, e.z / t);
        }
        static Normalized(e) {
            var t = new Laya.Vector3(0, 0, 0);
            return Laya.Vector3.normalize(e, t), t;
        }
        static RandomPositionUnitSphere() {
            var e = this.RandomRange(-1, 1), t = this.RandomRange(-1, 1), i = this.RandomRange(-1, 1);
            return new Laya.Vector3(e, t, i);
        }
        static Dot(e, t) {
            return Laya.Vector3.dot(e, t);
        }
        static TransformPoint(e, t) {
            var i = new Laya.Vector3();
            return Laya.Vector3.transformQuat(t, e.rotation, i), Laya.Vector3.add(i, e.position, i),
                i;
        }
        static InverseTransformPoint(e, t) {
            var i = new Laya.Vector3();
            e.getRight(i);
            var o = new Laya.Vector3();
            e.getUp(o);
            var n = new Laya.Vector3();
            e.getForward(n);
            var a = new Laya.Vector3(-n.x, -n.y, -n.z), s = this.ProjectDistance(t, e.position, i), r = this.ProjectDistance(t, e.position, o), l = this.ProjectDistance(t, e.position, a);
            return new Laya.Vector3(s, r, l);
        }
        static ProjectDistance(e, t, i) {
            var o = new Laya.Vector3();
            Laya.Vector3.subtract(e, t, o);
            var n = this.Angle2(o, i) * Math.PI / 180, a = Laya.Vector3.distance(e, t);
            return a *= Math.cos(n);
        }
        static Angle2(e, t) {
            var i = (e.x * t.x + e.y * t.y + e.z * t.z) / (Math.sqrt(e.x * e.x + e.y * e.y + e.z * e.z) * Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z));
            return i < -1 && (i = -1), i > 1 && (i = 1), 180 * Math.acos(i) / Math.PI;
        }
        static QuaternionXVector3(e, t) {
            var i = 2 * e.x, o = 2 * e.y, n = 2 * e.z, a = e.x * i, s = e.y * o, r = e.z * n, l = e.x * o, h = e.x * n, d = e.y * n, g = e.w * i, c = e.w * o, p = e.w * n, m = new Laya.Vector3();
            return m.x = (1 - (s + r)) * t.x + (l - p) * t.y + (h + c) * t.z, m.y = (l + p) * t.x + (1 - (a + r)) * t.y + (d - g) * t.z,
                m.z = (h - c) * t.x + (d + g) * t.y + (1 - (a + s)) * t.z, m;
        }
        static QuaternionEuler(e, t, i) {
            var o = new Laya.Quaternion(), n = .0174532925;
            return e = e * n / 2, t = t * n / 2, i = i * n / 2, o.x = Math.sin(e) * Math.cos(t) * Math.cos(i) + Math.cos(e) * Math.sin(t) * Math.sin(i),
                o.y = Math.cos(e) * Math.sin(t) * Math.cos(i) - Math.sin(e) * Math.cos(t) * Math.sin(i),
                o.z = Math.cos(e) * Math.cos(t) * Math.sin(i) - Math.sin(e) * Math.sin(t) * Math.cos(i),
                o.w = Math.cos(e) * Math.cos(t) * Math.cos(i) + Math.sin(e) * Math.sin(t) * Math.sin(i),
                o;
        }
        static QuaternionMultiply(e, t) {
            var i = 2 * e.x, o = 2 * e.y, n = 2 * e.z, a = e.x * i, s = e.y * o, r = e.z * n, l = e.x * o, h = e.x * n, d = e.y * n, g = e.w * i, c = e.w * o, p = e.w * n, m = new Laya.Vector3();
            return m.x = (1 - (s + r)) * t.x + (l - p) * t.y + (h + c) * t.z, m.y = (l + p) * t.x + (1 - (a + r)) * t.y + (d - g) * t.z,
                m.z = (h - c) * t.x + (d + g) * t.y + (1 - (a + s)) * t.z, m;
        }
        static QuaternionLerp(e, t, i) {
            var o = new Laya.Quaternion();
            return Laya.Quaternion.lerp(e, t, i, o), o;
        }
        static MoveTowards(e, t, i) {
            var o = this.Less(t, e), n = this.magnitude(o);
            return n <= i || i < 1.401298e-45 ? t : this.Add(e, this.Multiply(this.Divide(o, n), i));
        }
        static QuaternionDot(e, t) {
            return e.x * t.x + e.y * t.y + e.z * t.z + e.w * t.w;
        }
        static QuaternionAngle(e, t) {
            var i = this.QuaternionDot(e, t);
            return this.QuaternionIsEqualUsingDot(i) ? 0 : 2 * Math.acos(Math.min(Math.abs(i), 1)) * 57.29578;
        }
        static QuaternionIsEqualUsingDot(e) {
            return e > 1 - 1e-6;
        }
        static ExtendedLinePoint(e, t, i, o, n) {
            var a = Math.sqrt((i - e) * (i - e) + (o - t) * (o - t)), s = i + n / a * (i - e), r = o + n / a * (o - t);
            return new Laya.Vector2(s, r);
        }
        static SendEvent(i) {

        }
        static SendLevelEvent(e) { }
        static SendEventData(i, o) {

        }
    }
    class Ge extends Laya.Box {
        constructor() {
            super(), this.gameobject = null, this._info = null, this.icon = null, this.gameName = null,
                this.flag = null;
            let e = Le.ResMgr.GetRes(C.GameBoxItem);
            this.gameobject = e.create(), this.addChild(this.gameobject), this.icon = this.gameobject.getChildByName("icon"),
                this.gameName = this.gameobject.getChildByName("name"), this.flag = this.gameobject.getChildByName("flag"),
                this.flag.visible = !1, this.gameobject.on(Laya.Event.CLICK, this, this.carouselClickHandle);
        }
        setInfo(e) {
            this._info = e, this.icon.skin = e.iconUrl, "热门" == this._info.mark ? (this.flag.visible = !0,
                this.flag.skin = "game/ADhot.png") : "new" == this._info.mark ? (this.flag.visible = !0,
                    this.flag.skin = "game/ADnew.png") : this.flag.visible = !1, this.gameName.text = e.txt,
                Laya.timer.frameLoop(1, this, this.updatePosHandle);
        }
        updatePosHandle() {
            this.y -= 1, this.y <= -this.gameobject.height - 10 && (this.y = (this.gameobject.height + 20) * (this._info.total - 1));
        }
        carouselClickHandle() {

        }
        destroy() {
            Laya.timer.clear(this, this.updatePosHandle), this.gameobject.off(Laya.Event.CLICK, this, this.carouselClickHandle),
                this.gameobject.destroy();
        }
    }
    class He extends o.pkview.GameBoxUIUI {
        constructor() {
            super(), this._gameList = [], this._itemDic = {};
        }
        onAwake() {
            this.visible = !1, this.initView(), this.initEvent();
        }
        initView() {

        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle);
        }
        updateItemHandle(e, t) {
            e.setInfo(e.dataSource), this._itemDic[t] = e;
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.GameBoxUI);
        }
        close() {
            if (null != this._itemDic) for (const e in this._itemDic) this._itemDic.hasOwnProperty(e) && this._itemDic[e] && this._itemDic[e].destroy();
            super.close();
        }
    }
    class Pe extends o.pkview.NativeInsertUIUI {
        constructor() {
            super(), this._info = null, this._nativeAd = null, this._adInfo = null;
        }
        onAwake() {
            this.visible = !1, this.initView(), this.initEvent();
        }
        updateData(e) {
            this._info = e;
        }
        initView() {
            this.rewardnum.text = this._info.RewardCount.toString(), this._nativeAd = Te.createNativeAd(Le.CfgMgr.getAdCfg(22).toString(), this.showNativecallback.bind(this));
        }
        initEvent() {
            this.icon.on(Laya.Event.MOUSE_DOWN, this, this.nativeAdClickHandle), this.regClick(this.getbtn, this.getRewardHandle),
                this.regClick(this.closebtn, this.closeHandle), this.regClick(this.adclosebtn, this.adcloseHandle);
        }
        showNativecallback(o) {
            t.Platform == e.OPAd ? null == o || o[0].iconUrlList.length <= 0 ? (console.log("原生广告请求失败!"),
                Le.UIMgr.closeUI(i.NativeInsertUI)) : (this.visible = !0, Le.BannerMgr.hidebanner(),
                    1 == this._info.type ? (this.rewardobj.y = 134, this.getbtn.y = 396, this.adclosebtn.y = 558,
                        this.adobj.y = 550) : 2 == this._info.type && (this.rewardobj.y = 638, this.getbtn.y = 900,
                            this.adclosebtn.y = 108, this.adobj.y = 100), this._adInfo = o[0], this.icon.skin = this._adInfo.iconUrlList[0],
                    this.adtitle.text = this._adInfo.title, this.addesc.text = this._adInfo.desc, this._nativeAd.reportAdShow({
                        adId: this._adInfo.adId
                    })) : t.Platform == e.VivoAd && (null == o || o[0].imgUrlList.length <= 0 ? (console.log("原生广告请求失败!"),
                        Le.UIMgr.closeUI(i.NativeInsertUI)) : (this.visible = !0, Le.BannerMgr.hidebanner(),
                            this._adInfo = o[0], this.icon.skin = this._adInfo.imgUrlList[0], this._nativeAd.reportAdShow({
                                adId: this._adInfo.adId
                            })));
        }
        nativeAdClickHandle() {
            this._nativeAd.reportAdClick({
                adId: this._adInfo.adId
            }), this.closeHandle();
        }
        adcloseHandle() {
            this.adobj.visible = !1;
        }
        closeHandle() {
            Le.GameMgr.insertAdTime = 0, Le.UIMgr.closeUI(i.NativeInsertUI);
        }
        getRewardHandle() {
            Le.DataMgr.addMoodCount(this._info.RewardCount), Le.UIMgr.showTips("Wood +" + this._info.RewardCount),
                this.closeHandle();
        }
        close() {
            t.Platform != e.OPAd && t.Platform != e.VivoAd || Le.BannerMgr.setBannerVisible(!0),
                super.close();
        }
    }
    class Ve extends o.pkview.NativeVivoInsertUIUI {
        constructor() {
            super(), this._nativeAd = null, this._adInfo = null;
        }
        onAwake() {
            this.visible = !1, this.initView(), this.initEvent();
        }
        initView() {

        }
        initEvent() {
            this.icon.on(Laya.Event.MOUSE_DOWN, this, this.nativeAdClickHandle), this.regClick(this.adclosebtn, this.closeHandle),
                Le.EventMgr.on(p.AD_NativeAdReport, this, this.reportHandle);
        }
        reportHandle() {
            this._nativeAd.reportAdShow({
                adId: this._adInfo.adId
            });
        }
        showNativecallback(o) {
            null == o || o[0].imgUrlList.length <= 0 ? (console.log("原生广告请求失败!"), Le.UIMgr.closeUI(i.NativeVivoInsertUI)) : (this.visible = !0,
                Le.BannerMgr.hidebanner(), this._adInfo = o[0], this.icon.skin = this._adInfo.imgUrlList[0],
                this.reportHandle(), t.Platform == e.HuaWei || t.Platform == e.HuaWei2 ? (this.icon.height = 346,
                    this.adobj.height = 364, this.bg.height = 482, this.title.text = this._adInfo.title) : this.title.text = "");
        }
        nativeAdClickHandle() {
            this._nativeAd.reportAdClick({
                adId: this._adInfo.adId
            }), Le.UIMgr.closeUI(i.NativeVivoInsertUI);
        }
        closeHandle() {
            Le.UIMgr.closeUI(i.NativeVivoInsertUI);
        }
        close() {
            Le.EventMgr.off(p.AD_NativeAdReport, this, this.reportHandle), Le.BannerMgr.setBannerVisible(!0),
                super.close();
        }
    }
    class je extends Laya.Box {
        constructor() {
            super(), this.gameobject = null, this.desc = null, this.probg = null, this.procore = null,
                this.proval = null, this.getbtn = null, this.videoicon = null, this.gettext = null,
                this.rewardnum = null, this._info = null;
            let e = Le.ResMgr.GetRes(C.AchieveItem);
            this.gameobject = e.create(), this.addChild(this.gameobject), this.desc = this.gameobject.getChildByName("desc");
            var t = this.gameobject.getChildByName("proobj");
            this.probg = t.getChildByName("probg"), this.procore = t.getChildByName("procore"),
                this.proval = t.getChildByName("proval"), this.getbtn = this.gameobject.getChildByName("getbtn"),
                this.videoicon = this.getbtn.getChildByName("videoicon"), this.gettext = this.getbtn.getChildByName("gettext"),
                this.rewardnum = this.getbtn.getChildByName("rewardnum"), this.getbtn.on(Laya.Event.CLICK, this, this.getClickHandle);
        }
        setInfo(e) {
            this._info = e, e.Id == R.CollectRes ? (this.desc.text = e.Desc.replace("x", De.ScoreToString(e.Condition)),
                this.proval.text = e.CurCount + "/" + De.ScoreToString(e.Condition)) :
                (this.desc.text = e.Desc.replace("x", e.Condition.toString()),
                    e.Id == R.GameTime ? this.proval.text = Math.floor(e.CurCount) + "/" + e.Condition :
                        this.proval.text = e.CurCount + "/" + e.Condition);
            var t = Math.min(1, e.CurCount / e.Condition);
            e.GetFlag ? (this.procore.skin = "game/achi2_ba1.png", //this.videoicon.visible = !0,
                this.gettext.text = "Claim", this.getbtn.gray = !1) : (this.procore.skin = "game/achi_bar1.png",
                    //this.videoicon.visible = !0, 
                    this.gettext.text = "Unclaimed", this.getbtn.gray = !0),
                this.procore.width = 233 * t, this.rewardnum.text = e.RewardNum.toString();
        }
        getClickHandle() {
            if (this.getbtn.gray) { return };
            Le.SoundMgr.playBtnClick(),
                Le.DataMgr.addGoldCount(this._info.RewardNum),
                Le.UIMgr.showTips("Diamonds +" + this._info.RewardNum),
                Le.EventMgr.event(p.UI_UpdateGold);
            var t = this._info.Index + 1;
            Le.DataMgr.setArchieveIndexDic(this._info.Id, t);
            var i = Le.CfgMgr.getAchieveCfg(this._info.Id);
            t >= De.TransferStringToNumberArr(i.Value).length ? Laya.Tween.to(this.gameobject, {
                alpha: 0
            }, 500, null, Laya.Handler.create(this, () => {
                Le.GameMgr.updateAchieveInfo(), Laya.Tween.to(this.gameobject, {
                    alpha: 1
                }, 500);
            })) : (this._info.Index = t, Laya.Tween.to(this.gameobject, {
                alpha: 0
            }, 500, null, Laya.Handler.create(this, () => {
                Le.GameMgr.updateAchieveInfo(), Laya.Tween.to(this.gameobject, {
                    alpha: 1
                }, 500);
            })));
        }
        destroy() {
            this.getbtn.off(Laya.Event.CLICK, this, this.getClickHandle), this.gameobject.destroy();
        }
    }
    class Re {
        constructor(i, o, n) {
            // let a = Le.ResMgr.GetRes(C.VedioItemBox);
            // this.gameobject = a.create(), i.addChild(this.gameobject), this.gameobject.pos(o, n),
            //     this.gameobject.bottom = 200, t.Platform == e.QQAd ? this.gameobject.bottom = 230 : t.Platform == e.WXAd && (this.gameobject.bottom = 320),
            //     this.bar = this.gameobject.getChildByName("vediochestboxbar"), this.light = this.gameobject.getChildByName("vediochestboxlight"),
            //     this.btn = this.gameobject.getChildByName("vediochestboxbtn"), this.lightbg = this.gameobject.getChildByName("lightbg"),
            //     this.hlight = this.lightbg.getChildByName("hlight"), this.btn.on(Laya.Event.CLICK, this, this.onClickBox),
            //     De.doLager(this, this.btn, 350, 1.15), De.doRotationAdd(this, this.btn, 350, 10),
            //     Laya.timer.frameLoop(1, this, this.update), this.hlight.x = -200, Le.EventMgr.on(p.AD_WatchVedioSucces, this, this.initBar),
            //     this.initBar();
        }
        initBar() {
            // var e = De.Clamp01(Le.DataMgr.boxvediocoount / 5);
            // this.bar.width = Math.max(5, 324 * e), this.lightbg.mask.width = Math.max(5, this.bar.width);
        }
        update() {
        }
        onClickBox() {
            // Le.DataMgr.boxvediocoount >= 5 ? (Le.DataMgr.boxvediocoount = 0, Le.DataMgr.addGoldCount(200),
            //     Le.UIMgr.showTips("获得钻石奖励 +200"), this.initBar()) : Le.UIMgr.showTips("还需要看" + (5 - Le.DataMgr.boxvediocoount) + "次视频获取奖励");
        }
        destroy() {
            Laya.Tween.clearAll(this), Laya.timer.clearAll(this)
            //, Le.EventMgr.off(p.AD_WatchVedioSucces, this, this.initBar),
            //     this.gameobject.destroy();
        }
    }
    class Ee extends o.view.AchieveUIUI {
        constructor() {
            super(), this._listArr = [];
        }
        onAwake() {
            this.initView(), this.initEvent(), t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd || (this.vediobox = new Re(this, 327, 867));
        }
        initView() {
            this.updateGoldHandle(),
                this.updateMoodHandle(),
                this.updateMoodIconHandle(),
                this.listobj.vScrollBarSkin = "",
                this.listobj.itemRender = je,
                this.listobj.renderHandler = new Laya.Handler(this, this.updateItemHandle),
                this.listobj.dataSource = Le.GameMgr.achieveInfoArr;
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), Le.EventMgr.on(p.UI_UpdateAchieve, this, this.updateAchieveHandle),
                Le.EventMgr.on(p.UI_UpdateGold, this, this.updateGoldHandle), Le.EventMgr.on(p.UI_UpdateMood, this, this.updateMoodHandle),
                Le.EventMgr.on(p.UI_UpdateMoodIcon, this, this.updateMoodIconHandle);
        }
        updateMoodIconHandle() {
            Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" :
                Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png");
        }
        updateAchieveHandle(e) {
            this.listobj.dataSource = Le.GameMgr.achieveInfoArr, this.listobj.refresh();
        }
        updateItemHandle(e, t) {
            e.setInfo(e.dataSource), this._listArr[t] = e;
        }
        updateGoldHandle() {
            this.diamondnum.text = De.ScoreToString(Le.DataMgr.goldCount);
        }
        updateMoodHandle() {
            Le.GameMgr.gameMode == U.Active ? this.resnum.text = De.ScoreToString(Le.DataMgr.eventMoodCount) : Le.GameMgr.gameMode == U.Level && (this.resnum.text = De.ScoreToString(Le.GameMgr.getMoodCount()));
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.AchieveUI);
        }
        removeList() {
            for (let e = 0; e < this._listArr.length; e++) this._listArr[e].destroy();
        }
        close() {
            this.removeList(), Le.EventMgr.off(p.UI_UpdateAchieve, this, this.updateAchieveHandle),
                Le.EventMgr.off(p.UI_UpdateGold, this, this.updateGoldHandle), Le.EventMgr.off(p.UI_UpdateMood, this, this.updateMoodHandle),
                this.vediobox && this.vediobox.destroy(), super.close();
        }
    }
    class Oe extends o.view.BottleUIUI {
        constructor() {
            super(...arguments), this.time = 1500;
        }
        onAwake() {
            super.onAwake(), this.initView(), this.initEvent();
        }
        initView() {
            if (null == this.cfg) {
                var i = [];
                for (let e = 1; e <= Le.CfgMgr.bottleCfg.length; e++) i[e - 1] = Le.CfgMgr.bottleCfg[e].Rate;
                var o = this.RandomByWeight(i) + 1;
                this.cfg = Le.CfgMgr.bottleCfg[o];
            }
            this.window.alpha = 0, this.anim.source = this.cfg.Anim, this.txttitle.text = this.cfg.Title,
                this.txtmessgae.text = this.cfg.Content, this.txtbtn.text = this.cfg.Button, this.icon.skin = this.cfg.Icon,
                this.anim.play(), Laya.timer.once(this.time, this, () => {
                    De.UIdoScale(this.window);
                }), Laya.Tween.to(this.window, {
                    alpha: 1
                }, 500, null, Laya.Handler.create(this, () => {
                    this.anim.visible = !1;
                }), this.time), t.Platform != e.OPAd && t.Platform != e.VivoAd && t.Platform != e.QQAd || (this.btnshare.visible = !1,
                    this.btnclose.centerX = 0);
        }
        updateData(e) {
            null != e && (this.cfg = Le.CfgMgr.bottleCfg[e]);
        }
        initEvent() {
            this.regClick(this.btnclose, this.onclickclose), this.regClick(this.btnshare, this.onclickshare);
        }
        onclickclose() {
            var e = this.cfg.Value;
            1 == this.cfg.Type ? (De.getCurrentTime() - Le.GameMgr.speedtimestart) / 1e3 >= 60 ? (Le.UIMgr.showTips("Get Acceleration"),
                Le.GameMgr.speedtimestart = De.getCurrentTime() - 1e3 * e) : (Le.GameMgr.speedtimestart += 1e3 * e,
                    Le.GameMgr.speedtimestart >= De.getCurrentTime() && (Le.GameMgr.speedtimestart = De.getCurrentTime())) : 2 == this.cfg.Type ? (Le.UIMgr.showTips("Resources +" + e),
                        Le.DataMgr.addMoodCount(e)) : 3 == this.cfg.Type ? (Le.UIMgr.showTips("Get Skip Sleep Time"),
                            Le.GameMgr.freeSkipNightCount++) : 4 == this.cfg.Type && (Le.UIMgr.showTips("赠送钻石 " + e),
                                Le.DataMgr.addGoldCount(e));
            Le.UIMgr.closeUI(i.BottleUI);
        }
        onclickshare() {
            De.ShareGame(Laya.Handler.create(this, e => {
                console.log("分享成功"), e && this.onclickclose();
            }));
        }
        RandomByWeight(e) {
            for (var t = 0, i = 0; i < e.length; i++) t += e[i];
            var o = De.random(1, t + 1), n = 0;
            for (let t = 0; t < e.length; t++) if (o <= (n += e[t])) return t;
            return -1;
        }
    }
    class ze extends o.view.BuildOverUIUI {
        constructor(i) {
            super(), this._shipInfo = null, this._compInfo = null, this._ishidebanner = !1,
                e.WXAd != t.Platform && (i.adunit = Le.CfgMgr.getAdCfg(36).toString());
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        updateData(i) {
            this._shipInfo = Le.SceneMgr.getShipCubeInfo(i.shipId), this._compInfo = Le.CfgMgr.getComponentCfg(this._shipInfo.ComponentId),
                Le.SceneMgr.buildcount++, t.Platform == e.TouTAd && Le.SceneMgr.buildcount >= 3 ? (Le.SceneMgr.buildcount = 0,
                    this.tt_view.visible = !0, this.confirmbtn.visible = !1, this.btnclose.visible = !1,
                    this.txttips.visible = !1, Laya.timer.once(3e3, this, () => {
                        this.btnclose.visible = !0;
                    })) : this.tt_view.visible = !1;
        }
        initView() {
            this.icon.skin = this._compInfo.ResIcon, this.buildName.text = this._compInfo.Name,
                this.desc.text = this._compInfo.Desc, 1 == this._compInfo.Type ? this.buffValue.text = "+" + this._compInfo.Value : 2 == this._compInfo.Type && (this.buffValue.text = "+" + Math.floor(this._compInfo.Value / 1e4 * 100) + "%"),
                Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png"),
                e.WXAd == t.Platform && (this._ishidebanner = !0, this.window.centerY = 50);
        }
        showBanner() {
            Te.setBannerVisible(!0);
        }
        initEvent() {
            this.regClick(this.confirmbtn, this.confirmClickHanlde), this.regClick(this.btnclose, this.confirmClickHanlde),
                this.regClick(this.btnShare_tt, this.onClickShare), this.regClick(this.btnVedio_tt, this.onClickVedio),
                this.regClick(this.btncopyID, this.onClickCopy);
        }
        bannerShow(e) {
            if (this._ishidebanner) Te.setBannerVisible(!1), this.bannerHide(); else {
                var t = 270;
                if (e && e.top) {
                    var i = e.top, o = window.platform0.systeminfo.screenHeight;
                    t = 1334 * ((o - i) / o) * (window.platform0.systeminfo.screenHeight / window.platform0.systeminfo.screenWidth - 1334 / 750 + 1);
                }
                this.confirmbtn.bottom = t, this.window.height = 369;
            }
        }
        bannerHide() {
            this.confirmbtn.bottom = 110, this.window.height = 312;
        }
        onClickShare() {
            Le.RecorderMgr.recordTime <= 3 ? Le.UIMgr.showTips("录制时间小于3秒，稍后再试!") : Le.RecorderMgr.stop(Le.RecorderMgr._autoFlag, !1, (e => {
                var t = Laya.Handler.create(this, e => {
                    e && (console.log("分享视频成功"), Le.DataMgr.addGoldCount(1), Le.UIMgr.showTips("分享成功！获得 钻石奖励 +1")),
                        this.confirmClickHanlde();
                });
                console.log("分享视频地址:", e), window.tt.shareAppMessage({
                    channel: "video",
                    desc: Le.DataMgr.sharecard_config[0].title,
                    imageUrl: Le.DataMgr.sharecard_config[0].imageurl,
                    templateId: "bjifj2fd06hj1hkg1r",
                    query: "",
                    extra: {
                        videoPath: e,
                        videoTopics: ["木筏世界迷你版"]
                    },
                    success() {
                        t && t.runWith(!0), Le.RecorderMgr.start(!0);
                    },
                    fail(e) {
                        console.log("分享视频失败", e), t && t.runWith(!1), Le.RecorderMgr.start(!0);
                    }
                });
            }).bind(this));
        }
        onClickVedio() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                e ? (Le.DataMgr.addGoldCount(20), Le.UIMgr.showTips("Diamonds +20"), this.confirmClickHanlde()) : Le.UIMgr.showTips("看完视频才能获得奖励");
            });
        }
        onClickCopy() {
            if (window.tt && window.tt.setClipboardData) {
                var e = {
                    data: "yurenyouxi888",
                    success(e) {
                        Le.UIMgr.showTips("复制成功");
                    },
                    fail(e) {
                        Le.UIMgr.showTips("复制失败");
                    }
                };
                window.tt.setClipboardData(e);
            }
        }
        confirmClickHanlde() {
            Le.SceneMgr.receiveSpecialComponent(this._shipInfo.Id), Le.UIMgr.closeUI(i.BuildOverUI);
        }
        close() {
            super.close();
        }
    }
    class Ne {
        constructor() {
            this.delayTime = 0, this.minScale = 0;
        }
        set owner(e) {
            this.monkeyBox = e, this.monkeyBox.frameOnce(2, this, this.onLoaded);
        }
        onLoaded() {
            this.monkeyBox.on(Laya.Event.MOUSE_DOWN, this, this.scaleSmall), this.monkeyBox.on(Laya.Event.MOUSE_UP, this, this.scaleBig),
                this.monkeyBox.on(Laya.Event.MOUSE_OUT, this, this.scaleBig);
        }
        scaleSmall() {
            Laya.Tween.to(this.monkeyBox, {
                scaleX: .95,
                scaleY: .95
            }, 100);
        }
        scaleBig() {
            Laya.Tween.to(this.monkeyBox, {
                scaleX: 1,
                scaleY: 1
            }, 50);
        }
    }
    class Ye extends Laya.Box {//
        constructor(e = 0) {
            super(), this.gameobject = null, this.icon = null, this.blackmask = null, this.buildbtn = null,
                this.woodicon = null, this.completebtn = null, this.doneobj = null, this.buffobj = null,
                this.buffval = null, this.moodicon = null, this.unlockobj = null, this.relyicon = null,
                this.unlocknum = null, this.unlocktxt = null, this.buildpro = null, this.proinfo = null,
                this.procore = null, this.buildprice = null, this.itemname = null, this.count = null,
                this.desc = null, this.floorobj = null, this.floorList = [], this.floorTextList = [],
                this._index = 0, this._buildId = 0, this._info = null, this._index = e;
            let t = Le.ResMgr.GetRes(C.BuildItem);
            this.gameobject = t.create(), this.addChild(this.gameobject), this.doneobj = this.gameobject.getChildByName("doneobj"),
                this.icon = this.gameobject.getChildByName("icon"), this.itemname = this.gameobject.getChildByName("itemname"),
                this.count = this.gameobject.getChildByName("count"), this.desc = this.gameobject.getChildByName("desc"),
                this.buildbtn = this.gameobject.getChildByName("buildbtn"), this.buildprice = this.buildbtn.getChildByName("buildprice"),
                this.woodicon = this.buildbtn.getChildByName("woodicon"), this.completebtn = this.gameobject.getChildByName("completebtn"),
                this.blackmask = this.gameobject.getChildByName("blackmask"), this.buffobj = this.gameobject.getChildByName("buffobj"),
                this.buffval = this.buffobj.getChildByName("buffval"), this.moodicon = this.buffobj.getChildByName("moodicon"),
                this.unlockobj = this.gameobject.getChildByName("unlockobj"), this.relyicon = this.unlockobj.getChildByName("relyicon"),
                this.unlocknum = this.unlockobj.getChildByName("unlocknum"), this.unlocktxt = this.unlockobj.getChildByName("unlocktxt"),
                this.buildpro = this.gameobject.getChildByName("buildpro"), this.proinfo = this.buildpro.getChildByName("proinfo"),
                this.procore = this.buildpro.getChildByName("procore"), this.floorobj = this.gameobject.getChildByName("floorobj");
            for (let e = 1; e <= 4; e++) {
                var i = this.floorobj.getChildByName("floor" + e);
                this.floorList.push(i), this.floorTextList.push(i.getChildAt(0));
            }
            Le.GameMgr.gameMode == U.Active ? (this.moodicon.skin = "game/game_wood_newyear.png",
                this.woodicon.skin = "game/game_wood_newyear.png") : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png",
                    this.woodicon.skin = "game/res_wood_icon.png"), this.initEvent();
        }
        initEvent() {
            this.buildbtn.on(Laya.Event.CLICK, this, this.buildbtnHandle), this.completebtn.on(Laya.Event.CLICK, this, this.completebtnHandle);
        }
        setInfo(e) {
            this.hideAllObj(), this._info = Le.CfgMgr.getComponentCfg(e.componentId), this.buildprice.text = De.ScoreToString(this._info.ResNumber),
                this.icon.skin = this._info.ResIcon,
                this.itemname.text = this._info.Name,
                this.desc.text = this._info.Desc,
                this.buffobj.visible = 0 != this._info.Value;
            if (1 == this._info.Type) {
                this.buffval.text = "+" + this._info.Value
            } else {
                2 == this._info.Type &&
                    (this.buffval.text = "+" + Math.floor(this._info.Value / 1e4 * 100) + "%")
            }
            if (Le.SceneMgr.isBoard(e.componentId)) {
                -2 == this._index ? (this._buildId = Le.SceneMgr.boardInfo.relyId,
                    e.unlockCount = Math.min(e.unlockCount, e.lockBoardCount)) : this._buildId = e.shipCubeId,
                    this.buildpro.visible = !1, this.count.text = "(" + e.unlockCount + "/" + e.lockBoardCount + ")"
                if (e.unlockCount < e.lockBoardCount) {
                    var t = Le.SceneMgr.getShipCubeInfo(this._buildId).ComponentId;
                    Le.SceneMgr.isBoard(t) ? (this.buildbtn.visible = !0, this.updateBuildbtnState())
                        : (this.unlockobj.visible = !0,
                            this.unlocktxt.text = "need",
                            this.unlocknum.text = "",
                            this.relyicon.skin = Le.CfgMgr.getComponentCfg(t).ResIcon);
                } else this.blackmask.visible = !0;
            } else {
                this._buildId = e.shipCubeId, this.count.text = "(" + e.unlockCount + "/" + e.lockCount + ")",
                    this.updateBuildState(e);
                switch (Le.DataMgr.level % 7) {
                    case 0:
                        this.relyicon.skin = "game/buildIcon53.png";
                        break
                    case 1:
                        this.relyicon.skin = "game/buildIcon53.png";
                        break
                    case 2:
                        this.relyicon.skin = "game/buildIcon53.png";
                        break
                    case 3:
                        this.relyicon.skin = "game/buildIcon116.png";
                        break
                    case 4:
                        this.relyicon.skin = "game/buildIcon79.png";
                        break
                    case 5:
                        this.relyicon.skin = "game/fin_ban-1.png";
                        break
                    case 6:
                        this.relyicon.skin = "game/S6_Board.png";
                        break
                }

            }
            if (this.count.x = this.itemname.x + this.itemname.width + 10, -1 == this._index) {
                this.floorobj.visible = !0;
                var i = Le.SceneMgr.getShipCubeInfo(this._buildId).Floor;
                for (let e = 0; e < this.floorList.length; e++) e + 1 <= i ? (this.floorList[e].visible = !0,
                    i == e + 1 ? (this.floorList[e].skin = "game/floorNumBG1.png", this.floorTextList[e].color = "#ffffff") : (this.floorList[e].skin = "game/floorNumBG2.png",
                        this.floorTextList[e].color = "#328fd6")) : this.floorList[e].visible = !1;
            }
        }
        updateBuildbtnState() {
            var e = 0;
            Le.GameMgr.gameMode == U.Active ? e = Le.DataMgr.eventMoodCount : Le.GameMgr.gameMode == U.Level && (e = Le.GameMgr.getMoodCount()),
                e >= this._info.ResNumber ? this.buildbtn.gray = !1 : this.buildbtn.gray = !0;
        }
        updateBuildState(e) {
            e.state == G.Idle ? Le.SceneMgr.boardInfo.unlockCount < e.lockBoardCount ?
                (this.unlockobj.visible = !0,
                    this.unlocknum.text = e.lockBoardCount.toString(),
                    this.blackmask.visible = !0
                ) : (this.buildbtn.visible = !0,
                    this.updateBuildbtnState()) : e.state == G.WaitBuild ? (this.buildpro.visible = !0,
                        this.procore.width = 0, this.proinfo.text = this._info.BuildingTime + "s", this.desc.text = "",
                        this.buffobj.visible = !1) : e.state == G.Building ? (this.buildpro.visible = !0,
                            this.desc.text = "", this.procore.skin = "game/achi_bar1.png", this.buffobj.visible = !1) : e.state == G.BuildOver ? (this.buildpro.visible = !0,
                                this.procore.skin = "game/build_completeuiBG.png", this.procore.width = 170, this.proinfo.text = "Build Complete",
                                this.completebtn.visible = !0, this.desc.text = "", this.buffobj.visible = !1) : e.state == G.Finish && (this.doneobj.visible = !0,
                                    this.blackmask.visible = !0);
        }
        updateProgress(e) {
            this.procore.width = e / (1e3 * this._info.BuildingTime) * 170, this.proinfo.text = Math.floor(this._info.BuildingTime - e / 1e3 + 1) + "s";
        }
        hideAllObj() {
            this.buildbtn.visible = !1, this.completebtn.visible = !1, this.blackmask.visible = !1,
                this.buffobj.visible = !1, this.unlockobj.visible = !1, this.doneobj.visible = !1,
                this.buildpro.visible = !1;
        }
        buildbtnHandle() {
            Le.SoundMgr.playBtnClick()
                , Le.SceneMgr.buildComponent(this._buildId)
                , Le.EventMgr.event(p.Game_HideBuildItem)
                , Le.SceneMgr.isBoard(this._info.Id) && Le.DataMgr.setArchieveValDic(R.BuildBoard, 1);
        }
        completebtnHandle() {
            Le.SoundMgr.playBtnClick(), Le.SceneMgr.buildComponentComplete(this._buildId);
        }
        destroy() {
            this.buildbtn.off(Laya.Event.CLICK, this, this.buildbtnHandle), this.completebtn.off(Laya.Event.CLICK, this, this.completebtnHandle),
                this.gameobject.destroy(), super.destroy();
        }
    }
    class We extends o.view.BuildUIUI {
        constructor(e) {
            super(), this._itemDic = {}, this._boardInfo = new ie(), this._selectIndex = -1,
                this._floornumArr = [this.floornum1, this.floornum2, this.floornum3, this.floornum4],
                this._btnArr = [this.firstbtn, this.secondbtn, this.thirdbtn, this.fourthbtn],
                this._listArr = [this.firstlist, this.secondlist, this.thirdlist, this.fourthlist],
                this._upgradeArr = [], this._dataSourceArr = [];
        }
        onAwake() {
            if (this.initView(), this.initEvent(), t.Platform == e.TouTAd ? this.showRandomReslutUI() : t.Platform == e.QQAd && Le.GameMgr.adIntervals >= 60 && Le.InterMgr.showInterstitialAd(e => {
                e && Le.GameMgr.startAdIntervalsTimer();
            }, Le.CfgMgr.getGlobalCfg("QQBuildInterstitialDelayTime")), t.Platform == e.WXAd) {
                this.window.bottom = 150, Te.closeBannerAd();
                var o = Le.CfgMgr.getGlobalCfg("BannerDelayTime");
                Laya.timer.once(o, this, this.showBanner), 0 == Le.CfgMgr.getGlobalCfg("BannerUpDown") && this.onBannerShow(null);
            }
            Le.GameMgr.buildUIOpenCount++, t.Platform != e.TouTAd && t.Platform != e.OPAd && t.Platform != e.VivoAd || (3 == Le.GameMgr.buildUIOpenCount && Le.DataMgr.level <= 2 && Le.UIMgr.openUI(i.EasterEggUI),
                this.tiptext.visible = !0, this.firstlist.bottom = 100, this.secondlist.bottom = 100,
                this.thirdlist.bottom = 100, this.fourthlist.bottom = 100), t.Platform == e.WXAd && (this.firstlist.bottom = 50,
                    this.secondlist.bottom = 50, this.thirdlist.bottom = 50, this.fourthlist.bottom = 50),
                t.Platform == e.IOS && (this.diamondobj.visible = !1, this.resobj.x = this.diamondobj.x);
        }
        showRandomReslutUI() {
            if (Math.random() < Le.CfgMgr.getGlobalCfg("RandomResultRato")) {
                var e = Le.CfgMgr.getGlobalCfg("RandomResultDelay");
                Laya.timer.once(e, this, () => {
                    Le.UIMgr.openUI(i.RandomResultUI);
                });
            }
        }
        showBanner() {
            Te.createBannerAd(Le.CfgMgr.getAdCfg(1).toString());
        }
        initView() {
            this.updateGoldHandle(), this.updateMoodHandle(), this.updateMoodIconHandle(), this._boardItem = new Ye(-2),
                this.window.addChild(this._boardItem), this._boardItem.top = 54, this._boardItem.centerX = 0,
                this.initUpgradeArrInfo();
            var e = Le.SceneMgr.buildInfoArr;
            for (let t = 0; t < e.length; t++) {
                Le.SceneMgr.getShipCubeInfo(e[t].shipCubeId).Sailing <= Le.SceneMgr.curSailIndex && (null == this._dataSourceArr[e[t].floor - 1] && (this._dataSourceArr[e[t].floor - 1] = []),
                    this._dataSourceArr[e[t].floor - 1].push(e[t]));
            }
            this.analyzeUpgradeInfo();
            for (let e = 0; e < this._btnArr.length; e++) this._dataSourceArr[e] && (this._dataSourceArr[e].sort((e, t) => e.lockBoardCount - t.lockBoardCount),
                this._btnArr[e].visible = !0, this._listArr[e].vScrollBarSkin = "", this._listArr[e].itemRender = Ye,
                this._listArr[e].renderHandler = new Laya.Handler(this, this.updateItemHandle, [e]),
                this._listArr[e].dataSource = this._dataSourceArr[e]);
            var t = Le.GameMgr.curBuildSelectIndex;
            0 == t ? this.firstClickHandle() : 1 == t ? this.secondClickHandle() : 2 == t ? this.thirdClickHandle() : 3 == t && this.fourthClickHandle(),
                this.updateFloorsnum(), this.updateTabbtnState();
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), this.regClick(this.firstbtn, this.firstClickHandle),
                this.regClick(this.secondbtn, this.secondClickHandle), this.regClick(this.thirdbtn, this.thirdClickHandle),
                this.regClick(this.fourthbtn, this.fourthClickHandle), Le.EventMgr.on(p.UI_UpdateGold, this, this.updateGoldHandle),
                Le.EventMgr.on(p.UI_UpdateMood, this, this.updateMoodHandle), Le.EventMgr.on(p.UI_UpdateMoodIcon, this, this.updateMoodIconHandle),
                Le.EventMgr.on(p.UI_UpdateBuildItem, this, this.updateBuildItem), Le.EventMgr.on(p.UI_UpdateBuildItemProgress, this, this.updateBuildItemProgress),
                Le.EventMgr.on(p.UI_ShipSink, this, this.shipSinkHandle), Le.EventMgr.on(p.UI_ShipSail, this, this.shipSinkHandle),
                Le.EventMgr.on(p.AD_BannerOpen, this, this.onBannerShow), Le.EventMgr.on(p.AD_BannerClose, this, this.onBannerHide);
        }
        onBannerShow(e) {
            var t = 240;
            if (1 == Le.CfgMgr.getGlobalCfg("BannerUpDown") && e && e.top) {
                var i = e.top, o = window.platform0.systeminfo.screenHeight;
                t = 1334 * ((o - i) / o) * (window.platform0.systeminfo.screenHeight / window.platform0.systeminfo.screenWidth - 1334 / 750 + 1);
            }
            this.window.bottom = t + 120;
        }
        onBannerHide() {
            1 == Le.CfgMgr.getGlobalCfg("BannerUpDown") && (this.window.bottom = 120);
        }
        updateMoodIconHandle() {
            Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png");
        }
        shipSinkHandle() {
            this.closeClickHandle();
        }
        analyzeUpgradeInfo() {
            for (let o = 0; o < this._upgradeArr.length; o++) {
                var e = !1;
                for (let n = 0; n < this._upgradeArr[o].length; n++) {
                    var t = this._upgradeArr[o][n], i = this.getBuildInfoInDataSourceArr(t);
                    null != i && (i.lockCount = n + 1, i.unlockCount < i.lockCount && (i.unlockCount <= n && !e ? (e = !0,
                        i.unlockCount = n) : this.removeDataSourceItem(t)));
                }
            }
        }
        getBuildInfoInDataSourceArr(e) {
            for (let i = 0; i < this._dataSourceArr.length; i++) for (let o = 0; o < this._dataSourceArr[i].length; o++) {
                var t = this._dataSourceArr[i][o];
                if (e == t.componentId) return t;
            }
            return null;
        }
        removeDataSourceItem(e) {
            for (let t = 0; t < this._dataSourceArr.length; t++) for (let i = 0; i < this._dataSourceArr[t].length; i++) {
                if (e == this._dataSourceArr[t][i].componentId) {
                    this._dataSourceArr[t].splice(i, 1);
                    break;
                }
            }
        }
        initUpgradeArrInfo() {
            var e = De.copyArr(Le.SceneMgr.buildInfoArr);
            for (let o = 0; o < e.length; o++) if (!this.isUpgradeArrContain(e[o].componentId)) {
                var t = Le.CfgMgr.getComponentCfg(e[o].componentId);
                if (t.UpgradeId > 0) {
                    var i = [t.Id];
                    this.getUpgradeId(t.Id, i), this._upgradeArr.push(i);
                }
            }
            e.sort((e, t) => e.lockBoardCount - t.lockBoardCount), e.sort((e, t) => e.unlockCount - t.unlockCount);
        }
        getUpgradeId(e, t) {
            Le.CfgMgr.getComponentCfg(e).UpgradeId;
        }
        isUpgradeArrContain(e) {
            var t = !1;
            for (let i = 0; i < this._upgradeArr.length; i++) if (-1 != this._upgradeArr[i].indexOf(e)) {
                t = !0;
                break;
            }
            return t;
        }
        updateItemHandle(e, t, i) {
            var o = this._dataSourceArr[e][i];
            t.setInfo(o), this._itemDic[o.shipCubeId] = t;
        }
        firstClickHandle() {
            0 != this._selectIndex && (this._selectIndex = 0, this.switchTabbtn()), Le.GameMgr.curBuildSelectIndex = this._selectIndex;
        }
        secondClickHandle() {
            1 != this._selectIndex && (this._selectIndex = 1, this.switchTabbtn()), Le.GameMgr.curBuildSelectIndex = this._selectIndex;
        }
        thirdClickHandle() {
            2 != this._selectIndex && (this._selectIndex = 2, this.switchTabbtn()), Le.GameMgr.curBuildSelectIndex = this._selectIndex;
        }
        fourthClickHandle() {
            3 != this._selectIndex && (this._selectIndex = 3, this.switchTabbtn()), Le.GameMgr.curBuildSelectIndex = this._selectIndex;
        }
        switchTabbtn() {
            for (let e = 0; e < this._btnArr.length; e++) e == this._selectIndex ? (this._btnArr[e].skin = "game/floorBG.png",
                this._listArr[e].visible = !0) : (this._btnArr[e].skin = "game/floorBG2.png", this._listArr[e].visible = !1);
            this.updateBoardInfo();
        }
        updateGoldHandle() {
            this.diamondnum.text = De.ScoreToString(Le.DataMgr.goldCount);
        }
        updateMoodHandle() {
            Le.GameMgr.gameMode == U.Active ? this.resnum.text = De.ScoreToString(Le.DataMgr.eventMoodCount) : Le.GameMgr.gameMode == U.Level && (this.resnum.text = De.ScoreToString(Le.GameMgr.getMoodCount()));
            for (const e in this._itemDic) this._itemDic.hasOwnProperty(e) && this._itemDic[e].updateBuildbtnState();
        }
        updateBuildItem() {
            this.updateBoardInfo(), this.updateFloorsnum(), this.updateTabbtnState();
            for (let e = 0; e < this._listArr.length; e++) this._listArr[e].refresh();
        }
        updateBuildItemProgress(e) {
            this._itemDic[e.id] && this._itemDic[e.id].updateProgress(e.time);
        }
        updateTabbtnState() {
            var e = Le.SceneMgr.relyIdArr;
            for (let i = 0; i < e.length; i++) {
                var t = Le.SceneMgr.getShipCubeInfo(e[i]);
                if (t.Floor > Le.SceneMgr.curSailIndex) {
                    this._btnArr[t.Floor - 1].visible = !0;
                    break;
                }
            }
        }
        updateBoardInfo() {
            this._boardInfo.shipCubeId = Le.SceneMgr.boardInfo.shipCubeId, this._boardInfo.componentId = Le.SceneMgr.boardInfo.componentId,
                this._boardInfo.unlockCount = Le.SceneMgr.boardInfo.unlockCount, this._boardInfo.relyId = Le.SceneMgr.boardInfo.relyId,
                this._boardInfo.floor = Le.SceneMgr.boardInfo.floor, this._boardInfo.lockBoardCount = Le.SceneMgr.floorBoardCountArr[this._selectIndex],
                this._boardItem.setInfo(this._boardInfo);
        }
        updateFloorsnum() {
            var e = Le.SceneMgr.unlockCountArr;
            for (let t = 0; t < e.length; t++) this._floornumArr[t].parent.visible = e[t] > 0,
                this._floornumArr[t].value = e[t].toString();
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.BuildUI);
        }
        close() {
            Le.EventMgr.off(p.UI_UpdateBuildItem, this, this.updateBuildItem), Le.EventMgr.off(p.UI_UpdateGold, this, this.updateGoldHandle),
                Le.EventMgr.off(p.UI_UpdateMood, this, this.updateMoodHandle), Le.EventMgr.off(p.UI_UpdateBuildItemProgress, this, this.updateBuildItemProgress),
                Le.EventMgr.off(p.UI_ShipSink, this, this.shipSinkHandle), Le.EventMgr.off(p.UI_ShipSail, this, this.shipSinkHandle),
                Le.EventMgr.off(p.AD_BannerOpen, this, this.onBannerShow), Le.EventMgr.off(p.AD_BannerClose, this, this.onBannerHide),
                this._boardItem.destroy(), this._boardItem = null;
            for (const e in this._itemDic) this._itemDic.hasOwnProperty(e) && (this._itemDic[e].destroy(),
                this._itemDic[e] = null);
            this._itemDic = null, Laya.timer.clearAll(this), t.Platform != e.WXAd && t.Platform != e.QQAd || Te.closeBannerAd(),
                Le.InterMgr.closeInterstitialAd(), super.close();
        }
    }
    class Xe extends Laya.Box {
        constructor() {
            super();
            var e = Le.CfgMgr.questCfg, t = {};
            for (let a = 1; a <= e.length; a++) {
                var i = e[a], o = i.AboveQuestId, n = i.StageId;
                null == t[o] && (t[o] = 0), (null == t[o] || t[o] < n) && (t[o] = n);
            }
            var a = 0, s = 0;
            for (var r in this.size(0, 0), t) {
                var l = Le.ResMgr.GetRes(C.ChapterItem), h = l.create();
                this.addChild(h), h.getChildByName("txtlevel").text = "" + r, h.getChildByName("txtname").text = Le.CfgMgr.getMapCfg(r).Name;
                for (let e = 1; e <= t[r]; e++) {
                    var d = (l = Le.ResMgr.GetRes(C.ChapterQuestItem)).create();
                    h.addChild(d), d.pos(0, 70 + 120 * (e - 1));
                    var g = d.getChildByName("icon"), c = d.getChildByName("imgbarbg"), p = d.getChildByName("txttips"), m = c.getChildByName("imgbar"), u = c.getChildByName("txtcount"), f = Le.GameMgr.getStageQuestCount(r, e), y = Le.GameMgr.getCompleteCount(r, e);
                    g.skin = Le.CfgMgr.getIslandCfg(De.TransferStringToNumberArr(Le.CfgMgr.getMapCfg(r).Islands)[e - 1]).IconRes,
                        m.width = y / f * 285, u.text = y + "/" + f, h.height = 200 + 120 * (e - 1), d.disabled = Number(r) > Le.DataMgr.level,
                        Number(r) == Le.DataMgr.level && (d.disabled = e > Le.DataMgr.levelStage), d.disabled && (c.visible = !1),
                        p.visible = !c.visible;
                }
                this.size(h.width, this.height + h.height), h.y = s + a, s = h.y, a = h.height;
            }
        }
    }
    class Fe extends o.view.ChapterUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            this.listobj.itemRender = Xe, this.listobj.vScrollBarSkin = "", this.listobj.repeatX = 1,
                this.listobj.repeatY = 1, this.listobj.renderHandler = new Laya.Handler(this, (e, t) => { }),
                this.listobj.dataSource = [1], De.UIdoScale(this.window);
        }
        initEvent() {
            this.regClick(this.closebtn, this.clickclose);
        }
        clickclose() {
            Le.UIMgr.closeUI(i.ChapterUI);
        }
        close() {
            super.close();
        }
    }
    class Qe extends o.view.ChristmasGiftUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            this.updateUI();
        }
        initEvent() {
            this.regClick(this.btnGet, this.onClickGetGift), this.regClick(this.btnVedio, this.onClickVedio),
                this.regClick(this.btnclose, this.onClickClose);
        }
        update() {
            var e = Le.SceneMgr.christmastree.wishTime - De.getCurrentTime();
            if (!e && e != 0) {
                e = 0;
            }
            e >= 0 ? this.txttime.text = De.transferSecondToHMS(e / 1e3) : (Laya.timer.clear(this, this.update), this.updateUI());
        }
        updateUI() {
            Le.SceneMgr.christmastree.canGetGift ? (this.txttip.text = "Gathering of gifts", this.timeobj.visible = !1,
                this.resultobj.visible = !0, this.btnGet.visible = !0, this.btnVedio.visible = !1,
                this.resulticon.visible = !1, this.resultcount.color = "#818181", 0 == Le.DataMgr.christmasGiftResultType ? (this.resulticon.skin = "",
                    this.resultcount.text = "Diamond +" + Le.DataMgr.christmasGiftResultCount) : 1 == Le.DataMgr.christmasGiftResultType ? (this.resulticon.skin = "",
                        this.resultcount.text = "Wood +" + Le.DataMgr.christmasGiftResultCount) : 2 == Le.DataMgr.christmasGiftResultType && (this.resulticon.visible = !1,
                            this.resultcount.text = "Obtain 60 seconds construction acceleration")) :
                (this.txttip.text = "Treasure bowl gift in preparation...", this.txtmaxcount.text = "MAX " + Le.DataMgr.christmasGiftCount + "/" + Le.SceneMgr.christmastree._dayMaxCount,
                    this.timeobj.visible = !0, this.resultobj.visible = !1, this.btnGet.visible = !1,
                    this.btnVedio.visible = !0, Laya.timer.loop(1e3, this, this.update), this.update());
        }
        onClickGetGift() {
            Le.SceneMgr.christmastree.getWishGift(), this.onClickClose();
        }
        onClickVedio() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(12).toString(), this, this.onVedioCallBack.bind(this));
        }
        onVedioCallBack(e) {
            e ? this.onClickGetGift() : Le.UIMgr.showTips("看完视频才能领取奖励哦！");
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.ChristmasGiftUI);
        }
        close() {
            super.close();
        }
    }
    class qe extends o.view.ChristmasWishUIUI {
        constructor() {
            super(), this._diamCost = 10;
        }
        onAwake() {
            this._diamCost = Number(Le.CfgMgr.getGlobalCfg("ChristmasWishCost")), this.initView(),
                this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            this.txtcost.text = "" + this._diamCost;
        }
        initEvent() {
            this.regClick(this.btnVedio, this.onClickVedio), this.regClick(this.btnDiam, this.onClickDiam),
                this.regClick(this.btnclose, this.onClickClose);
        }
        onClickVedio() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(35).toString(), this, this.onVedioCallBack.bind(this));
        }
        onVedioCallBack(e) {
            e ? this.wish() : Le.UIMgr.showTips("看完视频才能完成许愿哦！");
        }
        onClickDiam() {
            Le.DataMgr.goldCount < this._diamCost ? Le.UIMgr.showTips("Diamonds Are Not Enough!") :
                (Le.DataMgr.addGoldCount(-this._diamCost),
                    this.wish());
        }
        wish() {
            Le.SceneMgr.christmastree.levelUp(), this.onClickClose();
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.ChristmasWishUI);
        }
        close() {
            super.close();
        }
    }
    class Ke extends o.view.DoubleResUIUI {
        constructor() {
            super(), this._opencount = 100, this._bufftime = 5;
        }
        onAwake() {
            De.UIdoScale(this.window), this.initView(), this.initEvent(), t.Platform == e.WXAd && (Te.reportUserBehaviorBranchAnalytics({
                branchId: "BCBgAAoXHx5d1yAit9Bo6B",
                eventType: 1
            }), Te.reportUserBehaviorBranchAnalytics({
                branchId: "BCBgAAoXHx5d1yAit9Bo6C",
                eventType: 1
            }), Te.reportUserBehaviorBranchAnalytics({
                branchId: "BCBgAAoXHx5d1yAit9Bo6D",
                eventType: 1
            }));
        }
        initView() {
            this._opencount = Le.CfgMgr.getGlobalCfg("DoubleResCost"), this._bufftime = Le.CfgMgr.getGlobalCfg("DoubleResTime"),
                this.txtcount.text = "" + this._opencount, this.txtmax.text = Le.GameMgr.doubleResMax >= 60 ? Le.GameMgr.doubleResMax / 60 + "h" : Le.GameMgr.doubleResMax + "m",
                this.txttips.text = "Resources doubled", Laya.timer.loop(100, this, this.update), this.update(),
                t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd || (this.vediobox = new Re(this, 327, 867));
        }
        update() {
            var e = Le.GameMgr.doubleResBuffTime();
            e > 0 ? (this.txttime.text = De.transferSecondToMS(e, !0), this.timeprogress.value = Math.min(e / (60 * Le.GameMgr.doubleResMax), 1)) : (this.txttime.text = "",
                this.timeprogress.value = 0, Le.DataMgr.doubleMaxRes = 0, Laya.timer.clear(this, this.update));
        }
        initEvent() {
            this.regClick(this.btnopen, this.onClickOpen), this.regClick(this.btnvedio, this.onClickVedio),
                this.regClick(this.closebtn, this.onClickClose);
        }
        onClickClose() {
            Te.reportUserBehaviorBranchAnalytics({
                branchId: "BCBgAAoXHx5d1yAit9Bo6B",
                eventType: 2
            }), Le.UIMgr.closeUI(i.DoubleResUI);
        }
        doubleRes() {
            if (Le.GameMgr.doubleResBuffTime() > 0) {
                if (Le.DataMgr.doubleTime + this._bufftime - De.getCurrentTime() / 1e3 > 60 * Le.GameMgr.doubleResMax) return Le.UIMgr.showTips("Max Time"),
                    !1;
                Le.DataMgr.doubleTime += this._bufftime;
            } else Le.DataMgr.doubleTime = Math.floor(De.getCurrentTime() / 1e3) + this._bufftime,
                Laya.timer.loop(100, this, this.update), this.update();
            return !0;
        }
        onClickOpen() {
            Le.DataMgr.goldCount < this._opencount ? Le.UIMgr.showTips("Diamonds Are Not Enough!") : this.doubleRes() && (Le.DataMgr.addGoldCount(-this._opencount),
                Le.EventMgr.event(p.UI_UpdateGold), Te.reportUserBehaviorBranchAnalytics({
                    branchId: "BCBgAAoXHx5d1yAit9Bo6C",
                    eventType: 2
                }));
        }
        onClickVedio() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, this.vedioCallBack.bind(this));
        }
        vedioCallBack(e) {
            De.SendEvent("资源产出加速看视频数量"), e ? (this.doubleRes(), Le.UIMgr.showTips("Accelerated Successfully"),
                Te.reportUserBehaviorBranchAnalytics({
                    branchId: "BCBgAAoXHx5d1yAit9Bo6D",
                    eventType: 2
                })) : Le.UIMgr.showTips("看完视频才能获得奖励哦!");
        }
        close() {
            this.vediobox && this.vediobox.destroy(), super.close();
        }
    }
    class Ze extends o.view.EasterEggUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            1 == Le.DataMgr.level ? (this.icon.skin = "game/egg_img2.png", this.message.text = "一名优秀的海上王者，是从不断的捡瓶子开始的，连续捡到两个瓶子会有惊喜哟！",
                this.taskdesc.text = "任务：捡2个漂流瓶") : Le.DataMgr.level >= 2 && (this.icon.skin = "game/egg_img.png",
                    this.message.text = "我是锁龙，我在等那个男人来接我路菲，我在前面的岛屿等你！", this.taskdesc.text = "任务：造好船去接锁龙");
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose);
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.EasterEggUI);
        }
        close() {
            super.close();
        }
    }
    class Je extends o.view.FollowQQUIUI {
        constructor() {
            super(), this._data = null, this.unlockid = 0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        updateData(e) {
            this._data = e;
        }
        initView() {
            if (1 == this._data.type) {
                this.unlockid = 23, this.title.skin = "game/ship_title.png";
                var i = Le.CfgMgr.getBoatmanCfg(this.unlockid);
                this.imgicon.skin = i.IconUrl, this.bufftips.text = 1 == i.TimeBuff ? "Get faster production speed on the same day" : "Get permanent production acceleration";
                var o = De.TransferStringToNumberArr(i.FeatureBuff);
                this.buffval.text = "+" + o[Le.SceneMgr.getCurLevelId() - 1] / 100 + "%",
                    this.followtext.text = "Free(" + Le.DataMgr.qqfollowVedioCount + "/" + Le.CfgMgr.getGlobalCfg("qqfollowVedioTotalCount") + ")"
            } else if (2 == this._data.type)
                if (this.title.skin = "game/pet_title.png", this.btnicon.skin = "game/video_big.png",
                    this.followtext.text = "Free", Le.DataMgr.getunlockBoatmanDic(24)) {
                    if (!Le.DataMgr.getunlockBoatmanDic(25)) {
                        this.unlockid = 25;
                        i = Le.CfgMgr.getBoatmanCfg(this.unlockid);
                        this.bufftips.text = 1 == i.TimeBuff ? "Get faster production speed on the same day" : "Get permanent production acceleration", this.imgicon.skin = i.IconUrl;
                        o = De.TransferStringToNumberArr(Le.CfgMgr.getBoatmanCfg(this.unlockid).FeatureBuff);
                        this.buffval.text = "+" + o[Le.SceneMgr.getCurLevelId() - 1] / 100 + "%";
                    }
                } else {
                    this.unlockid = 24;
                    var i = Le.CfgMgr.getBoatmanCfg(this.unlockid);
                    this.bufftips.text = 1 == i.TimeBuff ? "Get faster production speed on the same day" : "Get permanent production acceleration",
                        this.imgicon.skin = i.IconUrl,
                        t.Platform == e.TouTAd && (this.btnicon.skin = "game/video_big.png", this.followtext.text = "分享录屏");
                    var o = De.TransferStringToNumberArr(Le.CfgMgr.getBoatmanCfg(this.unlockid).FeatureBuff);
                    this.buffval.text = "+" + o[Le.SceneMgr.getCurLevelId() - 1] / 100 + "%";
                } else 3 == this._data.type && (this.unlockid = 29, this.title.skin = "game/hero_title.png",
                    this.followtext.text = "Free", this.bufftips.text = "Get faster production speed on the same day", this.buffval.text = "+5%",
                    this.imgicon.skin = Le.CfgMgr.getBoatmanCfg(this.unlockid).IconUrl);
            t.Platform == e.QQAd ? this.btnicon.skin = "game/video_big.png" : t.Platform == e.WXAd && (
                // 1 == this._data.type ?
                // this.btnicon.skin = "game/share.png" :
                2 == this._data.type && (this.btnicon.skin = "game/video_big.png"));
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose), this.regClick(this.btnfollow, this.onClikcFollow);
        }
        onClikcFollow() {
            1 == this._data.type ? De.onClickWatchTV(Le.CfgMgr.getAdCfg(34).toString(), this, e => {
                e && (Le.DataMgr.qqfollowVedioCount++, this.initView(),
                    Le.DataMgr.qqfollowVedioCount >= Le.CfgMgr.getGlobalCfg("qqfollowVedioTotalCount") && (this.unlockBoatman(this.unlockid),
                        this.onClickClose()));
            }) : 2 == this._data.type ? (De.onClickWatchTV(Le.CfgMgr.getAdCfg(35).toString(), this, e => {
                e && (24 == this.unlockid ? (this.unlockBoatman(this.unlockid), this.initView()) : 25 == this.unlockid &&
                    (this.unlockBoatman(this.unlockid),
                        // Le.DataMgr.setArchieveValDic(R.CollectAnimal, 1),
                        this.onClickClose()));
            })) : 3 == this._data.type && De.onClickWatchTV(Le.CfgMgr.getAdCfg(35).toString(), this, (e => {
                e && (Le.DataMgr.getunlockBoatmanDic(this.unlockid) || (this.unlockBoatman(this.unlockid),
                    // Le.DataMgr.setArchieveValDic(R.CollectCrew, 1),
                    this.onClickClose()));
            }).bind(this));
        }
        unlockBoatman(e) {
            Le.DataMgr.setunlockBoatmanDic(e),
                Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(e)),
                Le.EventMgr.event(p.UI_UpdateDot),
                Le.UIMgr.openUI(i.UnlockSkinUI, {
                    Id: e,
                    sign: !1
                });
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.FollowQQUI);
        }
        close() {
            super.close();
        }
    }
    class $e extends o.view.FollowTTUIUI {
        constructor() {
            super(), this.unlockid = 23;
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            Laya.timer.frameLoop(1, this, this.update);
        }
        update() {
            this.imglight.rotation += 2;
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose), this.regClick(this.btnfollow, this.onClikcFollow),
                this.regClick(this.btnok, this.onClickOk);
        }
        onClickOk() {
            Le.DataMgr.getunlockBoatmanDic(this.unlockid) ? this.onClickClose() : (Le.DataMgr.setunlockBoatmanDic(this.unlockid),
                Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(this.unlockid)), Le.EventMgr.event(p.UI_UpdateDot),
                Le.UIMgr.openUI(i.UnlockSkinUI, {
                    Id: this.unlockid,
                    sign: !1
                }), this.onClickClose());
        }
        onClikcFollow() {
            var i = Laya.Handler.create(this, e => {
                console.log("---- 关注账号 success, res:", e), Le.DataMgr.getunlockBoatmanDic(this.unlockid) ? this.onClickOk() : e.hasFollowed ? (this.window.visible = !1,
                    this.unlockwindow.visible = !0) : Le.UIMgr.showTips("需要关注抖音账号才能获得奖励！");
            }), o = Laya.Handler.create(this, e => {
                console.log("---- 关注账号 fail,", e), Le.DataMgr.getunlockBoatmanDic(this.unlockid) ? this.onClickOk() : Le.UIMgr.showTips("关注抖音账号失败！");
            });
            if (t.Platform == e.TouTAd) {
                var n = window.platform0.systeminfo;
                "Douyin" == n.appName || "douyin_lite" == n.appName ? window.tt.openAwemeUserProfile ? window.tt.openAwemeUserProfile({
                    success: function (e) {
                        i.runWith(e);
                    },
                    fail: function (e) {
                        o.runWith(e);
                    },
                    complete: function (e) { }
                }) : Le.UIMgr.showTips("APP版本过低，无法关注账号!") : Le.UIMgr.showTips("请使用抖音APP登陆游戏关注");
            }
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.FollowTTUI);
        }
        close() {
            super.close();
        }
    }
    class et extends o.view.GetRedMoneyUIUI {
        constructor() {
            super(), this._type = 0, this._money = 0, this._videoFlag = !0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        updateData(e) {
            this._type = e.type, this._videoFlag = null == e.videoFlag || e.videoFlag, this._money = e.money;
        }
        initView() {
            this._type == E.NewPlayer ? (this.desc.text = "新人专属红包", this.videoinfo.visible = !1) : this._type == E.Balance ? (this.videoinfo.visible = !0,
                this.desc.text = "最高可获得10元红包") : this._type == E.AnyOne && (this.videoinfo.visible = !0,
                    this.desc.text = "无门槛红包");
        }
        initEvent() {
            this.regClick(this.openbtn, this.openClickHandle), this.regClick(this.closebtn, this.closeClickHandle);
        }
        openClickHandle() {
            this._type != E.NewPlayer ? De.onClickWatchTV(Le.CfgMgr.getAdCfg(30).toString(), this, (e => {
                e ? this._type == E.Balance ? (De.SendEvent("水面漂浮红包看视频数量"), Le.UIMgr.openUI(i.MoneyRewardUI, {
                    money: this._money
                })) : this._type == E.AnyOne && (Le.DataMgr.boxRedMoneyCount++, Le.UIMgr.showTips("恭喜获得无门槛红包!")) : Le.UIMgr.showTips("看完视频才能领取红包!"),
                    this.closeClickHandle();
            }).bind(this)) : (De.SendLevelEvent("红包领取"), De.CreateRedBag(this._money, E.NewPlayer),
                this.closeClickHandle());
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.GetRedMoneyUI);
        }
        close() {
            super.close();
        }
    }
    class tt extends o.view.HeroMBGUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() { }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose), this.regClick(this.btnfollow, this.onClickVedio);
        }
        onClickVedio() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(35).toString(), this, this.watchtvback.bind(this));
        }
        watchtvback(e) {
            if (e) {
                Le.DataMgr.setunlockBoatmanDic(26), Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(26)),
                    Le.EventMgr.event(p.UI_UpdateDot), Le.UIMgr.openUI(i.UnlockSkinUI, {
                        Id: 26,
                        sign: !1
                    }), this.onClickClose();
            } else Le.UIMgr.showTips("看完视频才可获得奖励哦");
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.HeroMBGUI);
        }
        close() {
            super.close();
        }
    }
    class it extends o.view.InviteUIUI {
        onAwake() {
            super.onAwake(), this.init();
        }
        init() {
            "" != Le.DataMgr.sharetime && null != Le.DataMgr.sharetime || (Le.DataMgr.sharetime = De.getCurrentDate()),
                Le.DataMgr.sharetime != De.getCurrentDate() && (Le.DataMgr.sharecount = 0, Le.DataMgr.resetShareResult()),
                this.initEvent(), this.initView(), e.WXAd != t.Platform && Le.BannerMgr.createBanner(Le.CfgMgr.getAdCfg(10).toString());
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose);
        }
        initView() {
            this.daylist.hScrollBarSkin = "", this.invitedfirendlist.vScrollBarSkin = "", this.daylist.array = [],
                this.invitedfirendlist.array = [], this.initDayInvite(), this.initInvited();
        }
        initDayInvite() {
            var e = [], t = Le.CfgMgr.getGlobalCfg("DayInviteResult").split("|");
            for (let n = 0; n < t.length; n++) {
                var i = De.TransferStringToNumberArr(t[n]), o = {
                    index: n + 1,
                    url: null,
                    price: i[1],
                    type: i[0]
                };
                e.push(o);
            }
            this.daylist.array = e, this.daylist.elasticEnabled = e.length > 3;
        }
        initInvited() {
            var e = [], t = Le.CfgMgr.getGlobalCfg("InvitedCountResult").split("|");
            for (let a = 0; a < t.length; a++) {
                var i = De.TransferStringToNumberArr(t[a]), o = a + 1, n = {
                    index: a + 1,
                    flag: o < Le.DataMgr.sharecount,
                    price: i[1],
                    type: i[0],
                    isget: Le.DataMgr.shareresult[o]
                };
                e.push(n);
            }
            this.invitedfirendlist.array = e;
        }
        onClickClose() {
            Te.closeBannerAd(), Le.UIMgr.closeUI(i.InviteUI);
        }
    }
    class ot extends o.view.DayInvitePlayerUI {
        constructor() {
            super(), this.flag = !1, this.price = 0, this.type = 0, this.index = 0, this.btninvite.on(Laya.Event.CLICK, this, this.onClick);
        }
        set dataSource(e) {
            e && (this.price = e.price, this.type = e.type, this.index = e.index, this.textresult.text = "奖励：       " + De.ScoreToString(e.price),
                this.resicon.skin = 1 == e.type ? "invite/res_gem_icon.png" : "invite/res_wood_icon.png",
                "" == e.url || null == e.url ? (this.flag = !1, this.textbtn.text = "去邀请", this.btninvite.skin = "invite/b_btn_invite_orange.png") : (this.flag = !0,
                    this.headicon.skin = e.url, this.textbtn.text = "已邀请", this.btninvite.skin = "invite/b_btn_invite_green.png"));
        }
        onClick() {
            this.flag || (De.SendEvent("好友助力分享出去数量"), De.ShareGame(null));
        }
    }
    class nt extends o.view.InvitedFriendItemUI {
        constructor() {
            super(), this.flag = !1, this.type = 0, this.result = 0, this.index = 0, this.isget = !1,
                this.btnget.on(Laya.Event.CLICK, this, this.onClick);
        }
        set dataSource(e) {
            e && (this.type = e.type, this.index = e.index, this.flag = e.flag, this.result = e.price,
                this.isget = e.isget, this.txtinvited.text = "第" + De.AddingZero(this.index, 2) + "位好友      奖励：   " + De.ScoreToString(this.result),
                this.btnget.skin = this.flag ? "invite/b_btn_invite_green.png" : "invite/b_btn_invite_orange.png",
                this.textbtn.text = this.flag ? "领取" : "去邀请", this.imgresicon.skin = 1 == this.type ? "invite/res_gem_icon.png" : "invite/res_wood_icon.png",
                this.textbtn.color = this.isget ? "#05299a" : "#ffffff", this.flag && (this.textbtn.text = this.isget ? "已领取" : "领取"),
                this.btnget.visible = 1 != Le.DataMgr.shareresult[this.index]);
        }
        _update() {
            this.txtinvited.text = "第" + De.AddingZero(this.index, 2) + "位好友      奖励：   " + De.ScoreToString(this.result),
                this.btnget.skin = this.flag ? "invite/b_btn_invite_green.png" : "invite/b_btn_invite_orange.png",
                this.textbtn.text = this.flag ? "领取" : "去邀请", this.imgresicon.skin = 1 == this.type ? "invite/res_gem_icon.png" : "invite/res_wood_icon.png",
                this.textbtn.color = this.isget ? "#05299a" : "#ffffff", this.flag && (this.textbtn.text = this.isget ? "已领取" : "领取",
                    this.btnget.visible = !this.isget);
        }
        onClick() {
            this.flag ? (this.isget = !0, Le.DataMgr.shareresult = this.index, 1 == this.type ? (Le.DataMgr.addGoldCount(this.result),
                Le.UIMgr.showTips("Diamond +" + De.ScoreToString(this.result)), Le.EventMgr.event(p.UI_UpdateGold)) : 2 == this.type && (Le.DataMgr.addMoodCount(this.result),
                    Le.UIMgr.showTips("Wood +" + De.ScoreToString(this.result)), Le.EventMgr.event(p.UI_UpdateMood)),
                this._update()) : De.ShareGame(Laya.Handler.create(this, e => {
                    De.SendEvent("好友助力分享出去数量"), e && (Le.DataMgr.sharecount++, this.flag = !0, this._update());
                }));
        }
    }
    class at extends o.view.LoadUIUI {
        constructor() {
            super(), this.currentFarm = 0, this._progressWidth = 466, this._initFlag = !1;
        }
        onEnable() {
            this.zOrder = 999999, Le.DataMgr.gameTime <= 0 && (De.SendEvent("注册用户数量"), Le.GameMgr.firstclick = !1),
                Le.GameMgr.firstclick = !0, Le.GameMgr.loadtime = De.getCurrentTime(), this.regEvent(p.Res_Load_Progress, this.updateBar),
                this.regEvent(p.Res_Load_Complete, this.complete), Be.instance.login();
            var i = 0;
            platform.getInstance().yadstartup("Idle-Arks-Sail-And-Build", () => {
                window.yad.on(Laya.Event.MOUSE_DOWN, window.yad, () => { platform.getInstance().navigate("GAME", "LOGO"); });
                window.WebAudioEngine.pause = Laya.LocalStorage.getJSON("Idle-Arks-Build-At-Sea-Music") || false;
                (i = 3e3, this.start.visible = !0), Laya.timer.once(i, this, () => {
                    if (this.start.visible = !1, true)
                        if (true)
                            this.startInitGame();
                        else {
                            var i = ["3dprefabs", "3dscenes", "game"];
                            o = i.length;
                            Laya.Tween.to(this.progress, {
                                width: 1 / o * this._progressWidth
                            }, 3e3);
                            s = this;
                        }
                    else {
                        var o = 6;
                        var a, s = this;
                        Laya.Tween.to(this.progress, {
                            width: 1 / o * this._progressWidth
                        }, 3e3), (a = function (e) {
                            window.platform0.loadSubpackage({
                                name: "stage" + e,
                                success: function (t) {
                                    s.updateBar(e / o), Laya.Tween.clearAll(s.progress), Laya.Tween.to(s.progress, {
                                        width: e * s._progressWidth / o
                                    }, 3e3), e >= o ? s.startInitGame() : a(e + 1);
                                },
                                fail: function (t) {
                                    console.warn("分包加载失败" + e, t);
                                }
                            });
                        })(1);
                    }
                });
            })
        }
        startInitGame() {
            this._initFlag || (this._initFlag = !0,
                t.Gid = "5f804025f052a13697b244c3", g.init(t.Gid, null, (e, t) => { })),
                Le.DataMgr.init(), Le.ResMgr.PreloadResources();
        }
        complete(e = 0) {
            if (e > 99) {
                Le.SceneMgr.loadScene((() => {
                    platform.getInstance().hideSplash();
                    platform.getInstance().showBanner();
                    Le.UIMgr.toUI(i.MainUI);
                }).bind(this));
            }
        }
        updateBar(e) {
            e > 1 && (e = 1), this.progress.x = e * this._progressWidth - this._progressWidth;
        }
        animUpdate() { }
        close() {
            super.close();
        }
    }
    class st extends o.view.LotteryUIUI {
        constructor(i) {
            super(), this._rewardList = [], this._rotationArr = [30, -30, -90, -150, -210, -270, -330],
                this._rewardIndex = 0, this.vedioflag = !1, e.WXAd != t.Platform && (i.adunit = Le.CfgMgr.getAdCfg(12));
        }
        onAwake() {
            this.initView(), this.initEvent(), t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd || (this.vediobox = new Re(this, 327, 867));
        }
        initView() {
            this.pointer.rotation = 0;
            var i = De.SplitToStr(Le.CfgMgr.getGlobalCfg("LotteryReward"), "|");
            for (let e = 0; e < i.length; e++) {
                var o = De.TransferStringToNumberArr(i[e]), n = o[1];
                if (1 == o[0]) this["reward" + (e + 1)].text = n, this["rewardicon" + (e + 1)].skin = "game/sign_diamond.png"; else if (2 == o[0]) n = Math.floor(n * Le.DataMgr.level + n * (Le.SceneMgr.buildPro / 100)),
                    this["reward" + (e + 1)].text = De.ScoreToString(n), this["rewardicon" + (e + 1)].skin = "game/sign_wood.png"; else if (o[0] >= 3) {
                        var a = Le.CfgMgr.getBoatmanCfg(n);
                        this["reward" + (e + 1)].text = a.Name, this["reward" + (e + 1)].fontSize = 30,
                            this["rewardicon" + (e + 1)].skin = a.IconUrl, this["rewardicon" + (e + 1)].width = 50,
                            this["rewardicon" + (e + 1)].height = 67;
                    }
                this._rewardList.push({
                    id: o[0],
                    count: n
                });
            }
            Le.DataMgr.lotterytime != De.getCurrentDate() && (Le.DataMgr.lotterytime = De.getCurrentDate(),
                Le.DataMgr.lotterycount = 0), this.vedioflag = 1 == Le.DataMgr.lotterycount, 0 == Le.DataMgr.lotterycount ? (this.adicon.visible = !1,
                    this.lotterytext.text = "Free", t.Platform == e.TouTAd && (this.lotterytext.text = "分享免费抽奖")) : (this.adicon.visible = !0,
                        this.adicon.skin = "game/video_sign.png", this.lotterytext.text = "Draw", t.Platform == e.WXAd ? this.adicon.skin = 1 == Le.DataMgr.lotterycount ? "game/video_sign.png" : "game/ad_share.png" : t.Platform != e.OPAd && t.Platform != e.VivoAd && t.Platform != e.MeiZu || (this.adicon.skin = "game/video_sign.png",
                            this.vedioflag = !0));
        }
        addlotterycount() {
            Le.DataMgr.lotterycount++, Le.DataMgr.lotterycount > 2 && (Le.DataMgr.lotterycount = 0);
        }
        initEvent() {
            this.regClick(this.lotterybtn, this.lotteryClickHandle), this.regClick(this.getbtn, this.getClickHandle),
                this.regClick(this.backbtn, this.closeClickHandle);
        }
        getLotteryBoatmanId() {
            var e = 0, t = [], i = Le.CfgMgr.boatmanCfg.length;
            for (let e = 1; e <= i; e++) {
                var o = Le.CfgMgr.getBoatmanCfg(e);
                2 == o.Unlock && t.push(o.Id);
            }
            return t.length > 0 && (e = t[De.random(0, t.length - 1)]), e;
        }
        lotteryClickHandle() {
            this.addlotterycount(), this.adicon.visible ? De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                De.SendEvent("转盘看视频数量"), e ? this._lottery() : Le.UIMgr.showTips("看完视频才可以获得奖励哦");
            }) : this._lottery();
        }
        _lottery() {
            this.backbtn.visible = !1, this.lotterybtn.visible = !1;
            var e = [0, 1, 2, 3, 4, 5, 1, 1, 1, 1, 1, 4, 4, 4, 4];
            this._rewardIndex = e[De.random(0, e.length - 1)];
            var t = De.random(this._rotationArr[this._rewardIndex], this._rotationArr[this._rewardIndex + 1]);
            Laya.Tween.to(this.reward, {
                rotation: t + 1800
            }, 3e3, Laya.Ease.circOut, Laya.Handler.create(this, () => {
                this.lotterybtn.visible = !1, this.getbtn.visible = !0, this.backbtn.visible = !0;
            }));
        }
        getClickHandle() {
            var e = this._rewardList[this._rewardIndex];
            1 == e.id ? (Le.DataMgr.addGoldCount(e.count), Le.UIMgr.showTips("Diamonds +" + e.count),
                Le.EventMgr.event(p.UI_UpdateGold)) : 2 == e.id ? (Le.DataMgr.addMoodCount(e.count),
                    Le.UIMgr.showTips("Resources +" + e.count), Le.EventMgr.event(p.UI_UpdateMood, !0)) : 3 == e.id ? (Le.DataMgr.getunlockBoatmanDic(e.count) || Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(e.count)),
                        Le.UIMgr.openUI(i.UnlockSkinUI, {
                            Id: e.count
                        })) : 4 == e.id && (Le.DataMgr.getunlockBoatmanDic(e.count) || Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(e.count)),
                            Le.UIMgr.openUI(i.UnlockSkinUI, {
                                Id: e.count
                            })), this.closeClickHandle();
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.LotteryUI);
        }
        close() {
            Te.closeBannerAd(), this.vediobox && this.vediobox.destroy(), super.close();
        }
    }
    class rt extends o.view.MainResultUIUI {
        constructor() {
            super(), this.speed = 2, this.demcount = 50, this.woodcount = 1e4, this.vedioflag = !1;
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            Le.GameMgr.mainopenresultcount++;
            var i = De.getCurrentTime() / 1e3 - Le.GameMgr.startgametime;
            Le.GameMgr.mainopenresultcount % 2 == 0 || i <= 600 ? (this.speed = 5, this.demcount = 50,
                this.woodcount = 1e4, this.gemadicon.visible = !0, this.gembtntext.text = "Free",
                this.gembtntext.y = 87, this.woodadicon.visible = !0, this.woodbtntext.text = "Free",
                this.woodbtntext.y = 87, this.speedadicon.visible = !0, this.speedbtntext.text = "Free",
                this.speedbtntext.y = 87, this.vedioflag = !0, this.speedicon.skin = "game/reward_speedupx5.png") : (this.speed = 2,
                    this.demcount = 20, this.woodcount = 5e3, this.gemadicon.visible = !1, this.gembtntext.text = "Claim",
                    this.gembtntext.y = 52, this.woodadicon.visible = !1, this.woodbtntext.text = "Claim",
                    this.woodbtntext.y = 52, this.speedadicon.visible = !1, this.speedbtntext.text = "Claim",
                    this.speedbtntext.y = 52, this.vedioflag = !1, this.speedicon.skin = "game/reward_speedupx2.png"),
                this.demresult.text = "" + this.demcount, this.woodresult.text = "" + this.woodcount,
                this.speedtext.text = this.speed + " Speed up production", t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd || (this.vediobox = new Re(this, 327, 867)),
                t.Platform != e.QQAd && t.Platform != e.TouTAd || 1 == Le.DataMgr.level && (this.woodobj.visible = !1,
                    this.window.height = 635), t.Platform == e.WXAd && Te.createGridAd();
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose), this.regClick(this.btngetdem, this.getDem),
                this.regClick(this.btngetwood, this.getWood), this.regClick(this.btnspeed, this.getspeed),
                this.regEvent(p.AD_GridADShow, this.onGridADshow), this.regEvent(p.AD_GridADHide, this.onGridADhide);
        }
        onGridADshow() { }
        onGridADhide() { }
        getspeed() {
            var e = e => {
                this.vedioflag ? De.SendEvent("主界面弹出界面获得资源速度看视频数量") : De.SendEvent("主界面弹出界面获得资源速度免费领取数量"),
                    e && (Le.WorldMgr.worldtimescale = this.speed, Le.GameMgr.speedtimestart = De.getCurrentTime(),
                        Le.UIMgr.showTips("Get " + this.speed + " Speed up production")), this.onClickClose();
            };
            this.vedioflag ? De.onClickWatchTV(Le.CfgMgr.getAdCfg(28).toString(), this, e) : e(!0);
        }
        getDem() {
            var e = e => {
                this.vedioflag ? De.SendEvent("主界面弹出界面获得钻石看视频数量") : De.SendEvent("主界面弹出界面获得钻石免费领取数量"),
                    e && (Le.DataMgr.addGoldCount(this.demcount), Le.UIMgr.showTips("Diamond +" + this.demcount)),
                    this.onClickClose();
            };
            this.vedioflag ? De.onClickWatchTV(Le.CfgMgr.getAdCfg(28).toString(), this, e) : e(!0);
        }
        getWood() {
            var e = e => {
                this.vedioflag ? De.SendEvent("主界面弹出界面获得木材看视频数量") : De.SendEvent("主界面弹出界面获得木材免费领取数量"),
                    e && (Le.DataMgr.addMoodCount(this.woodcount), Le.UIMgr.showTips("Wood +" + this.woodcount)),
                    this.onClickClose();
            };
            this.vedioflag ? De.onClickWatchTV(Le.CfgMgr.getAdCfg(28).toString(), this, e) : e(!0);
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.MainResultUI);
        }
        close() {
            this.vediobox && this.vediobox.destroy(), t.Platform == e.WXAd && Te.destroyGridAd(),
                super.close();
        }
    }
    class lt {
        constructor(i, o, n = 0, a = !1) {
            this.gameobject = null, this._gameList = [], this._gameIndex = 0, this._bid = "",
                this._ismainui = !1, this.icon = null, this.name = null, this.flag = null, this.closebtn = null,
                this.isshow = !1, this.time = 0, this._posArr = [{
                    x: Laya.stage.displayWidth - 34,
                    y: -220
                }, {
                    x: Laya.stage.displayWidth - 34,
                    y: -40
                }, {
                    x: Laya.stage.displayWidth - 34,
                    y: 140
                }, {
                    x: 140,
                    y: 0
                }, {
                    x: 0,
                    y: -60
                }], this._bid = o, this._ismainui = a, this._gameIndex = n, this._gameIndex >= this._gameList.length && (this._gameIndex = 0),
                t.Platform != e.OPAd && t.Platform != e.WXAd || g.getBox(o, (e, t) => {
                    if (null == e && t) {
                        for (; t.length > 0;) {
                            var o = De.random(0, t.length - 1), a = t.splice(o, 1);
                            this._gameList.push(a[0][0]);
                        }
                        console.log("######## ht icon re =", t);
                    } else console.log("###### 互推有问题: ", e);
                    this.initGameInfo(i, n);
                });
        }
        initGameInfo(e, t) {
            if (this._gameList.length > 0) {
                let i = Le.ResMgr.GetRes(C.CarouselIcon);
                this.gameobject = i.create(), e.addChild(this.gameobject), this.icon = this.gameobject.getChildByName("icon"),
                    this.name = this.gameobject.getChildByName("name"), this.flag = this.gameobject.getChildByName("flag"),
                    this.closebtn = this.gameobject.getChildByName("btnclose"), this.flag.visible = !1,
                    this.updateCarouselInfo(), Laya.timer.loop(3e3, this, this.switchGameiconHandle),
                    this.gameobject.on(Laya.Event.CLICK, this, this.carouselClickHandle), this.closebtn.on(Laya.Event.CLICK, this, this.onClickClose),
                    this.gameobject.pos(0, 0), this._ismainui ? De.doRotationAdd(this, this.gameobject, 600, 5) : 2 == t || 3 == t ? De.doRotationAdd(this, this.gameobject, 600, 5) : De.doRotationOff(this, this.gameobject, 800, 5),
                    Laya.timer.frameLoop(1, this, this.update), this.isshow = !0;
            }
        }
        update() {
            this.time += De.deltaTime(), this.isshow ? this.time >= 30 && (this.isshow = !1,
                this.time = 0) : this.time >= 20 && (this.isshow = !0, this.time = 0), this.gameobject.visible != this.isshow && (this.gameobject.visible = this.isshow);
        }
        onClickClose() {
            this.gameobject.visible = !1, this.isshow = !1, this.time = 0;
        }
        setInfo(e) { }
        carouselClickHandle() {
        }
        switchGameiconHandle() {
            this._gameIndex++, this._gameIndex >= this._gameList.length && (this._gameIndex = 0),
                this.updateCarouselInfo();
        }
        updateCarouselInfo() {
            this.icon.skin = "" + this._gameList[this._gameIndex].iconUrl, this.name.text = this._gameList[this._gameIndex].txt;
        }
        destroy() {
            Laya.timer.clear(this, this.switchGameiconHandle), this.gameobject && (this.gameobject.off(Laya.Event.CLICK, this, this.carouselClickHandle),
                this.gameobject.destroy());
        }
    }
    class ht extends o.view.MainUIUI {
        constructor(i) {
            super(), this._clickPos = new Laya.Vector3(), this._buildItem = null, this._buildShipId = 0,
                this._carouseItem = [], this.ismainopen = !1, this.tryopenresultuicount = 0, this._nativeAd = null,
                this._adInfo = null, this._showBannerFlag = !1, this._isUIhide = !1, this._moregameFlag = !1,
                this._ttshowdeskicon = !1, this._shouFreeResPro = 0, this._newyearRemainTime = 0,
                this._touchPoint = new Laya.Vector2(), this._touchId = -1, this._showBannerTime = 0,
                this._closeBannerTime = 0, this._bannertime = 0, this._isshowbanner = !1, e.WXAd != t.Platform && (i.adunit = Le.CfgMgr.getAdCfg(1).toString());
        }
        onAwake() {
            this.uiview.visible = !Le.GameMgr.isNewPlayerGuest(), this.bottomobj.bottom = 0,
                this.btnspeed_big.visible = !1, this.moregame.visible = !1, this.stroylight.visible = !1,
                this.deskbtn.visible = !1, this.btncollect.visible = !1, this.btnShare.visible = !1,
                this.btnFreeRes.visible = !1, this.txtFreeRes.text = De.ScoreToString(Number(Le.CfgMgr.getGlobalCfg("LongZhouWoodReward"))) + "资源",
                this._shouFreeResPro = Number(Le.CfgMgr.getGlobalCfg("LongZhouWoodShow")), t.Platform != e.HuaWei && t.Platform != e.HuaWei2 || (-1 == Le.DataMgr.moodCount && Le.UIMgr.openUI(i.PrivacyUI),
                    Te.preLoadVideoAd(Le.CfgMgr.getAdCfg(11).toString())), De.doLager(this, this.btnChrismas, 350, 1.1),
                Laya.timer.loop(1, this, () => {
                    this.chrismaslight.rotation += 1;
                }), De.doLager(this, this.newyearbtn, 500, 1.2), this._newyearRemainTime = Le.GameMgr.getNewYearRemainTime(),
                this._newyearRemainTime > 0 && Laya.timer.loop(1e3, this, this.updateNewYearTimeHandle),
                this.initView(), this.initEvent(), t.Platform == e.Web ? (this.stroylight.visible = !0,
                    this.btnCleanBtn.visible = !0, this.peticon.visible = !0, this.peticon.skin = Le.DataMgr.getunlockBoatmanDic(24) ?
                        "game/video_big.png" : "game/share.png") : t.Platform == e.MeiZu && (this.btnNewHero.visible = !0),
                Le.WorldMgr.startUpdate(), //this.btnCleanBtn.visible && Laya.timer.once(18e4, this, this.onClickCleanBtn),
                Le.DataMgr.getunlockBoatmanDic(20) && Le.DataMgr.getunlockBoatmanDic(21) && (this.btnNewHero.visible = !1),
                t.Platform == e.IOS && (this.shopbtn.visible = !1, this.doublebtn.visible = !1,
                    this.vediospeedbtn.visible = !1, this.btnfreediam.visible = !1, this.signbtn.visible = !1,
                    this.moregame.visible = !1, this.diamondobj.visible = !1, this.resobj.x = this.diamondobj.x,
                    this.achievebtn.visible = !1), this.updatedotHandle(), this.updateGoldHandle(),
                this.updateMoodHandle(), this.updateAchieveInfoHandle();
        }
        updateNewYearTimeHandle() {
            this._newyearRemainTime--, this.remaintime.text = De.transferSecondToHMS(this._newyearRemainTime);
        }
        GetGiftReward() {
            var e = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("QQGiftIds"));
            for (let t = 0; t < e.length; t++) Laya.timer.once(1e3 * t, this, e => {
                De.GetGiftCount(e, t => {
                    t > 0 ? Le.UIMgr.openUI(i.RewardUI, e) : console.log("###### 没有礼包可以领取!");
                });
            }, [e[t]]);
        }
        showRedbtnHandle() {
            this.redbtn.visible = !0, Le.DataMgr.redMoneyGetDate != De.getCurrentDate() ? De.doUp(this, this.redbtn, 100, 10, 0, 10) : Laya.Tween.clearAll(this.redbtn);
        }
        showFollowBtn() {
            var i = this.signbtn.visible ? 150 : 55;
            if (this.signbtn.visible && (i = 150), Le.DataMgr.getunlockBoatmanDic(23) || 1 != Le.CfgMgr.getGlobalCfg("WXbtnFollowType") ?
                (this.btnFollow_qq.visible = !1,
                    Laya.Tween.clearAll(this.btnFollow_qq)) : (this.btnFollow_qq.visible = !0, this.btnFollow_qq.pos(i, this.signbtn.y, !0),
                        De.doLager(this, this.btnFollow_qq, 350, 1.2)), window.tt) {
                var o = window.platform0.systeminfo;
                "Douyin" != o.appName && "douyin_lite" != o.appName && (this.btnFollow_tt.visible = !1,
                    this.followlight.visible = !1);
            }
            t.Platform != e.VivoAd && t.Platform != e.OPAd && t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd && t.Platform != e.Web || (Le.DataMgr.getunlockBoatmanDic(24) && Le.DataMgr.getunlockBoatmanDic(25) || 1 != Le.CfgMgr.getGlobalCfg("WXbtnPetsType") ? (this.freepetbtn.visible = !1,
                this.petlight.visible = !1, Laya.Tween.clearAll(this.freepetbtn), Laya.timer.clear(this, this.petLightRotation)) : (this.freepetbtn.visible = !0,
                    this.freepetbtn.pos(i + (this.btnFollow_qq.visible ? 150 : 70), this.signbtn.y, !0),
                    this.btnFollow_tt.visible && (this.freepetbtn.x += 100), Laya.Tween.clearAll(this.freepetbtn),
                    De.doLager(this, this.freepetbtn, 350, 1.2), Laya.timer.loop(1, this, this.petLightRotation)));
        }
        petLightRotation() {
            this.petlight.rotation += 1, this.petlight.rotation >= 360 && (this.petlight.rotation = 0);
        }
        updateMoneyHandle() {
            this.balance.text = "余额：" + Le.DataMgr.moneyCount.toFixed(2) + "元";
        }
        closeQQBanner() {

        }
        addNativeIcon() {
        }
        updateNativeIcon(e) {
            null == e || e[0].icon.length <= 0 ? (this.nativeicon.visible = !1, console.log("主界面原生图标请求失败!")) : (this.nativeicon.visible = !0,
                this.visible = !0, Le.BannerMgr.hidebanner(), this._adInfo = e[0], this.nativeicon.skin = this._adInfo.icon,
                this._nativeAd.reportAdShow({
                    adId: this._adInfo.adId
                }));
            Laya.timer.once(12e4, this, () => {
                this.addNativeIcon();
            }), Laya.timer.once(3e3, this, () => {
                this.nativeicon.visible = !1;
            });
        }
        nativeClickHandle() {
            this._nativeAd.reportAdClick({
                adId: this._adInfo.adId
            });
        }
        nativeCloseClickHandle() {
            this.nativeicon.visible = !1;
        }
        redClickHandle() {
            Le.UIMgr.openUI(i.RedMoneyWeekUI);
        }
        withdrawClickHandle() {
            Le.UIMgr.openUI(i.PurseUI);
        }
        openMainResultUI() {
            var e = null == Le.UIMgr.findUI(i.MainResultUI);
            e && (Le.UIMgr.getCurrentUI().id == this.uiconfig.id || this.tryopenresultuicount >= 360) && Le.UIMgr.getCurrentUI().id != i.BuildUI.id ? (Le.GameMgr.randomRewardCount % 2 == 0 ? Le.UIMgr.openUI(i.MainResultUI) : Le.UIMgr.openUI(i.RandomResultUI),
                Le.GameMgr.randomRewardCount++, Laya.timer.once(18e4, this, this.openMainResultUI, null, !1),
                this.tryopenresultuicount = 0) : (e && this.tryopenresultuicount++, Laya.timer.once(1e3, this, this.openMainResultUI, null, !1));
        }
        onOpenBanner(i) {
            if (t.Platform == e.WXAd) {
                var o = 240;
                if (1 == Le.CfgMgr.getGlobalCfg("BannerUpDown") && i && i.top) {
                    var n = i.top, a = window.platform0.systeminfo.screenHeight;
                    o = 1334 * ((a - n) / a) * (window.platform0.systeminfo.screenHeight / window.platform0.systeminfo.screenWidth - 1334 / 750 + 1);
                }
                this.bottomobj.bottom = o;
            } else t.Platform == e.QQAd && (this.bottomobj.bottom = 120);
            this._buildItem.bottom = this.bottomobj.bottom + 50;
        }
        onCloseBanner() {
            1 == Le.CfgMgr.getGlobalCfg("BannerUpDown") && (this.bottomobj.bottom = 0), this._buildItem.bottom = this.bottomobj.bottom + 50;
        }
        initView() {
            if (this._buildItem = new Ye(-1), this._buildItem.centerX = 0, this._buildItem.bottom = -200,
                this._buildItem.visible = !1, this.daytimeobj.visible = !1, this.addChild(this._buildItem),
                this.taskobj.x = Laya.stage.displayWidth - this.taskobj.width, this.updateMoodIconHandle(),
                t.Platform == e.WXAd) {
                var i = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("WXHtReturnCode")), o = F.getBlack(), n = i.indexOf(o), a = 0;
                n > -1 && (a = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("WXHtDelayTime"))[n]),
                    console.log("互推返回值:", o, n, a), Laya.timer.once(60 * a * 1e3, this, () => {
                        this._carouseItem.push(new lt(this.carouselobj, "5f61cce9ca7db76635a90409", 0, !0));
                    }), Te.createCustomAd();
            }
            if (Laya.timer.once(1e3, this, () => {
                Le.GameMgr.showOfflineUI();
            }), this.btnrecord.visible = t.Platform == e.TouTAd || t.Platform == e.Web, this.recordlight.visible = this.btnrecord.visible,
                De.doLager(this, this.btnNewHero, 350, 1.15), De.doLager(this, this.btnFollow_tt, 350, 1.15),
                Laya.timer.frameLoop(1, this, this.frameUpdata), t.Platform, e.Web, t.Platform == e.TouTAd || t.Platform == e.Web) {
                this.btnNewHero.visible = !0, Laya.timer.once(300, this, () => {
                    this.onClickRecord();
                }), De.doLager(this, this.btnstory, 350, 1.2), this.btnstory.visible = !0, this.btnFollow_tt.visible = !0,
                    this.followlight.visible = !0, this.btnShare.visible = !0, this.btncollect.visible = !0,
                    1 == Le.CfgMgr.getGlobalCfg("HeroMGBSwitch") && (this.btnHeroMBG.visible = !0, De.doLager(this, this.btnHeroMBG, 350, 1.2),
                        Laya.timer.loop(18e4, this, () => {
                            Le.DataMgr.getunlockBoatmanDic(26) || this.btnHeroMBGclick();
                        })), this.btncollect.visible = Le.DataMgr.level < 3;
                var s = e => {
                    this._ttshowdeskicon = e, this.deskbtn.visible = Le.DataMgr.level < 3 && this._ttshowdeskicon;
                };
                window.tt && window.tt.checkShortcut && window.tt.checkShortcut({
                    success: function (e) {
                        e.status.exist ? (s(!1), console.log("桌面图标存在")) : (s(!0), console.log("桌面图标不存在"));
                    },
                    fail: function (e) {
                        s(!0), console.log("调用接口异常");
                    }
                });
            }
        }
        frameUpdata() {
            this.recordlight.rotation += 1, this.stroylight.rotation += 1, this.herolight.rotation += 1,
                this.followlight.rotation += 1, this.MBGlight.rotation += 1;
        }
        cleardatahandle() {
            Le.DataMgr.clearData();
        }
        initEvent() {
            this.regClick(this.cleardata, this.cleardatahandle), this.regClick(this.signbtn, this.signbtnClickHandle),
                this.regClick(this.buildbtn, this.buildClickHandle), this.regClick(this.sailbtn, this.sailClickHandle),
                this.regClick(this.sinkbtn, this.sinkClickHandle), this.regClick(this.taskobj, this.taskClickHandle),
                this.regClick(this.achievebtn, this.achieveClickHandle), this.regClick(this.diamondobj, this.shopClickHandle),
                this.regClick(this.shopbtn, this.shopClickHandle), this.regClick(this.skinbtn, this.skinClickHandle),
                this.regClick(this.resobj, this.doubleClickHandle), this.regClick(this.doublebtn, this.doubleClickHandle),
                this.regClick(this.mapbtn, this.mapClickHandle), this.regClick(this.lotterybtn, this.lotteryClickHandle),
                this.regClick(this.vediospeedbtn, this.speedvedioClickHandle), this.regClick(this.speedbtn, this.speedvedioClickHandle2),
                this.regClick(this.btnspeed_big, this.speedvedioClickHandle),
                this.regClick(this.sleepbtn, this.sleepClickHandle),
                this.regClick(this.btn_musicState, this.changeMusic),
                this.regClick(this.daynightobj, this.daynightobjClickHandle), this.regClick(this.storybtn, this.onclickstory),
                this.regClick(this.btninvitefirend, this.invitedfriend), this.regClick(this.deskbtn, this.addDesktopHandle),
                this.regClick(this.moregame, this.moregameClickHandle), this.regClick(this.nativeicon, this.nativeClickHandle),
                this.regClick(this.nativeclosebtn, this.nativeCloseClickHandle), this.regClick(this.redbtn, this.redClickHandle),
                this.regClick(this.withdrawbtn, this.withdrawClickHandle), this.regClick(this.btnfreediam, this.onClickFreeDiam),
                this.regClick(this.btnrecord, this.onClickRecord), this.regClick(this.btncollect, this.onClickCollect),
                this.regClick(this.btnShare, this.onClickShare), this.regClick(this.btnstory, this.onClickStory),
                this.regClick(this.btnNewHero, this.onClickNewHero), this.regClick(this.btnCleanBtn, this.onClickCleanBtn),
                this.regClick(this.oppomoregamebtn, this.oppoMoreGameHandle), this.regClick(this.btnFollow_tt, this.openFollowTT),
                this.regClick(this.btnFollow_qq, this.flollowqqClickHandle), this.regClick(this.freepetbtn, this.freepetClickHandle),
                this.regClick(this.btnHeroMBG, this.btnHeroMBGclick), this.regClick(this.btnrank, this.btnRankclick),
                this.regClick(this.newyearbtn, this.newyearClickHandle), this.regClick(this.btnFreeRes, this.onClickFreeRes),
                this.regClick(this.btnChrismas, this.onClickChrimas), Le.EventMgr.on(p.Game_HideBuildItem, this, this.hideBuildItemHandle),
                Le.EventMgr.on(p.UI_UpdateDot, this, this.updatedotHandle), Le.EventMgr.on(p.UI_UpdateGold, this, this.updateGoldHandle),
                Le.EventMgr.on(p.UI_UpdateMood, this, this.updateMoodHandle), Le.EventMgr.on(p.UI_UpdateMoodIcon, this, this.updateMoodIconHandle),
                Le.EventMgr.on(p.UI_ShipSail, this, this.shipSailHandle), Le.EventMgr.on(p.UI_ShipSink, this, this.shipSinkHandle),
                Le.EventMgr.on(p.UI_UpdateBuildCount, this, this.updateBuildCountHandle), Le.EventMgr.on(p.UI_UpdateTask, this, this.updateQuestHandle),
                Le.EventMgr.on(p.UI_UpdateShipStar, this, this.updateShipStarHandle), Le.EventMgr.on(p.UI_ShowBuffButton, this, this.showBuffButtonHandle),
                Le.EventMgr.on(p.UI_UpdateAchieveInfo, this, this.updateAchieveInfoHandle), Le.EventMgr.on(p.AD_BannerClose, this, this.onCloseBanner),
                Le.EventMgr.on(p.AD_BannerOpen, this, this.onOpenBanner), Le.EventMgr.on(p.UI_UpdateMoney, this, this.updateMoneyHandle),
                Le.EventMgr.on(p.UI_UpdateRedbtn, this, this.showRedbtnHandle), this.selectbtn.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown),
                this.selectbtn.on(Laya.Event.MOUSE_UP, this, this.mouseUp), this.selectbtn.on(Laya.Event.MOUSE_OUT, this, this.mouseUp),
                this.selectbtn.on(Laya.Event.MOUSE_OVER, this, this.mouseUp), Laya.timer.loop(100, this, this.update, [100]);
            this.btn_musicState.skin = window.WebAudioEngine.pause ? "game/btn_sound_off.png" : "game/btn_sound_on.png";
        }
        changeMusic() {
            window.WebAudioEngine.pause = !window.WebAudioEngine.pause;
            this.btn_musicState.skin = window.WebAudioEngine.pause ? "game/btn_sound_off.png" : "game/btn_sound_on.png";
            Laya.LocalStorage.setJSON("Idle-Arks-Build-At-Sea-Music", window.WebAudioEngine.pause);
        }
        onClickChrimas() {
            Le.UIMgr.openUI(i.FollowQQUI, {
                type: 3
            });
        }
        onClickFreeRes() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(32).toString(), this, e => {
                if (e) {
                    var t = Number(Le.CfgMgr.getGlobalCfg("LongZhouWoodReward"));
                    Le.DataMgr.addEventMoodCount(t), Le.UIMgr.showTips("Wood +" + De.ScoreToString(t));
                } else Le.UIMgr.showTips("看完视频才能获得奖励哦！");
            });
        }
        newyearClickHandle() {
            // Le.GameMgr.gameMode == U.Level ? Le.UIMgr.openUI(i.NewYearUI) :
            Le.GameMgr.gameMode == U.Active && Le.SceneMgr.switchSceneByMode();
        }
        btnRankclick() {
            Le.UIMgr.openUI(i.RankUI);
        }
        btnHeroMBGclick() {
            Le.UIMgr.openUI(i.HeroMBGUI);
        }
        flollowqqClickHandle() {
            Le.UIMgr.openUI(i.FollowQQUI, {
                type: 1
            });
        }
        freepetClickHandle() {
            Le.UIMgr.openUI(i.FollowQQUI, {
                type: 2
            });
        }
        openFollowTT() {
            Le.UIMgr.openUI(i.FollowTTUI);
        }
        oppoMoreGameHandle() {
            Te.createGamePortalAd();
        }
        onClickCleanBtn() {
            Laya.timer.clear(this, this.onClickCleanBtn), Laya.Tween.clearAll(this.btnCleanBtn);
            var e = 0;
            this._isUIhide ? this.btnCleanBtn.skin = "game/simpleui_1.png" : (this.btnCleanBtn.skin = "game/simpleui_2.png",
                e = -65), Laya.Tween.to(this.btnCleanBtn, {
                    left: e
                }, 300), this._isUIhide = !this._isUIhide, this.updatedotHandle()//, this._isUIhide || Laya.timer.once(18e4, this, this.onClickCleanBtn);
        }
        onClickNewHero() {
            Le.UIMgr.openUI(i.NewHeroUI);
        }
        onClickStory() {
            Le.UIMgr.openUI(i.StoryUI);
        }
        onClickShare() {
            De.ShareGame(Laya.Handler.create(this, e => {
                e && Le.DataMgr.addMoodCount(1);
            }));
        }
        onClickCollect() {
            Le.UIMgr.openUI(i.TipsUI, 1);
        }
        onClickRecord() {
            if (Le.RecorderMgr.recordFlag) {
                if (0 == Le.RecorderMgr._autoFlag) return Le.RecorderMgr.recordTime <= 3 ? void Le.UIMgr.showTips("录制时间小于3秒") : (Le.RecorderMgr.stop(!1),
                    Laya.timer.clear(this, this.recordhandle), void this.recordhandle());
                Le.RecorderMgr.stop(!0, !1);
            }
            this.btnrecord.skin = "game/main_recording.png", this.btnrecord.disabled = !0, Laya.timer.once(500, this, () => {
                this.btnrecord.disabled = !1, Le.RecorderMgr.start(!1), Laya.timer.clear(this, this.recordhandle),
                    Laya.timer.loop(1e3, this, this.recordhandle), this.recordhandle();
            });
        }
        recordhandle() {
            if (Le.RecorderMgr.recordFlag && Le.RecorderMgr._autoFlag) return this.btnrecord.skin = "game/main_record.png",
                void (this.recordtimeobj.visible = !1);
            this.btnrecord.skin = Le.RecorderMgr.recordFlag ? "game/main_recording.png" : "game/main_record.png",
                this.recordtimeobj.visible = Le.RecorderMgr.recordFlag, this.recordtimeobj.visible && (this.txtrecordtime.text = De.transferSecondToMS(Le.RecorderMgr.recordTime));
        }
        onClickFreeDiam() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(32).toString(), this, e => {
                e ? (Le.DataMgr.addGoldCount(20), Le.UIMgr.showTips("Diamonds +20")) : Le.UIMgr.showTips("看完视频才能获得奖励!");
            });
        }
        oppoMoreGameSwitchHandle() {
            this._moregameFlag = !this._moregameFlag, this._moregameFlag ? this.moregame.skin = "game/oppo_moregame.png" : this.moregame.skin = "game/main_moregame.png";
        }
        moregameClickHandle() {
            if (t.Platform == e.OPAd) this._moregameFlag ? this.oppoMoreGameHandle() : Le.UIMgr.openUI(i.MoregameUI); else if (t.Platform == e.TouTAd) {
                "ios" !== window.tt.getSystemInfoSync().platform0 && window.tt.showMoreGamesModal({
                    appLaunchOptions: [],
                    success(e) {
                        console.log("success", e.errMsg);
                    },
                    fail(e) {
                        console.log("fail", e.errMsg);
                    }
                });
            } else t.Platform == e.QQAd && Te.createAppBox(Le.CfgMgr.getAdCfg(24).toString());
        }
        addDesktopHandle(i) {
            if (t.Platform == e.TouTAd || t.Platform == e.Web) {
                var o = () => {
                    this.deskbtn.visible = !1, this._ttshowdeskicon = !1;
                };
                window.tt.addShortcut({
                    success: function (e) {
                        console.log("添加到桌面成功"), o();
                    },
                    fail: function (e) {
                        console.log("添加到桌面fail");
                    }
                });
            } else Te.addIconToDesktop(i);
        }
        invitedfriend() {
            Le.UIMgr.openUI(i.InviteUI), 0 == Le.GameMgr.firstclick && (De.SendEvent("用户进入游戏第一次点击功能(分享)"),
                Le.GameMgr.firstclick = !0);
        }
        updateDoubleRes() {
            var e = Le.GameMgr.doubleResBuffTime();
            e > 0 ? (this.restimeobj.visible = !0, this.doublerestime.text = De.transferSecondToMS(e, !0)) : this.restimeobj.visible = !1;
        }
        updateAchieveInfoHandle() {
            Le.GameMgr.achieveRewardCount > 0 ? (this.achievenum.parent.visible = !0
                // , this.achievenum.value = Le.GameMgr.achieveRewardCount.toString()
            ) : this.achievenum.parent.visible = !1;
        }
        onclickstory() {
            Le.UIMgr.openUI(i.ChapterUI);
        }
        showBuffButtonHandle(i) {
            this.nighttips.visible = !1;
            if (1 == i.type) {
                if (t.Platform == e.IOS) return;
                // if (!this.lotterybtn.visible) {
                //     var o = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("LotteryMod"))[Le.WorldMgr.timetype];
                //     Math.random() <= o && this.showBuffbtn(this.lotterybtn, this.lotterypro);
                // }
            } else if (2 == i.type) {
                if (t.Platform == e.IOS) return;
                if (!this.speedbtn.visible) {
                    o = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("SpeedMod"))[Le.WorldMgr.timetype];
                    Math.random() <= o && this.showBuffbtn(this.speedbtn, this.speedpro);
                }
            } else if (3 == i.type) this.sleepvedioicon.visible = Le.DataMgr.skipnight % 2 == 0,
                Le.GameMgr.freeSkipNightCount > 0 && (this.sleepvedioicon.visible = !1), t.Platform == e.IOS && (this.sleepvedioicon.visible = !1),
                this.nighttips.visible = !0, Laya.timer.once(3000, this, () => { this.nighttips.visible = !1; }),
                this.showBuffbtn(this.sleepbtn, this.sleeppro, !1); else if (4 == i.type) {
                    if (t.Platform == e.IOS) return;
                    this.addChild(this.sleepbtn), this.sleepbtn.visible = !1;
                }
        }
        showBuffbtn(e, t, i = !0) {
            e.visible || (this.buffbox.addChild(e), e.visible = !0, this.buffbox.refresh(),
                De.doLager(this, e, 1500, 1.1), i && Laya.Tween.to(t, {
                    x: e.width
                }, 8e3, null, Laya.Handler.create(this, () => {
                    this.addChild(e), e.visible = !1, t.x = 7, Laya.Tween.clearAll(e), this.buffbox.refresh();
                })));
        }
        speedvedioClickHandle2() {
            De.SendEvent("点击资源加速用户数量"), De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                De.SendEvent("加速看视频数量"), e ? (this._speedup(!0), Le.UIMgr.showTips("Accelerated Successfully")) :
                    Le.UIMgr.showTips("看完视频才能加速!");
            });
        }
        speedvedioClickHandle() {
            if (De.SendEvent("点击资源加速用户数量"), t.Platform == e.WXAd) De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                De.SendEvent("加速看视频数量"), e ? (this._speedup(!0), Le.UIMgr.showTips("Accelerated Successfully")) : Le.UIMgr.showTips("看完视频才能加速!");
            }); else {
                if (e.TouTAd == t.Platform && !this.speedicon.visible) return void Le.UIMgr.showTips("Being accelerated!");
                De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                    De.SendEvent("加速看视频数量"), e ? (this._speedup(!0), Le.UIMgr.showTips("Accelerated Successfully")) : Le.UIMgr.showTips("看完视频才能加速!");
                });
            }
        }
        _speedup(e) {
            this.speedbtn.visible = !1, this.speedtimeobj.visible = e, this.speedtext.text = e ? "Being accelerated" : "Speed Up",
                // this.speedicon.visible = !e,
                Le.GameMgr.speedtimestart = e ? De.getCurrentTime() : 0,
                Le.WorldMgr.worldtimescale = e ? 2 : 1, e && Le.DataMgr.setArchieveValDic(R.Speed, 1),
                this.btnspeed_timeicon.visible = e, this.WXBigVedioSpeed(e);
        }
        WXBigVedioSpeed(e) {
            this.btnspeed_timeicon.visible = e, e ? Le.DataMgr.mainUIshareCount++ : (this.btnspeed_textcontent.text = "Free",
                this.btnspeed_tpyeicon.skin = "game/speed_video.png");
        }
        sleepClickHandle() {
            Le.DataMgr.level >= 2 && Le.DataMgr.skipnight++, this.sleepvedioicon.visible ? (De.SendEvent("点击夜晚加速用户数量"),
                De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                    e ? (Le.WorldMgr.morning(), this.sleepbtn.visible = !1,
                        Le.DataMgr.setArchieveValDic(R.TimeTravel, 1)) : Le.UIMgr.showTips("看完视频才能继续工作!");
                })) : (Le.GameMgr.freeSkipNightCount--, Le.GameMgr.freeSkipNightCount < 0 && (Le.GameMgr.freeSkipNightCount = 0),
                    Le.WorldMgr.morning(), this.sleepbtn.visible = !1);
        }
        lotteryClickHandle() {
            De.SendEvent("点击抽奖用户数量"), Le.UIMgr.openUI(i.LotteryUI);
        }
        daynightobjClickHandle() {
            if (this.daytimeobj.visible = !this.daytimeobj.visible, this.daytimeobj.visible) {
                var e = Le.WorldMgr.GetGameWoldTime();
                e.hour >= 5 && e.hour <= 11 && (this.currtimemask.y = 6), e.hour >= 11 && e.hour <= 17 && (this.currtimemask.y = 41.5),
                    e.hour >= 17 && e.hour <= 23 && (this.currtimemask.y = 77), (e.hour >= 23 || e.hour < 5) && (this.currtimemask.y = 114);
            }
        }
        skinClickHandle() {
            this.daytimeobj.visible = !1, Le.UIMgr.openUI(i.SurvivorUI), 0 == Le.GameMgr.firstclick && (De.SendEvent("用户进入游戏第一次点击功能(皮肤)"),
                Le.GameMgr.firstclick = !0);
        }
        doubleClickHandle() {
            t.Platform != e.IOS && (this.daytimeobj.visible = !1, Le.UIMgr.openUI(i.DoubleResUI),
                0 == Le.GameMgr.firstclick && (De.SendEvent("用户进入游戏第一次点击功能(双倍资源)"), Le.GameMgr.firstclick = !0));
        }
        mapClickHandle() {
            this.daytimeobj.visible = !1, this.maptipobj.visible = !1, Le.UIMgr.openUI(i.MapUI),
                0 == Le.GameMgr.firstclick && (De.SendEvent("用户进入游戏第一次点击功能(地图)"), Le.GameMgr.firstclick = !0);
        }
        shopClickHandle() {
            t.Platform != e.IOS && (this.daytimeobj.visible = !1, Le.UIMgr.openUI(i.ShopUI),
                0 == Le.GameMgr.firstclick && (De.SendEvent("用户进入游戏第一次点击功能(商店)"), Le.GameMgr.firstclick = !0));
        }
        achieveClickHandle() {
            this.daytimeobj.visible = !1, Le.UIMgr.openUI(i.AchieveUI);
        }
        mouseDown(e) {
            -1 == this._touchId && (this._touchId = e.touchId, this._touchPoint.setValue(e.stageX, e.stageY),
                this.daytimeobj.visible = !1, this.hideBuildItemHandle(), Le.SceneMgr.camera && Le.SceneMgr.camera.mouseDown(e));
        }
        mouseUp(e) {
            if (-1 != this._touchId && this._touchId == e.touchId) {
                this._touchId = -1;
                var t = new Laya.Vector2(e.stageX, e.stageY);
                Le.SceneMgr.camera && Le.SceneMgr.camera.mouseUp(e), De.DistanceVec2(t, this._touchPoint) <= 10 && this.selectClickHandle();
            }
        }
        taskClickHandle() {
            this.daytimeobj.visible = !1, this.tasktips.visible = !1, Le.UIMgr.openUI(i.QuestUI);
        }
        updateShipStarHandle() {
            var e = Le.SceneMgr.maxLevelStage;
            if (e >= 1) {
                if (this.taskobj.visible = !0, e > 1) {
                    this.starobj.removeChildren();
                    var t = Le.DataMgr.levelStage - 1;
                    for (let o = 0; o < e; o++) {
                        var i = new Laya.Image();
                        this.starobj.addChild(i), i.skin = o < t ? "game/task_shipStar.png" : "game/task_shipStar2.png";
                    }
                    this.starobj.refresh();
                }
                this.doneobj.x = this.doneobj.width, this.doneobj.visible = !0;
            } else this.taskobj.visible = !1;
        }
        updateQuestHandle(e) {
            var t = Le.SceneMgr.buildPro;
            if (this.pronum.text = t + "%", this.procore.width = 155 * t / 100, e && e.shipId > 0) {
                var i = !1;
                if (Le.GameMgr.gameMode == U.Active ? i = Le.GameMgr.updateCurEventQuestInfo(e.shipId) : Le.GameMgr.gameMode == U.Level && (i = Le.GameMgr.updateCurQuestInfo(e.shipId)),
                    this.tasktips.visible = i, i) {
                    var o = Le.SceneMgr.getShipCubeInfo(e.shipId);
                    if (this.donetitle.text = "Build " + Le.CfgMgr.getComponentCfg(o.ComponentId).Name,
                        Laya.Tween.to(this.doneobj, {
                            x: 0
                        }, 1e3, Laya.Ease.elasticOut, Laya.Handler.create(this, () => {
                            Laya.Tween.to(this.doneobj, {
                                x: this.doneobj.width
                            }, 500, null, null, 2e3);
                        })), e.reward) {
                        var n = Le.GameMgr.getQuestInfo(e.shipId);
                        Le.DataMgr.addMoodCount(n.Reward), Le.EventMgr.event(p.UI_UpdateMood, !0);
                    }
                }
            }
            Be.instance.sendCloud(100 * Le.DataMgr.level + t);
        }
        updateBuildCountHandle() {
            var e = 0, t = Le.SceneMgr.unlockCountArr;
            for (let i = 0; i < t.length; i++) e += t[i];
            e > 0 ? (this.buildtips.visible = !0
                // , this.buildnum.value = e.toString()
            ) : this.buildtips.visible = !1;
        }
        update(e) {
            this.txtdaytime.text = "" + Le.WorldMgr.GetGameWoldTime(!0);
            var t = Le.WorldMgr.getDayNightSpeed() * (360 / 84600);
            this.daycycle.rotation = Math.min(360, t) - 120, this.gametime.text = "Play Time:" + De.transferSecondToHMS(Le.DataMgr.gameTime + Le.GameMgr.gameTime),
                this.updateDoubleRes();
            var i = (De.getCurrentTime() - Le.GameMgr.speedtimestart) / 1e3;
            (this.speedtimeobj.visible || De.NumberInRange(i, 0, 60) || this.btnspeed_timeicon.visible) && (this.speedtimeobj.visible = !0,
                i >= 60 ? this._speedup(!1) : (this.speedtimetext.text = De.transferSecondToMS(60 - Math.floor(i), !0),
                    this.btnspeed_textcontent.text = "     " + De.transferSecondToMS(60 - Math.floor(i)) + " Being accelerated")),
                Le.DataMgr.getunlockBoatmanDic(20) && Le.DataMgr.getunlockBoatmanDic(21) ? this.btnNewHero.visible = !1 : Le.DataMgr.newHeroDayGet ?
                    (this.herotime.text = "Day 2 Reward",
                        this.herotimeicon.visible = !1) : this.herotime.text = "" + De.transferSecondToHMS(Le.DataMgr.newHeroOnlineTime);
        }
        sailClickHandle() {
            1 == Le.DataMgr.level ? De.SendLevelEvent("第一关起航") :
                2 == Le.DataMgr.level && 1 == Le.DataMgr.levelStage ? De.SendLevelEvent("第二关第一次起航") : 2 == Le.DataMgr.level && 2 == Le.DataMgr.levelStage ?
                    De.SendLevelEvent("第二关第二次起航") : 3 == Le.DataMgr.level && 1 == Le.DataMgr.levelStage ? De.SendLevelEvent("第三关第一次起航") : 3 == Le.DataMgr.level && 2 == Le.DataMgr.levelStage && De.SendLevelEvent("第三关第二次起航"),
                Le.UIMgr.showTips("Start sailing"), this.sailbtn.visible = !1, Le.SceneMgr.startSail((() => {
                    this.shipSailHandle(!1);
                }).bind(this));
        }
        sinkClickHandle() {
            Le.UIMgr.showTips("Start sinking"), this.sinkbtn.visible = !1, Le.GameMgr.gameMode == U.Level ? Le.DataMgr.sinkCount = 1 : Le.GameMgr.gameMode == U.Active && (Le.DataMgr.eventSinkCount = 1),
                Le.SceneMgr.startSink(() => {
                    this.shipSinkHandle(!1), Le.SceneMgr.shipState = H.Building;
                });
        }
        shipSailHandle(e) {
            this.diamondobj.visible = !e, this.resobj.visible = !e, this.topbtn.visible = !e,
                this.bottomobj.visible = !e, this.taskobj.visible = !e, this.sinkbtn.visible = !1,
                this.sailbtn.visible = e, e ? (De.doLager(this, this.sailbtn, 600, 1.2), Te.createGamePortalAd()) : Laya.Tween.clearAll(this.sailbtn);
        }
        shipSinkHandle(e) {
            this.diamondobj.visible = !e, this.resobj.visible = !e, this.topbtn.visible = !e,
                this.bottomobj.visible = !e, this.taskobj.visible = !e, this.sailbtn.visible = !1,
                this.sinkbtn.visible = e, e ? De.doLager(this, this.sinkbtn, 600, 1.2) : Laya.Tween.clearAll(this.sinkbtn);
        }
        updateGoldHandle(e = !1) {
            this.diamondnum.text = De.ScoreToString(Le.DataMgr.goldCount), e && Le.GameMgr.playMoodAnimation(this, {
                x: this.diamondobj.x + 9,
                y: this.diamondobj.y + 5
            }, !0);
        }
        updateMoodHandle(e = !1) {
            Le.GameMgr.gameMode == U.Active ? this.resnum.text = De.ScoreToString(Le.DataMgr.eventMoodCount) : Le.GameMgr.gameMode == U.Level && (this.resnum.text = De.ScoreToString(Le.GameMgr.getMoodCount())),
                this.updateBuildCountHandle(), e && Le.GameMgr.playMoodAnimation(this, {
                    x: this.resobj.x + 9,
                    y: this.resobj.y + 5
                }), Le.SceneMgr.calUnlockItemCount();
        }
        updateMoodIconHandle() {
            Le.GameMgr.gameMode == U.Active ? (this.moodicon.skin = "game/game_wood_newyear.png",
                this.newyearbtn.skin = "game/main_back.png", this.newyeartxt.text = "Back", this.mapbtn.visible = !1) : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png",
                    this.newyearbtn.skin = "game/main_2021.png", this.newyeartxt.text = "嘉年华", this.mapbtn.visible = !0);
        }
        updatedotHandle() {
            1 != Le.DataMgr.level || t.Platform != e.TouTAd && t.Platform != e.OPAd && t.Platform != e.VivoAd ? this.sailbtntext.text = "Set Sail" :
                this.sailbtntext.text = "Rescue Workers",
                1 != Le.DataMgr.level && Le.DataMgr.signDate != De.getCurrentDate() ? (this.signbtn.visible = !0,
                    this.signbtn.y = 226, t.Platform == e.QQAd && (this.signbtn.y = 285)) : this.signbtn.visible = !1,
                t.Platform == e.TouTAd || t.Platform == e.Web ? (this.followlight.visible = this.btnFollow_tt.visible,
                    this.signbtn.x = this.btnFollow_tt.visible ? 165 : this.btnFollow_tt.x, this.showFollowBtn()) : t.Platform != e.QQAd && t.Platform != e.OPAd && t.Platform != e.VivoAd && t.Platform != e.WXAd && t.Platform != e.TouTAd && t.Platform != e.Web || this.showFollowBtn(),
                1 == Le.DataMgr.level ? (this.achievebtn.visible = !1, this.storybtn.visible = !1,
                    this.vediospeedbtn.x = 675, this.deskbtn.x = 545, this.btnspeed_big.x = 606.5) : (this.achievebtn.visible = !0,
                        this.storybtn.visible = !0, this.vediospeedbtn.x = 545, this.deskbtn.x = 415, this.btnspeed_big.x = 486),
                Le.DataMgr.level >= 3 && (this.deskbtn.visible = !1, this.btncollect.visible = !1),
                this.btnFreeRes.visible = Le.GameMgr.gameMode == U.Active && Le.SceneMgr.buildPro >= this._shouFreeResPro,
                this.newyearbtn.visible = 1 == Le.CfgMgr.getGlobalCfg("NewYearSwitch") && Le.DataMgr.level > 1 && Le.GameMgr.getNewYearRemainTime() > 0,
                this.btnChrismas.visible = 1 == Number(Le.CfgMgr.getGlobalCfg("ChristmasStartSwitch")) && Le.DataMgr.level > 1 && !Le.DataMgr.getunlockBoatmanDic(29),
                this._isUIhide ? (this.btncollect.visible = !1, this.btnShare.visible = !1, this.deskbtn.visible = !1,
                    this.skinbtn.visible = !1, this.storybtn.visible = !1, t.Platform == e.WXAd && (this.btninvitefirend.visible = !1,
                        this.shopbtn.visible = !1, this.mapbtn.visible = !1, this.achievebtn.visible = !1),
                    this.btnChrismas.visible || (this.btnNewHero.x = 85), this.vediospeedbtn.x = 675,
                    this.doublebtn.x = 545, this.buildbtn.x = 675) : (t.Platform != e.TouTAd && t.Platform != e.Web || (this.btncollect.visible = Le.DataMgr.level < 3,
                        this.btnShare.visible = !0, this.deskbtn.visible = Le.DataMgr.level < 3 && this._ttshowdeskicon,
                        this.heroicon.skin = "game/main_hero_icon1.png", this.petimg.skin = "game/main_pet1.png"),
                        this.skinbtn.visible = !0, this.storybtn.visible = Le.DataMgr.level > 1, this.vediospeedbtn.x = this.storybtn.visible ? 545 : 675,
                        this.doublebtn.x = 415, this.buildbtn.x = 545, this.btnNewHero.x = 248, t.Platform == e.WXAd && (this.btninvitefirend.visible = !1,
                            this.shopbtn.visible = !0, this.mapbtn.visible = Le.GameMgr.gameMode == U.Level,
                            this.achievebtn.visible = Le.DataMgr.level > 1)), t.Platform == e.WXAd && (this.btnspeed_big.x = this.storybtn.visible ? 486 : 606.5),
                t.Platform == e.WXAd && this.showFollowBtn(), t.Platform == e.QQAd || t.Platform == e.WXAd || (t.Platform == e.OPAd ? (this.moregame.y = this.signbtn.visible ? 299 : 188,
                    this.signbtn.visible ? this.moregame.y = 299 : this.btnFollow_qq.visible || this.freepetbtn.visible ?
                        this.moregame.y = 380 : this.moregame.y = 188) : t.Platform == e.VivoAd && (this.nativeicon.y = this.signbtn.visible ? 303 : 188,
                            this.signbtn.visible ? this.nativeicon.y = 303 : this.btnFollow_qq.visible || this.freepetbtn.visible ?
                                this.nativeicon.y = 380 : this.nativeicon.y = 188)),
                this.carouselobj.y = this.signbtn.y + 117, this.btnHeroMBG.pos(this.btnFollow_tt.x + 125, this.btnFollow_tt.y),
                Le.DataMgr.getunlockBoatmanDic(26) && (this.btnHeroMBG.visible = !1), Le.GameMgr.gameMode == U.Active ? this.btnstory.visible = !1 : t.Platform != e.TouTAd && t.Platform != e.Web || (this.btnstory.visible = !0,
                    this.peticon.skin = Le.DataMgr.getunlockBoatmanDic(24) ? "game/video_big.png" : "game/share.png"),
                this.btninvitefirend.y = this.signbtn.y, this.btninvitefirend.x = this.signbtn.x,
                this.signbtn.visible && (this.btninvitefirend.x = 152), this.btnFollow_qq.visible && (this.btninvitefirend.x = this.btnFollow_qq.x + 103),
                this.freepetbtn.visible && (this.btninvitefirend.x = this.freepetbtn.x + 114), this.newyearbtn.x = this.btncollect.visible ? 221 : 85,
                this.btnChrismas.visible ? this.shopbtn.pos(this.btnShare.visible ? 221 : 85, -87) : this.shopbtn.pos(85, 64);
        }
        signbtnClickHandle() {
            this.daytimeobj.visible = !1, Le.UIMgr.openUI(i.SignUI), 0 == Le.GameMgr.firstclick && (De.SendEvent("用户进入游戏第一次点击功能(签到)"),
                Le.GameMgr.firstclick = !0);
        }
        buildClickHandle() {
            this.daytimeobj.visible = !1, Le.UIMgr.openUI(i.BuildUI), 0 == Le.GameMgr.firstclick && (De.SendEvent("用户进入游戏第一次点击功能(建造)"),
                Le.GameMgr.firstclick = !0);
        }
        selectClickHandle() {
            if (this.daytimeobj.visible = !1, null != Le.SceneMgr.camera && Le.SceneMgr.shipState == H.Building) {
                if (this._clickPos.x = Laya.stage.mouseX, this._clickPos.y = Laya.stage.mouseY,
                    this._buildShipId > 0) {
                    var e = Le.SceneMgr.getSpecialComponentBuildInfo(this._buildShipId);
                    (i = Le.SceneMgr.getBuildGuideByRelyId(this._buildShipId)) && e && e.state == G.Idle && (i.showSelectBox(!1),
                        i.setActive(!0)), this._buildShipId = 0;
                }
                var t = Le.SceneMgr.getRelyId(this._clickPos);
                if (t.relyId > 0) {
                    this._buildShipId = t.relyId;
                    e = Le.SceneMgr.getBuildInfoById(this._buildShipId);
                    if (!Le.SceneMgr.isBoard(e.componentId)) {
                        if (!Le.SceneMgr.IsShowSpecialComponetBoard(this._buildShipId)) return !1;
                        var i;
                        (i = Le.SceneMgr.getBuildGuideByRelyId(this._buildShipId)).showSelectBox(!0), i.setActive(!1);
                    }
                    return this.bottomobj.visible = !1, this._buildItem.setInfo(e), this._buildItem.visible = !0,
                        Laya.Tween.to(this._buildItem, {
                            bottom: this.bottomobj.bottom + 50
                        }, 300, Laya.Ease.backOut), Le.SoundMgr.playBtnClick(), !0;
                }
                if (this.hideBuildItemHandle(), -1 == t.relyId) {
                    Le.SoundMgr.playBtnClick();
                    var o = t.object.getComponent(ve);
                    if (null != o) return o.onClick(), !0;
                } else -2 == t.relyId ? Le.SceneMgr.clickSeaPlayer() : t.relyId;
                return !1;
            }
        }
        hideBuildItemHandle() {
            Le.SceneMgr.shipState == H.Building && (this.bottomobj.visible = !0), this._buildItem.bottom = -200,
                this._buildItem.visible = !1;
        }
        close() {
            if (Le.EventMgr.off(p.Game_HideBuildItem, this, this.hideBuildItemHandle), Le.EventMgr.off(p.UI_UpdateDot, this, this.updatedotHandle),
                Le.EventMgr.off(p.UI_UpdateGold, this, this.updateGoldHandle), Le.EventMgr.off(p.UI_UpdateMood, this, this.updateMoodHandle),
                Le.EventMgr.off(p.UI_ShipSail, this, this.shipSailHandle), Le.EventMgr.off(p.UI_ShipSink, this, this.shipSinkHandle),
                Le.EventMgr.off(p.UI_UpdateBuildCount, this, this.updateBuildCountHandle), Le.EventMgr.off(p.UI_UpdateTask, this, this.updateQuestHandle),
                Le.EventMgr.off(p.UI_UpdateShipStar, this, this.updateShipStarHandle), Le.EventMgr.off(p.UI_ShowBuffButton, this, this.showBuffButtonHandle),
                Le.EventMgr.off(p.UI_UpdateAchieveInfo, this, this.updateAchieveInfoHandle), Le.EventMgr.off(p.AD_BannerClose, this, this.onCloseBanner),
                Le.EventMgr.off(p.AD_BannerOpen, this, this.onOpenBanner), Le.EventMgr.off(p.UI_UpdateMoney, this, this.updateMoneyHandle),
                Le.EventMgr.off(p.UI_UpdateRedbtn, this, this.showRedbtnHandle), Laya.timer.clear(this, this.oppoMoreGameSwitchHandle),
                Laya.timer.clear(this, this.updateNewYearTimeHandle), this._carouseItem.length > 0) {
                for (let e = 0; e < this._carouseItem.length; e++) this._carouseItem[e].destroy();
                this._carouseItem = [];
            }
            super.close();
        }
    }
    class dt extends Laya.Box {
        constructor() {
            super(), this.gameobject = null, this.icon = null, this.lock = null;
            var e = Le.ResMgr.GetRes(C.MapUlockItem);
            this.gameobject = this.addChild(e.create()), this.icon = this.gameobject.getChildByName("icon"),
                this.lock = this.gameobject.getChildByName("lock");
        }
        setInfo(e) {
            this.icon.skin = e.url, this.lock.visible = !Le.DataMgr.getunlockBoatmanDic(e.id);
        }
    }
    class gt extends o.view.MapFindUIUI {
        constructor(e) {
            super(), this.level = 1, this.dots = [], this.rotationY = 0, e.adunit = Le.CfgMgr.getAdCfg(12);
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        init3DView(e) {
            this.shipobj && this.shipobj.gameobject.destroy(!0), Laya.timer.clear(this, this.update),
                this.scene3d && this.scene3d.destroy(), this.scene3d = null, this.scene3d = new Laya.Scene3D(),
                this.scene3d.enableLight = !0, this.scene3d.enableFog = !0, this.scene3d.ambientColor = new Laya.Vector3(1, 1, 1),
                this.scene3d.fogColor = Le.SceneMgr.scene.fogColor.clone(), this.scene3d.fogRange = Le.SceneMgr.scene.fogRange,
                this.scene3d.fogStart = Le.SceneMgr.scene.fogStart, this.window.addChild(this.scene3d);
            var t = this.scene3d.addChild(new Laya.Sprite3D()).addComponent(_e), i = Le.CfgMgr.getMapCfg(this.level);
            t.transform.translate(new Laya.Vector3(0, 0, 0), !1), t.transform.localRotationEulerY = this.rotationY;
            var o = t.initShioComs(!0, Le.CfgMgr.shipsDataArr[i.SceneData]), n = De.TransferStringToNumberArr(e.Islands), a = Le.CfgMgr.getIslandCfg(n[n.length - 2]), s = this.scene3d.addChild(new Laya.Camera());
            s.clearFlag = Laya.CameraClearFlags.DepthOnly;
            var r = s.addComponent(pe);
            r.target = o, r.defaultProperty(a), r.distance = a.ViewCamDistance, this.scene3d.addChild(Le.SceneMgr.sea.gameobject.clone()).addComponent(Ie);
            var l = this.imgship.localToGlobal(new Laya.Point(0, 0));
            s.viewport = new Laya.Viewport(l.x * Laya.stage.clientScaleX, l.y * Laya.stage.clientScaleY, this.imgship.width * Laya.stage.clientScaleX, this.imgship.height * Laya.stage.clientScaleY),
                this.shipobj = t, De.castShadow(this.scene3d, !0, !0), Laya.timer.frameLoop(1, this, this.update);
        }
        update() {
            this.rotationY += 10 * De.deltaTime(), this.shipobj.transform.localRotationEulerY = this.rotationY;
        }
        initView() {
            this.imgship.visible = !1;
            for (let i = 0; i < Le.CfgMgr.mapCfg.length; i++) {
                var e = this.dotbox.addChild(new Laya.Image("game/dot2.png")), t = e.addChild(new Laya.Image("game/dot1.png"));
                this.dots.push(t), t.visible = !1, e.pos(50 * i, 0);
            }
            this.dotbox.width = this.dots[this.dots.length - 1].x, this.dotbox.centerX = 0,
                this.dotbox.centerY = 0, this.updateView();
        }
        updateView() {
            var e = Le.CfgMgr.getMapCfg(this.level);
            this.txttitle.text = "Chap " + this.level + " - " + e.Name, this.dot && (this.dot.visible = !1),
                this.dot = this.dots[this.level - 1], this.dot.visible = !0, this.init3DView(e),
                this.initUnlckItem(e);
        }
        initUnlckItem(e) {
            var t = null != e.Islands ? De.TransferStringToNumberArr(e.Islands) : [], i = [];
            for (let a = 0; a < t.length; a++) {
                e = Le.CfgMgr.getIslandCfg(t[a]);
                var o = De.TransferStringToNumberArr(e.Unlock);
                for (let e = 0; e < o.length; e++) {
                    var n = Le.CfgMgr.getBoatmanCfg(o[e]);
                    n && i.push({
                        url: n.IconUrl,
                        levelstage: a + 1,
                        id: o[e]
                    });
                }
            }
            this.listfind.itemRender = dt, this.listfind.hScrollBarSkin = "", this.listfind.selectEnable = !1,
                this.listfind.repeatX = i.length, this.listfind.repeatY = 1, this.listfind.spaceX = 19,
                this.listfind.renderHandler = new Laya.Handler(this, (e, t) => {
                    e.setInfo(e.dataSource);
                }), this.listfind.dataSource = i, this.listfind.width = Math.min(141 * i.length + 19 * (i.length - 1), 500),
                this.listfind.anchorX = .5, this.listfind.pos(this.window.width / 2, this.listfind.y);
        }
        initEvent() {
            this.regClick(this.btnclose, this.clickclose), this.regClick(this.btnleft, this.leftclick),
                this.regClick(this.btnright, this.rightclick);
        }
        clickclose() {
            Le.UIMgr.closeUI(i.MapFindUI);
        }
        leftclick() {
            1 != this.level && (this.level--, this.updateView());
        }
        rightclick() {
            this.level >= Le.CfgMgr.mapCfg.length || (this.level++, this.updateView());
        }
        close() {
            Laya.timer.clear(this, this.update), this.scene3d && this.scene3d.destroy(), Te.closeBannerAd(),
                super.close();
        }
    }
    class ct {
        constructor(e, t, i, o, n, a) {
            var s = Le.ResMgr.GetRes(C.IslandItem), r = e.addChild(s.create()), l = r.getChildByName("icon"), h = r.getChildByName("namebg").getChildByName("name"), d = r.getChildByName("ship"), g = d.getChildByName("arrow");
            d.visible = !1, r.pos(t, i), l.skin = o, h.text = a <= Le.DataMgr.levelStage ? n : "????",
                a == Le.DataMgr.levelStage && (l.disabled = !0, d.visible = !0, De.doDown(this, g, 500, 0, 10, 0));
        }
    }
    class pt extends o.view.MapUIUI {
        constructor(i) {
            super(), e.WXAd != t.Platform && (i.adunit = Le.CfgMgr.getAdCfg(12));
        }
        onAwake() {
            this.initView(), this.initEvent(), t.Platform != e.TouTAd && t.Platform != e.Web || (this.morebanner = Te.createMoreGameBanner()),
                t.Platform == e.IOS && (this.diamondobj.visible = !1, this.resobj.x = this.diamondobj.x);
        }
        initView() {
            this.updateGoldHandle(), this.updateMoodHandle(), this.updateMoodIconHandle(), this.imgmap.skin = Le.SceneMgr.mapinfo.MapRes,
                this.txttitle.text = Le.SceneMgr.mapinfo.Name, this.txttips.text = (Le.SceneMgr.maxLevelStage - Le.DataMgr.levelStage + 1) <= 1 ? "Sail " +
                    (Le.SceneMgr.maxLevelStage - Le.DataMgr.levelStage + 1) + " more time to explore new waters" : "Sail " +
                    (Le.SceneMgr.maxLevelStage - Le.DataMgr.levelStage + 1) + " more times to explore new waters";
            var e = null != Le.SceneMgr.mapinfo.Islands ? De.TransferStringToNumberArr(Le.SceneMgr.mapinfo.Islands) : [], t = [];
            for (let l = 0; l < e.length; l++) {
                var i = Le.CfgMgr.getIslandCfg(e[l]), o = De.TransferStringToNumberArr(i.UIPoint), n = i.IconRes, a = i.Name;
                new ct(this.imgmap, o[0], o[1], n, a, l + 1);
                var s = De.TransferStringToNumberArr(i.Unlock);
                for (let e = 0; e < s.length; e++) {
                    var r = Le.CfgMgr.getBoatmanCfg(s[e]);
                    r && t.push({
                        url: r.IconUrl,
                        levelstage: l + 1,
                        id: s[e]
                    });
                }
            }
            this.listfind.itemRender = dt, this.listfind.hScrollBarSkin = "", this.listfind.selectEnable = !1,
                this.listfind.repeatX = t.length, this.listfind.repeatY = 1, this.listfind.spaceX = 19,
                this.listfind.renderHandler = new Laya.Handler(this, (e, t) => {
                    e.setInfo(e.dataSource);
                }), this.listfind.dataSource = t, this.listfind.width = 141 * t.length + 19 * (t.length - 1),
                this.listfind.anchorX = .5, this.listfind.pos(this.window.width / 2, this.listfind.y);
        }
        updateGoldHandle() {
            this.diamondnum.text = De.ScoreToString(Le.DataMgr.goldCount);
        }
        updateMoodHandle() {
            Le.GameMgr.gameMode == U.Active ? this.resnum.text = De.ScoreToString(Le.DataMgr.eventMoodCount) : Le.GameMgr.gameMode == U.Level && (this.resnum.text = De.ScoreToString(Le.GameMgr.getMoodCount()));
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickCloce), this.regClick(this.btnfind, this.onClickUnlocked),
                Le.EventMgr.on(p.UI_UpdateGold, this, this.updateGoldHandle), Le.EventMgr.on(p.UI_UpdateMood, this, this.updateMoodHandle),
                Le.EventMgr.on(p.UI_UpdateMoodIcon, this, this.updateMoodIconHandle);
        }
        updateMoodIconHandle() {
            Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png");
        }
        onClickCloce() {
            Le.UIMgr.closeUI(i.MapUI);
        }
        onClickUnlocked() {
            Le.UIMgr.openUI(i.MapFindUI);
        }
        close() {
            Le.EventMgr.off(p.UI_UpdateGold, this, this.updateGoldHandle), Le.EventMgr.off(p.UI_UpdateMood, this, this.updateMoodHandle),
                Te.closeBannerAd(), this.morebanner && this.morebanner.hide(), super.close();
        }
    }
    class mt extends o.view.MoneyRewardUIUI {
        constructor() {
            super(), this._money = 0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        updateData(e) {
            this._money = e.money;
        }
        initView() {
            this.money.text = this._money.toString();
        }
        initEvent() {
            this.regClick(this.getbtn, this.getClickHandle);
        }
        getClickHandle() {
            Le.DataMgr.addMoneyCount(this._money), Le.UIMgr.showTips("红包金额" + this._money + "元进入我的钱包"),
                Le.UIMgr.closeUI(i.MoneyRewardUI);
        }
        close() {
            super.close();
        }
    }
    class ut {
        constructor(e) {
            this.gameobject = null, this.icon = null, this.subscriptbg = null, this.name = null,
                this._info = null;
            let t = Le.ResMgr.GetRes(C.MoregameItem);
            this.gameobject = t.create(), e.addChild(this.gameobject), this.icon = this.gameobject.getChildByName("icon"),
                this.subscriptbg = this.gameobject.getChildByName("subscriptbg"), this.name = this.gameobject.getChildByName("name"),
                this.gameobject.on(Laya.Event.CLICK, this, this.gameJumpHandle);
        }
        updateInfo(e) {
            this._info = e, this.icon.skin = e.iconUrl, this.name.text = e.txt, "热门" == e.mark ? (this.subscriptbg.skin = "game/ADhot.png",
                this.subscriptbg.visible = !0) : "NEW" == e.mark && (this.subscriptbg.skin = "game/ADnew.png",
                    this.subscriptbg.visible = !0);
        }
        gameJumpHandle() {
            Te.navigateToMiniGame(t.Gid, this._info.bid, this._info), Le.UIMgr.closeUI(i.MoregameUI);
        }
        setPos(e, t) {
            this.gameobject.pos(e, t, !0);
        }
        destroy() {
            this.gameobject.off(Laya.Event.CLICK, this, this.gameJumpHandle), this.gameobject.destroy();
        }
    }
    class ft extends o.view.MoregameUIUI {
        constructor() {
            super(), this._gameList = [], this._itemList = [];
        }
        onAwake() {
            this.closebtn.visible = !1, this.initView(), this.initEvent();
        }
        initView() {
            if (t.Platform == e.OPAd) {
                var i = "5f804065f052a13697b244c5";
                g.getBox(i, (e, t) => {
                    for (let e = 0; e < t.length; e++) t[e][0].bid = i, this._gameList.push(t[e][0]);
                    this.createGamelist();
                });
            }
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle);
        }
        createGamelist() {
            var e = Math.min(this._gameList.length, 5);
            for (let o = 0; o < e; o++) {
                var t = new ut(this.imgobj);
                t.updateInfo(this.getRandomGame());
                var i = Math.floor(o / 3);
                t.setPos(145 * (o - 3 * i), 170 * i), this._itemList.push(t);
            }
            1 != Le.DataMgr.level && Le.DataMgr.signDate != De.getCurrentDate() ? this.window.y = 231 : this.window.y = 120,
                Laya.Tween.to(this.window, {
                    x: 0
                }, 300, Laya.Ease.circOut, Laya.Handler.create(this, () => {
                    this.closebtn.visible = !0;
                }));
        }
        getRandomGame() {
            var e = De.random(0, this._gameList.length - 1);
            return this._gameList.splice(e, 1)[0];
        }
        closeClickHandle() {
            this.closebtn.visible = !1, Laya.Tween.to(this.window, {
                x: -481
            }, 300, Laya.Ease.circOut, Laya.Handler.create(this, () => {
                Le.UIMgr.closeUI(i.MoregameUI);
            }));
        }
        close() {
            for (let e = 0; e < this._itemList.length; e++) this._itemList[e].destroy(), this._itemList[e] = null;
            super.close();
        }
    }
    class yt extends o.view.MoreResUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            Le.DataMgr.moreResOpenTime != De.getCurrentDate() && (Le.DataMgr.moreResOpenTime = De.getCurrentDate(),
                Le.DataMgr.moreResOpenCount = 0), this.btnfree.visible = 0 == Le.DataMgr.moreResOpenCount,
                this.window.height = this.btnfree.visible ? 870 : 760, this.btnclose.visible = !1,
                Laya.timer.once(3e3, this, () => {
                    this.btnclose.visible = !0;
                }), Le.DataMgr.moreResOpenCount++;
        }
        initEvent() {
            this.regClick(this.btnfree, this.onClickFree), this.regClick(this.btnvedio, this.onClickVedio),
                this.regClick(this.btnshare, this.onClickShare), this.regClick(this.btnclose, this.onClickClose);
        }
        getRes(e) {
            var t = 500 * e;
            Le.DataMgr.addMoodCount(t), Le.UIMgr.showTips("Resources +" + t), this.onClickClose();
        }
        onClickFree() {
            this.getRes(1);
        }
        onClickVedio() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                e ? this.getRes(4) : Le.UIMgr.showTips("看完视频才能获得奖励");
            });
        }
        onClickShare() {
            Le.RecorderMgr.recordTime <= 3 ? Le.UIMgr.showTips("录制时间小于3秒，稍后再试!") : Le.RecorderMgr.stop(Le.RecorderMgr._autoFlag, !1, (e => {
                var t = Laya.Handler.create(this, e => {
                    e && (console.log("分享视频成功"), this.getRes(2));
                });
                console.log("分享视频地址:", e), window.tt.shareAppMessage({
                    channel: "video",
                    desc: Le.DataMgr.sharecard_config[0].title,
                    imageUrl: Le.DataMgr.sharecard_config[0].imageurl,
                    templateId: "bjifj2fd06hj1hkg1r",
                    query: "",
                    extra: {
                        videoPath: e,
                        videoTopics: ["木筏世界迷你版"]
                    },
                    success() {
                        t && t.runWith(!0), Le.RecorderMgr.start(!0);
                    },
                    fail(e) {
                        console.log("分享视频失败", e), t && t.runWith(!1), Le.RecorderMgr.start(!0);
                    }
                });
            }).bind(this));
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.MoreResUI);
        }
        close() {
            super.close();
        }
    }
    class bt extends o.view.NewHeroUIUI {
        constructor() {
            super(), this.rotationY = 0, this.playerid = 0, this.maxtime = 0, this.maxvediocount = 0;
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            this.playerid = 20, Le.DataMgr.getunlockBoatmanDic(20) && (this.playerid = 21),
                Le.DataMgr.getunlockBoatmanDic(21) && (this.playerid = -1), Le.DataMgr.newHeroDayGet ? (this.btnshare.visible = !1,
                    this.btnvedio.visible = !1, this.onlinetimeobj.visible = !1, this.tips.visible = !0) : (this.maxtime = Le.CfgMgr.getGlobalCfg("NewHeroTime"),
                        this.maxvediocount = Le.CfgMgr.getGlobalCfg("NewHeroVedioCount"), this.onlinetimetip.text = "" + Math.floor(this.maxtime / 60),
                        t.Platform != e.TouTAd && t.Platform != e.Web || (this.onlinetimetip2.text = "当日累计在线       分钟后观看视频可获得稀有角色！",
                            this.btnsharetext.text = "Free", this.shareicon.skin = "game/video_big.png"), t.Platform != e.WXAd && t.Platform != e.QQAd || (this.onlinetimetip2.text = "当日累计在线       分钟后分享好友可获得稀有角色！",
                                this.btnsharetext.text = "分享好友免费获得", this.shareicon.skin = "game/share.png"), this.onlinetimeobj.visible = !Le.DataMgr.newHeroDayGet,
                        this.onlinetimeobj.visible && (this.timeprogressbar.width = De.Clamp(Le.DataMgr.newHeroOnlineTime, 0, this.maxtime) / this.maxtime * 400,
                            this.onlinetimetext.text = "" + De.transferSecondToHMS(Le.DataMgr.newHeroOnlineTime)),
                        (this.onlinetimetip2.text = "当日累计在线时间       分钟后可获得稀有角色！",
                            this.onlinetimetip.x = 229, this.getbtn.visible = !0, this.btnshare.visible = !1,
                            this.getbtn.disabled = Le.DataMgr.newHeroOnlineTime < this.maxtime),
                        this.updatetext(), Laya.timer.loop(100, this, this.updatetime)), this.inie3DView(this.playerid),
                t.Platform != e.OPAd && t.Platform != e.VivoAd || (this.getvideo.visible = !0);
        }
        updatetime() {
            this.onlinetimetext.text = "累计在线时长：" + De.transferSecondToHMS(Le.DataMgr.newHeroOnlineTime),
                Le.DataMgr.newHeroOnlineTime > this.maxtime && (t.Platform == e.OPAd || t.Platform == e.VivoAd || t.Platform == e.MeiZu ? this.getbtn.disabled = !1 : this.btnshare.disabled = !1);
        }
        updatetext() {
            this.vediotext.text = "Watch Ads(" + De.Clamp(Le.DataMgr.newHeroVedioCount, 0, this.maxvediocount) + "/" + this.maxvediocount + ")";
        }
        inie3DView(e) {
            this.scene3d = this.addChild(new Laya.Scene3D()), this.scene3d.addChild(new Laya.DirectionLight()).intensity = .8;
            var t = Le.CfgMgr.getBoatmanCfg(e), i = Le.ObjPool.GetObject(t.RoleUrl, this.scene3d);
            i.transform.position = new Laya.Vector3(0, 0, 0), i.getChildByName("root").getChildByName("spine").getChildByName("Larm").getChildByName("Lhand").getChildByName("weaponL").getChildByName("Hammer").active = !1,
                i.getChildByName("root").getChildByName("spine").getChildByName("Larm").getChildByName("Lhand").getChildByName("weaponL").getChildByName("Oars_animate_R").active = !1,
                i.getChildByName("root").getChildByName("spine").getChildByName("Rarm").getChildByName("Rhand").getChildByName("weaponR").getChildByName("Oars_animate_L").active = !1,
                this.anim = i.getComponent(Laya.Animator), this.playWalk();
            var o = new Laya.Camera(0, .1, 1e3);
            this.scene3d.addChild(o), o.transform.localPosition = new Laya.Vector3(0, .5, 1.2),
                o.clearFlag = Laya.BaseCamera.CLEARFLAG_DEPTHONLY;
            var n = this.viewwindow.localToGlobal(new Laya.Point(0, 0)), a = new Laya.Viewport(n.x * Laya.stage.clientScaleX, n.y * Laya.stage.clientScaleY, this.viewwindow.width * Laya.stage.clientScaleX, this.viewwindow.height * Laya.stage.clientScaleY);
            o.enableHDR = !1, o.enableRender = !0, o.viewport = a, o.render();
        }
        playWalk() {
            this.anim.play(P.walk), Laya.timer.once(3e3, this, this.playDance);
        }
        playDance() {
            this.anim.play(P.happy_dance), Laya.timer.once(2e3, this, this.playWalk);
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose), this.regClick(this.btnshare, this.onclickshare),
                this.regClick(this.btnvedio, this.onclickvedio), this.regClick(this.getbtn, this.getClickHandle);
        }
        getClickHandle() {
            t.Platform == e.OPAd || t.Platform == e.VivoAd ? De.onClickWatchTV(Le.CfgMgr.getAdCfg(33).toString(), this, e => {
                e ? this.getRes() : Le.UIMgr.showTips("看完视频才能获得奖励");
            }) : this.getRes();
        }
        onclickshare() {
            if (t.Platform == e.Web && this.getRes(), t.Platform == e.TouTAd || t.Platform == e.Web) {
                if (Le.RecorderMgr.recordTime <= 3) return void Le.UIMgr.showTips("录制时间小于3秒，稍后再试!");
                Le.RecorderMgr.stop(Le.RecorderMgr._autoFlag, !1, (e => {
                    var t = Laya.Handler.create(this, e => {
                        e && (console.log("分享视频成功"), this.getRes());
                    });
                    console.log("分享视频地址:", e), window.tt.shareAppMessage({
                        channel: "video",
                        desc: Le.DataMgr.sharecard_config[0].title,
                        imageUrl: Le.DataMgr.sharecard_config[0].imageurl,
                        templateId: "bjifj2fd06hj1hkg1r",
                        query: "",
                        extra: {
                            videoPath: e,
                            videoTopics: ["木筏世界迷你版"]
                        },
                        success() {
                            t && t.runWith(!0), Le.RecorderMgr.start(!0);
                        },
                        fail(e) {
                            console.log("分享视频失败", e), t && t.runWith(!1), Le.RecorderMgr.start(!0);
                        }
                    });
                }).bind(this));
            } else t.Platform != e.WXAd && t.Platform != e.QQAd || De.ShareGame(Laya.Handler.create(this, e => {
                e && this.getRes();
            }));
        }
        onclickvedio() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(33).toString(), this, e => {
                e ? (Le.DataMgr.newHeroVedioCount++, this.updatetext(), Le.DataMgr.newHeroVedioCount >= this.maxvediocount && this.getRes()) : Le.UIMgr.showTips("看完视频才能获得奖励");
            });
        }
        getRes() {
            Le.DataMgr.newHeroDayGet = !0, Le.DataMgr.setunlockBoatmanDic(this.playerid), Le.SceneMgr.creatBoatman(Le.CfgMgr.getBoatmanCfg(this.playerid)),
                Le.UIMgr.showTips("Get Crew!"), Le.UIMgr.openUI(i.UnlockSkinUI, {
                    Id: this.playerid,
                    sign: !1
                }), this.onClickClose();
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.NewHeroUI);
        }
        close() {
            this.scene3d && this.scene3d.destroy(!0), super.close();
        }
    }
    class vt extends Laya.Box {
        constructor() {
            super(), this.gameobject = null, this.bg = null, this.icon = null, this.graymask = null,
                this.tips = null, this.itemname = null, this.mark = null, this._info = null;
            let e = Le.ResMgr.GetRes(C.SurvivorItem);
            this.gameobject = e.create(), this.addChild(this.gameobject), this.bg = this.gameobject.getChildByName("bg"),
                this.icon = this.gameobject.getChildByName("icon"), this.tips = this.gameobject.getChildByName("tips"),
                this.graymask = this.gameobject.getChildByName("graymask"), this.itemname = this.gameobject.getChildByName("itemname"),
                this.mark = this.gameobject.getChildByName("mark"), this.gameobject.on(Laya.Event.CLICK, this, this.getClickHandle);
        }
        setInfo(e) {
            this._info = e, this.bg.skin = e.BgResPath, this.icon.skin = e.IconUrl, this.tips.visible = e.tipsFlag,
                Le.DataMgr.getunlockBoatmanDic(e.Id) ? (this.mark.skin = "game/skin_magnascope.png",
                    this.graymask.visible = !1, this.itemname.text = e.Name) : (this.mark.skin = "game/lock.png",
                        this.graymask.visible = !0, this.itemname.text = "???");
        }
        getClickHandle() {
            Le.SoundMgr.playBtnClick(), Le.UIMgr.openUI(i.SurvivorInfoUI, this._info);
        }
        destroy() {
            this.gameobject.off(Laya.Event.CLICK, this, this.getClickHandle), this.gameobject.destroy();
        }
    }
    class It extends o.view.NewYearUIUI {
        constructor(e) {
            super(), this._newyearRemainTime = 0, e.adunit = Le.CfgMgr.getAdCfg(12).toString();
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            var e = Le.CfgMgr.getEventMapCfg(1), t = De.TransferStringToNumberArr(e.Reward), i = [];
            for (let e = 0; e < t.length; e++) i.push(Le.CfgMgr.getBoatmanCfg(t[e]));
            this.listfind.itemRender = vt, this.listfind.hScrollBarSkin = "", this.listfind.selectEnable = !1,
                this.listfind.repeatX = t.length, this.listfind.repeatY = 1, this.listfind.spaceX = 19,
                this.listfind.renderHandler = new Laya.Handler(this, (e, t) => {
                    e.setInfo(e.dataSource);
                }), this.listfind.dataSource = i, this.listfind.width = Math.min(173 * i.length + 19 * (i.length - 1), 500),
                this.listfind.anchorX = .5, this.listfind.pos(this.window.width / 2, this.listfind.y),
                this._newyearRemainTime = Le.GameMgr.getNewYearRemainTime(), this.remaintime.text = De.transferSecondToHMS(this._newyearRemainTime),
                this._newyearRemainTime > 0 && Laya.timer.loop(1e3, this, this.updateNewYearTimeHandle);
        }
        initEvent() {
            this.regClick(this.btnclose, this.clickclose), this.regClick(this.enterbtn, this.enterClickHandle);
        }
        updateNewYearTimeHandle() {
            this._newyearRemainTime--, this.remaintime.text = De.transferSecondToHMS(this._newyearRemainTime);
        }
        clickclose() {
            Le.UIMgr.closeUI(i.NewYearUI);
        }
        enterClickHandle() {
            this.clickclose(), Le.SceneMgr.switchSceneByMode();
        }
        close() {
            Laya.timer.clear(this, this.updateNewYearTimeHandle), super.close();
        }
    }
    class wt extends o.view.OfflineUIUI {
        constructor() {
            super(), this._mutleReward = 1, this._offTime = 0, this._resnum = 0, this.morebanner = null;
        }
        onAwake() {
            this.initView(), this.initEvent(), t.Platform == e.QQAd || t.Platform == e.WXAd || t.Platform == e.TouTAd || t.Platform == e.Web ? this.vediobox = new Re(this, 327, 867) : t.Platform == e.OPAd && (this.morebanner = Te.createMoreGameBanner());
        }
        updateData(e) {
            this._offTime = e;
            var t = Le.CfgMgr.getGlobalCfg("OfflineRewardTime").split("|"), i = 60 * Number(t[Le.SceneMgr.getCurLevelId() - 1]);
            e >= i && (e = i);
            var o = Le.GameMgr.getAllComponentValue(1), n = 1 + Le.GameMgr.getAllComponentValue(2) / 1e4, a = Le.CfgMgr.getGlobalCfg("OfflineRewardMod");
            this._resnum = Math.floor(o * n / 60 * a * e), this._resnum = Math.max(1, this._resnum);
        }
        initView() {
            this.rewardnum.text = De.ScoreToString(this._resnum), this.double.visible = !1,
                this.offtime.text = De.transferSecondToHMS(this._offTime);
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), this.regClick(this.diamondbtn, this.diamondClickHandle),
                this.regClick(this.videobtn, this.videoClickHandle), this.regClick(this.getbtn, this.getClickHandle);
        }
        diamondClickHandle() {
            Le.DataMgr.goldCount >= 50 ? (Le.DataMgr.addGoldCount(-50), Le.EventMgr.event(p.UI_UpdateGold),
                this.getres(1)) : Le.UIMgr.showTips("Diamons Are Not Enough!");
        }
        videoClickHandle() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                De.SendEvent("离线木材看视频数量"), e ? this.setDoubleMode() : Le.UIMgr.showTips("看完视频才能获得双倍资源");
            });
        }
        setDoubleMode() {
            this.videobtn.visible = !1, this.diamondbtn.visible = !1, this.getbtn.visible = !0;
            var e = this.rewardnum.x + this.rewardnum.width + 30;
            this.double.x = e, this.double.visible = !0, this._mutleReward = 2;
        }
        getClickHandle() {
            this.getres(this._mutleReward);
        }
        getres(e) {
            Le.DataMgr.gameCloseTime = De.getCurrentTime();
            var t = this._resnum * e;
            Le.DataMgr.addMoodCount(t), Le.UIMgr.showTips("Resources +" + De.ScoreToString(t)), Le.EventMgr.event(p.UI_UpdateMood, !0),
                this.closeClickHandle();
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.OfflineUI), t.Platform == e.QQAd && Te.setBannerVisible(!0);
        }
        close() {
            if (this.vediobox && this.vediobox.destroy(), this.morebanner && this.morebanner.destroy(),
                (e.OPAd == t.Platform || e.WXAd == t.Platform || e.TouTAd == t.Platform || e.QQAd == t.Platform) && !(Le.DataMgr.getunlockBoatmanDic(24) && Le.DataMgr.getunlockBoatmanDic(25) || 1 != Le.CfgMgr.getGlobalCfg("WXbtnPetsType"))) {
                var o = Le.CfgMgr.getBoatmanCfg(24), n = Le.CfgMgr.getBoatmanCfg(25);
                1 != o.TimeBuff && 1 != n.TimeBuff || Le.UIMgr.openUI(i.FollowQQUI, {
                    type: 2
                });
            }
            super.close();
        }
    }
    class _t extends o.view.PassRedMoneyUIUI {
        constructor() {
            super(), this._money = 0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() { }
        initEvent() {
            this.regClick(this.openbtn, this.openClickHandle), this.regClick(this.closebtn, this.closeClickHandle);
        }
        openClickHandle() {
            var e = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("PassRedMoney"));
            this._money = e[Le.DataMgr.level - 2], Le.UIMgr.openUI(i.MoneyRewardUI, {
                money: this._money
            }), this.closeClickHandle();
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.PassRedMoneyUI);
        }
        close() {
            super.close();
        }
    }
    class Ct extends o.view.PrivacyUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() { }
        initEvent() {
            this.regClick(this.confirmbtn, this.confirmClickHandle), this.regClick(this.cancelbtn, this.cancelClickHandle);
        }
        confirmClickHandle() {
            Le.UIMgr.closeUI(i.PrivacyUI);
        }
        cancelClickHandle() {
            Te.exitGame();
        }
        close() {
            super.close();
        }
    }
    class xt extends o.view.PurseUIUI {
        constructor() {
            super(), this._index = 0, this._amountArr = [.05, .1, 1, 20, 50, 100], this._moneyList = [this.money1, this.money2, this.money3, this.money4, this.money5, this.money6],
                this._totalCount = 0, this._curCount = 0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            this.money.text = Le.DataMgr.moneyCount.toFixed(2), this._index = Le.DataMgr.balanceWithdrawIndex,
                this._moneyList[this._index].skin = "game/red_pocket_walletui1.png", this.updatePosition();
        }
        updatePosition() {
            var e = 0;
            for (let n = 0; n < this._moneyList.length; n++) {
                var t = this._moneyList[n];
                if (n < Le.DataMgr.balanceWithdrawIndex) t.visible = !1; else {
                    var i = e % 3, o = Math.floor(e / 3);
                    t.pos(165 * i, 79 * o), e++;
                }
            }
        }
        initEvent() {
            this.regClick(this.withdrawbtn, this.withdrawClickHandle), this.regClick(this.closebtn, this.closeClickHandle),
                this.regClick(this.hidebtn, this.hideClickHandle), this.regClick(this.videobtn, this.videoClickHandle),
                this.regClick(this.money1, this.money1ClickHandle), this.regClick(this.money2, this.money2ClickHandle),
                this.regClick(this.money3, this.money3ClickHandle), this.regClick(this.money4, this.money4ClickHandle),
                this.regClick(this.money5, this.money5ClickHandle), this.regClick(this.money6, this.money6ClickHandle);
        }
        money1ClickHandle() {
            this.resetMoneyImg(), this.money1.skin = "game/red_pocket_walletui1.png", this._index = 0;
        }
        money2ClickHandle() {
            this.resetMoneyImg(), this.money2.skin = "game/red_pocket_walletui1.png", this._index = 1;
        }
        money3ClickHandle() {
            this.resetMoneyImg(), this.money3.skin = "game/red_pocket_walletui1.png", this._index = 2;
        }
        money4ClickHandle() {
            this.resetMoneyImg(), this.money4.skin = "game/red_pocket_walletui1.png", this._index = 3;
        }
        money5ClickHandle() {
            this.resetMoneyImg(), this.money5.skin = "game/red_pocket_walletui1.png", this._index = 4;
        }
        money6ClickHandle() {
            this.resetMoneyImg(), this.money6.skin = "game/red_pocket_walletui1.png", this._index = 5;
        }
        resetMoneyImg() {
            this.money1.skin = "game/red_pocket_walletui2.png", this.money2.skin = "game/red_pocket_walletui2.png",
                this.money3.skin = "game/red_pocket_walletui2.png", this.money4.skin = "game/red_pocket_walletui2.png",
                this.money5.skin = "game/red_pocket_walletui2.png", this.money6.skin = "game/red_pocket_walletui2.png";
        }
        withdrawClickHandle() {
            if (Le.DataMgr.moneyCount < this._amountArr[this._index]) Le.UIMgr.showTips("当前余额不足！"); else {
                var e = !1;
                0 == this._index ? Le.DataMgr.playVideoCount >= 3 ? e = !0 : (this.showTipsObj(Le.DataMgr.playVideoCount, 3),
                    e = !1) : 1 == this._index ? Le.DataMgr.loginCount > 2 ? Le.DataMgr.level > 3 ? Le.DataMgr.playVideoCount >= 25 ? e = !0 : (this.showTipsObj(Le.DataMgr.playVideoCount, 25),
                        e = !1) : (Le.UIMgr.showTips("通过第3关卡可提现"), e = !1) : (Le.UIMgr.showTips("连续登录2天可提现"),
                            e = !1) : 2 == this._index ? Le.DataMgr.playVideoCount >= 60 ? e = !0 : (this.showTipsObj(Le.DataMgr.playVideoCount, 60),
                                e = !1) : 3 == this._index ? Le.DataMgr.signTotalCount >= 15 && Le.DataMgr.loginCount >= 15 ? Le.DataMgr.playVideoCount >= 1e3 ? e = !0 : (this.showTipsObj(Le.DataMgr.playVideoCount, 1e3),
                                    e = !1) : (Le.UIMgr.showTips("连续签到15天可提现"), e = !1) : 4 == this._index ? Le.DataMgr.level > 5 ? Le.DataMgr.playVideoCount >= 2500 ? e = !0 : (this.showTipsObj(Le.DataMgr.playVideoCount, 2500),
                                        e = !1) : (Le.UIMgr.showTips("通过第5关卡可提现"), e = !1) : 5 == this._index && (Le.DataMgr.loginCount >= 30 ? Le.DataMgr.playVideoCount >= 5e3 ? e = !0 : (this.showTipsObj(Le.DataMgr.playVideoCount, 5e3),
                                            e = !1) : (Le.UIMgr.showTips("连续签到30天可提现"), e = !1)), e && (this.visible = !1, De.CreateRedBag(this._amountArr[this._index], E.Balance, () => {
                                                Le.DataMgr.addMoneyCount(-this._amountArr[this._index]), Le.UIMgr.showTips("恭喜提现成功！"),
                                                    Le.DataMgr.balanceWithdrawIndex++, this.closeClickHandle();
                                            }));
            }
        }
        showTipsObj(e, t) {
            this._curCount = e, this._totalCount = t, this.tipsobj.visible = !0, this.tipsdesc.text = "累计观看" + this._totalCount + "个视频可提现",
                this.tipspro.text = "已观看视频(" + this._curCount + "/" + this._totalCount + ")";
        }
        hideClickHandle() {
            this.tipsobj.visible = !1;
        }
        videoClickHandle() {
            this._curCount >= this._totalCount ? this.hideClickHandle() : De.onClickWatchTV(Le.CfgMgr.getAdCfg(14).toString(), this, e => {
                e ? (this._curCount++, this.showTipsObj(this._curCount, this._totalCount)) : Le.UIMgr.showTips("看完视频才能领取红包!");
            });
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.PurseUI);
        }
        close() {
            super.close();
        }
    }
    class Mt {
        constructor() {
            this.gameobject = null, this.icon = null, this.moodicon = null, this.desc = null,
                this.rewardnum = null, this.tips = null, this.itemmask = null, this._info = null;
            let e = Le.ResMgr.GetRes(C.QuestItem);
            this.gameobject = e.create(), this.icon = this.gameobject.getChildByName("icon"),
                this.moodicon = this.gameobject.getChildByName("moodicon"), this.desc = this.gameobject.getChildByName("desc"),
                this.rewardnum = this.gameobject.getChildByName("rewardnum"), this.tips = this.gameobject.getChildByName("tips"),
                this.itemmask = this.gameobject.getChildByName("itemmask"), this.itemmask.visible = !1,
                Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png");
        }
        setInfo(e) {
            this.gameobject.visible = !0, this._info = e, this.icon.skin = e.data.Icon, this.desc.text = e.data.QuestName,
                this.rewardnum.text = e.data.Reward, this.tips.visible = e.PrepFlag, this.itemmask.visible = e.Complete;
        }
        setPos(e) {
            this.gameobject.pos(e.x, e.y, !0);
        }
        destroy() {
            this.gameobject.destroy();
        }
    }
    class St extends o.view.QuestUIUI {
        constructor(i) {
            super(), this._questList = [], this._allComplete = !0, e.WXAd != t.Platform && (i.adunit = Le.CfgMgr.getAdCfg(12).toString());
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            this.updateQuestInfoHandle();
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), Le.EventMgr.on(p.UI_UpdateQuest, this, this.updateQuestInfoHandle);
        }
        updateQuestInfoHandle() {
            var e = null;
            Le.GameMgr.gameMode == U.Active ? e = Le.GameMgr.curEventQuestArr : Le.GameMgr.gameMode == U.Level && (e = Le.GameMgr.curQuestArr);
            var t = 0;
            for (let o = 0; o < e.length; o++) if (this._allComplete = this._allComplete && e[o].Complete,
                !e[o].Complete) {
                if (t < 3) {
                    var i = this._questList[t];
                    null == i && ((i = new Mt()).setPos({
                        x: 0,
                        y: 150 * t
                    }), this.questobj.addChild(i.gameobject), this._questList.push(i)), i.setInfo(e[o]),
                        t++;
                }
                e[o].PrepFlag = !1;
            }
            if (this.desc.visible = this._allComplete, t < 3) for (let e = t; e < this._questList.length; e++) this._questList[e].gameobject.visible = !1;
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.QuestUI);
        }
        close() {
            for (let e = 0; e < this._questList.length; e++) this._questList[e].destroy();
            Le.EventMgr.off(p.UI_UpdateQuest, this, this.updateQuestInfoHandle), Te.closeBannerAd(),
                super.close();
        }
    }
    class kt extends o.view.RandomResultUIUI {
        constructor() {
            super(), this.demcount = 0, this.woodcount = 0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window),
                t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd && t.Platform != e.Web || (this.vediobox = new Re(this.window, 303, 867),
                    this.vediobox && this.vediobox.gameobject && (this.vediobox.gameobject.bottom = -75)), t
                        .Platform == e.WXAd && Te.createGridAd();
        }
        initView() {
            var i = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("RandomResult"));
            this.demcount = i[0], this.woodcount = i[1], this.demresult.text = "" + this.demcount,
                this.woodresult.text = "" + this.woodcount, t.Platform != e.QQAd && t.Platform != e.TouTAd && t.Platform != e.Web || 1 == Le.DataMgr.level && (this.woodobj.visible = !1,
                    this.window.height = 376);
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose), this.regClick(this.btngetdem, this.getDem),
                this.regClick(this.btngetwood, this.getWood), this.regEvent(p.AD_GridADShow, this.onGridADshow),
                this.regEvent(p.AD_GridADHide, this.onGridADhide);
        }
        onGridADshow() { }
        onGridADhide() { }
        getDem() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(28).toString(), this, e => {
                De.SendEvent("建筑列表弹出随机界面获得钻石看视频数量"), e && (Le.DataMgr.addGoldCount(this.demcount),
                    Le.UIMgr.showTips("Diamonds +" + this.demcount)), this.onClickClose();
            });
        }
        getWood() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(28).toString(), this, e => {
                De.SendEvent("建筑列表弹出随机界面获得木材看视频数量"), e && (Le.DataMgr.addMoodCount(this.woodcount),
                    Le.UIMgr.showTips("Wood +" + this.woodcount)), this.onClickClose();
            });
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.RandomResultUI);
        }
        close() {
            this.vediobox && this.vediobox.destroy(), t.Platform == e.WXAd && Te.destroyGridAd(),
                super.close();
        }
    }
    class At extends o.view.RankUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            t.Platform == e.QQAd && (Laya.QQMiniAdapter.sendAtlasToOpenDataContext(w.Rank),
                Laya.timer.once(300, this, () => {
                    this.openviewer.postMsg({
                        type: "ShowMe",
                        openid: t.Openid
                    });
                }));
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), this.regClick(this.prebtn, this.preClickHandle),
                this.regClick(this.nextbtn, this.nextClickHandle), this.regClick(this.sharebtn, this.shareClickHandle);
        }
        preClickHandle() {
            this.openviewer.postMsg({
                type: "PrePage"
            });
        }
        nextClickHandle() {
            this.openviewer.postMsg({
                type: "NextPage"
            });
        }
        shareClickHandle() {
            De.ShareGame(null);
        }
        closeClickHandle() {
            this.openviewer.postMsg({
                type: "undisplay"
            }), Le.UIMgr.closeUI(i.RankUI);
        }
        close() {
            super.close();
        }
    }
    class Lt extends o.view.RedMoneyAnyOneUIUI {
        constructor() {
            super(), this._speed = 10, this._index = 0, this._selectFlag = !1, this._createFlag = !1,
                this._totalCount = 0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            this._totalCount = 2 * (Le.DataMgr.anyoneWithdrawCount + 1), this.protext.text = Le.DataMgr.boxRedMoneyCount + "/" + this._totalCount;
            var e = Math.min(1, Le.DataMgr.boxRedMoneyCount / this._totalCount);
            this.procore.width = 373 * e, Le.DataMgr.boxRedMoneyCount < this._totalCount ? this.withdrawbtn.gray = !0 : Le.DataMgr.redMoneyGetDate == De.getCurrentDate() ? this.withdrawbtn.gray = !0 : this.withdrawbtn.gray = !1;
        }
        initEvent() {
            this.regClick(this.withdrawbtn, this.withdrawClickHandle), this.regClick(this.closebtn, this.closeClickHandle);
        }
        withdrawClickHandle() {
            this.withdrawbtn.gray || (this.selecticon.visible = !0, this.startSelectAnimation(10),
                De.CreateRedBag(.05, E.AnyOne, () => {
                    this._createFlag = !0, this._selectFlag && this.getRedMoney();
                }));
        }
        getRedMoney() {
            Le.DataMgr.anyoneWithdrawCount++, Le.DataMgr.boxRedMoneyCount = 0, this.closeClickHandle();
        }
        startSelectAnimation(e) {
            this._speed += 10, e += this._speed, Laya.timer.once(e, this, this.setSelectState.bind(this), [e]);
        }
        setSelectState(e) {
            this._index++, this._index > 4 && (this._index = 1), this.selecticon.x = this["red" + this._index].x - 8.5,
                1 == this._index && e >= 1e3 ? (this._selectFlag = !0, this._createFlag && this.getRedMoney()) : this.startSelectAnimation(e);
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.RedMoneyAnyOneUI);
        }
        close() {
            super.close();
        }
    }
    class Tt {
        constructor(e) {
            this.gameobject = null, this.receive = null, this.day = null, this.moeny = null,
                this._index = -1, this._info = null, this._index = e;
            let t = Le.ResMgr.GetRes(C.RedmoneyItem);
            this.gameobject = t.create(), this.receive = this.gameobject.getChildByName("receive"),
                this.moeny = this.gameobject.getChildByName("money"), this.day = this.gameobject.getChildByName("day"),
                this.day.text = "Day " + (this._index + 1), e < Le.DataMgr.redMoneyGetCount ? this.receive.visible = !0 : this.receive.visible = !1,
                this._index + 1 <= 4 ? this.moeny.text = "0.0" + (this._index + 1) + "~20元" : this.moeny.text = "? 元";
        }
        setPos(e, t) {
            this.gameobject.pos(e, t, !0);
        }
        GetReward() { }
        destroy() {
            this.gameobject.destroy();
        }
    }
    class Bt extends o.view.RedMoneyWeekUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        initView() {
            for (let t = 0; t < 7; t++) {
                var e = new Tt(t);
                t >= 0 && t <= 3 ? e.setPos(140 * t, 0) : e.setPos(140 * (t - 4) + 70, 180), this.redobj.addChild(e.gameobject);
            }
            this.updateInfo();
        }
        updateInfo() {
            this.videocount.text = "看视频(" + Le.DataMgr.playVideoCount + "/6)", "" != Le.DataMgr.redMoneyGetDate && Le.DataMgr.redMoneyGetDate == De.getCurrentDate() ? (this.withdrawbtn.gray = !0,
                this.openbtn.visible = !1, this.withdrawtext.text = "明日再来", this.withdrawbtn.centerX = 0) : Le.DataMgr.playVideoCount < 6 ? this.withdrawbtn.gray = !0 : this.withdrawbtn.gray = !1;
        }
        initEvent() {
            this.regClick(this.withdrawbtn, this.withdrawClickHandle), this.regClick(this.openbtn, this.openClickHandle),
                this.regClick(this.closebtn, this.closeClickHandle);
        }
        withdrawClickHandle() {
            if (!this.withdrawbtn.gray) {
                var e = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("RedMoneyWeek")), t = Math.floor(De.random(e[0], e[1])) / 100;
                t = parseFloat(t.toFixed(2)), De.CreateRedBag(t, E.Week, () => {
                    Le.DataMgr.redMoneyGetCount++, Le.DataMgr.redMoneyGetDate = De.getCurrentDate(),
                        Le.DataMgr.playVideoCount = 0, Le.EventMgr.event(p.UI_UpdateRedbtn), this.closeClickHandle();
                });
            }
        }
        openClickHandle() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(29).toString(), this, e => {
                e ? (De.SendEvent("七天登陆红包界面看视频数量"), this.updateInfo()) : Le.UIMgr.showTips("看完视频才能领取红包!");
            });
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.RedMoneyWeekUI);
        }
        close() {
            super.close();
        }
    }
    class Ut extends o.view.RewardUIUI {
        constructor() {
            super(), this._rewardnum = 0;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        updateData(e) {
            var t = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("QQGiftIds")).indexOf(e);
            this._rewardnum = De.TransferStringToNumberArr(Le.CfgMgr.getGlobalCfg("QQGiftRewards"))[t];
        }
        initView() {
            this.rewardnum.text = De.ScoreToString(this._rewardnum);
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), this.regClick(this.getbtn, this.getClickHandle);
        }
        getClickHandle() {
            Le.DataMgr.addMoodCount(this._rewardnum), Le.UIMgr.showTips("Wood +" + this._rewardnum),
                Le.EventMgr.event(p.UI_UpdateMood, !0), this.closeClickHandle();
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.RewardUI);
        }
        close() {
            super.close();
        }
    }
    class Dt extends o.view.SeaBoxUIUI {
        constructor(i) {
            super(), this._opencount = 10, this._result = 3e3, this._type = 0, t.Platform != e.WXAd && (i.adunit = Le.CfgMgr.getAdCfg(1).toString());
        }
        onAwake() {
            if (De.UIdoScale(this.window), this.initView(), this.initEvent(), t.Platform == e.OPAd && Le.GameMgr.gameRunningTime >= Le.CfgMgr.getGlobalCfg("OppoShowInsertTime") && Le.GameMgr.insertAdTime >= Le.CfgMgr.getGlobalCfg("OppoInsertRefreshTime")) {
                if (Le.GameMgr.oppoClickBoxCount++, Le.GameMgr.oppoClickBoxCount % Le.CfgMgr.getGlobalCfg("OppoClickBoxRate") == 0) {
                    var o = Le.CfgMgr.getGlobalCfg("OppoShowInsertDelayTime2");
                    Laya.timer.once(o, this, () => {
                        Le.UIMgr.openUI(i.NativeInsertUI, {
                            type: 1,
                            RewardCount: 200
                        });
                    });
                }
            } else t.Platform, e.QQAd;
        }
        initView() {
            this.btnshare.visible = !1, this.btnfree.visible = !1, this._opencount = Le.CfgMgr.getGlobalCfg("SeaBoxCost");
            var i = Le.SceneMgr.getCurLevelId();
            Le.GameMgr.gameMode == U.Active && (i = 5);
            var o = Le.CfgMgr.getGlobalCfg("SeaBoxResult").split("|")[i - 1], n = De.TransferStringToNumberArr(o);
            this._result = De.random(n[0], n[1]), this._result = Le.GameMgr.getBoxResRatioResult(this._result),
                this.txtcount.text = "" + this._opencount, this.txtresult.text = "Wood +" + De.ScoreToString(this._result),
                Le.DataMgr.seaboxDate != De.getCurrentDate() && (Le.DataMgr.seaboxDate = De.getCurrentDate(),
                    Le.DataMgr.seaboxcount = 0), 3 == this._type ? (this.btnvedio.visible = !0, this.btnshare.visible = !1,
                        De.SendEvent("捡宝箱2倍看视频数量")) : (this.btnfree.visible = !1, this.btnvedio.visible = !1,
                            this.btnshare.visible = !1, this.btnopen.visible = !1, 0 == Le.DataMgr.seaboxcount ? this.btnfree.visible = !0 : 1 == Le.DataMgr.seaboxcount || Le.DataMgr.seaboxcount > 2 ? (this.btnopen.visible = !0,
                                this.btnvedio.visible = !0) : 2 == Le.DataMgr.seaboxcount && (this.btnopen.visible = !0,
                                    this.btnvedio.visible = !0),
                            Le.DataMgr.seaboxcount++, De.SendEvent("捡宝箱1倍看视频数量"))
                , t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd && t.Platform != e.Web || (this.vediobox = new Re(this, 327, 867)),
                Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png");
        }
        initEvent() {
            this.regClick(this.closebtn, this.onClickClose), this.regClick(this.btnopen, this.onClickOpen),
                this.regClick(this.btnvedio, this.onClickVedio), this.regClick(this.btnshare, this.onClickShare),
                this.regClick(this.btnfree, this.onClickOpen);
        }
        updateData(i) {
            this._type = i, this.adtext.text = 2 == this._type ? " Open the treasure chest " : " Claim x3 ", t.Platform != e.TouTAd && t.Platform != e.Web || (this.adtext.text = 2 == this._type ? " 打开宝箱 " : " 二倍领取 ");
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.SeaBoxUI);
        }
        onClickShare() {
            De.ShareGame(Laya.Handler.create(this, e => {
                De.SendEvent("捡海面宝箱分享出去数量"), e && this.getResult(this._result);
            }));
        }
        getResult(e) {
            Le.DataMgr.setArchieveValDic(R.CollectBox, 1), Le.DataMgr.addMoodCount(e), Le.UIMgr.showTips("Resources +" + e),
                Le.EventMgr.event(p.UI_UpdateMood, !0), this.onClickClose();
        }
        onClickOpen() {
            if (De.SendEvent("点击宝箱钻石用户数量"), !this.btnfree.visible) {
                if (Le.DataMgr.goldCount < this._opencount) return void Le.UIMgr.showTips("Diamonds Are Not Enough!");
                Le.DataMgr.addGoldCount(-this._opencount);
            }
            Le.EventMgr.event(p.UI_UpdateGold), this.getResult(this._result);
        }
        onClickVedio() {
            De.SendEvent("点击宝箱广告用户数量"), De.onClickWatchTV(Le.CfgMgr.getAdCfg(15).toString(), this, this.vedioCallBack.bind(this));
        }
        vedioCallBack(i) {
            if (i) {
                var o = this._result;
                3 == this._type && (t.Platform == e.TouTAd || t.Platform == e.Web ? o *= 2 : o *= 3),
                    this.getResult(o);
            } else Le.UIMgr.showTips("看完视频才能获得奖励哦!");
        }
        close() {
            Te.closeBannerAd(), this.vediobox && this.vediobox.destroy(), super.close();
        }
    }
    class Gt extends Laya.Box {
        constructor() {
            super(), this.gameobject = null, this.icon = null, this.price = null, this.rewardnum = null,
                this.videoicon = null, this.videoCount = 0, this._info = null, this.getflag = !1;
            let e = Le.ResMgr.GetRes(C.ShopItem);
            this.gameobject = e.create(), this.addChild(this.gameobject), this.icon = this.gameobject.getChildByName("icon"),
                this.rewardnum = this.gameobject.getChildByName("rewardnum"), this.price = this.gameobject.getChildByName("price"),
                this.videoicon = this.gameobject.getChildByName("videoicon"), this.gameobject.on(Laya.Event.CLICK, this, this.getClickHandle),
                Le.EventMgr.on(p.UI_UpdateShopItem, this, this.updateitem);
        }
        updateitem() {
            this.setInfo(this._info);
        }
        setInfo(e) {
            e && (this._info = e, this.icon.skin = e.ResIcon, this.rewardnum.text = "" + e.Reward,
                this.videoCount = Le.DataMgr.VideoCount, 1 == Le.DataMgr.getVedioGiftGet(this._info.Id) && (this.getflag = !0),
                this.getflag ? (this.videoicon.visible = !1, this.price.text = "Received", this.disabled = !0) : (this.videoicon.visible = !0,
                    this.price.text = (this.videoCount ? this.videoCount : 0) + "/" + e.VideoCount,
                    this.videoCount >= e.VideoCount && (this.videoicon.visible = !1, this.price.text = "Claim")));
        }
        getClickHandle() {
            Le.SoundMgr.playBtnClick(), Le.DataMgr.VideoCount >= this._info.VideoCount ? 0 == this.getflag ? (Le.DataMgr.VideoCount -= this._info.VideoCount,
                Le.DataMgr.addGoldCount(this._info.Reward), Le.UIMgr.showTips("Diamond +" + this._info.Reward),
                Le.DataMgr.setVedioGiftGet(this._info.Id), this.getflag = !0, Le.EventMgr.event(p.UI_UpdateShopItem)) : Le.UIMgr.showTips("今日已获得当前礼包，明天再来看看吧!") : De.onClickWatchTV(Le.CfgMgr.getAdCfg(19).toString(), this, e => {
                    De.SendEvent("商城购买钻石看视频数量"), e ? (Le.DataMgr.VideoCount++, Le.EventMgr.event(p.UI_UpdateShopItem)) : Le.UIMgr.showTips("看完视频才能获得次数");
                });
        }
        destroy() {
            this.gameobject.off(Laya.Event.CLICK, this, this.getClickHandle), this.gameobject.destroy();
        }
    }
    class Ht extends o.view.ShopUIUI {
        constructor(i) {
            super(), this._dataArr = [], this._listArr = [], this._itemDic = {}, this.superGiftcount = 5,
                t.Platform != e.WXAd && (i.adunit = Le.CfgMgr.getAdCfg(1).toString());
        }
        onAwake() {
            this.initView(), this.initEvent(), t.Platform == e.TouTAd ? this.morebanner = Te.createMoreGameBanner() : t.Platform == e.QQAd && Le.InterMgr.showInterstitialAd();
        }
        initView() {
            this.superGiftcount = Le.CfgMgr.getGlobalCfg("SuperGiftCount"), this.updateGoldHandle(),
                this.updateMoodHandle(), this.updateMoodIconHandle();
            for (let e = 1; e <= Le.CfgMgr.shopCfg.length; e++) {
                var i = Le.CfgMgr.getShopCfg(e);
                this._dataArr.push(i);
            }
            Le.DataMgr.playVedioTime != De.getCurrentDate() && (Le.DataMgr.playVedioTime = De.getCurrentDate(),
                Le.DataMgr.shopVideoCount = 0, Le.DataMgr.VideoCount = 0, Le.DataMgr.resetVedioGiftGet()),
                this.listobj.vScrollBarSkin = "", this.listobj.itemRender = Gt, this.listobj.renderHandler = new Laya.Handler(this, this.updateItemHandle),
                this.listobj.dataSource = this._dataArr, this.updateSupergiftInfo(), t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd || (this.vediobox = new Re(this.bg, 298, 867),
                    this.vediobox && this.vediobox.gameobject && (this.vediobox.gameobject.bottom = 30));
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), this.regClick(this.videobtn, this.supergiftClickHandle),
                Le.EventMgr.on(p.UI_UpdateGold, this, this.updateGoldHandle), Le.EventMgr.on(p.UI_UpdateMood, this, this.updateMoodHandle),
                Le.EventMgr.on(p.UI_UpdateMoodIcon, this, this.updateMoodIconHandle);
        }
        updateMoodIconHandle() {
            Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png");
        }
        addHtList() {
            var e = "5f804088f052a13697b244c6", t = [];
            g.getBox(e, (i, o) => {
                for (let i = 0; i < o.length; i++) o[i][0].bid = e, t.push(o[i][0]), t[i].bid = e,
                    t[i].total = o.length;
                t.length > 0 && (this.htobj.visible = !0, this.hutlist.repeatX = t.length, this.hutlist.itemRender = Ge,
                    this.hutlist.hScrollBarSkin = "", this.hutlist.selectEnable = !1, this.hutlist.renderHandler = new Laya.Handler(this, this.updateHtItemHandle),
                    this.hutlist.dataSource = t, Le.BannerMgr.hidebanner());
            });
        }
        updateHtItemHandle(e, t) {
            e.setInfo(e.dataSource), this._itemDic[t] = e;
        }
        updateSupergiftInfo() {
            0 == Le.DataMgr.superGiftGet ? Le.DataMgr.shopVideoCount < this.superGiftcount ? (this.adicon.visible = !0,
                this.videotext.text = "     Watch Ads (" + Le.DataMgr.shopVideoCount + "/" + this.superGiftcount + ") ") : (this.adicon.visible = !1,
                    this.videotext.text = " Claim ") : (this.videotext.text = " Received ", this.videobtn.disabled = !0);
        }
        supergiftClickHandle() {
            if (0 == Le.DataMgr.superGiftGet) if (Le.DataMgr.shopVideoCount < this.superGiftcount) De.onClickWatchTV(Le.CfgMgr.getAdCfg(19).toString(), this, e => {
                De.SendEvent("商城超级大礼包看视频数量"), e ? (Le.DataMgr.shopVideoCount++, this.updateSupergiftInfo()) : Le.UIMgr.showTips("看完视频才能获得次数!");
            }); else {
                Le.DataMgr.superGiftGet = 1;
                var e = Le.CfgMgr.getGlobalCfg("SuperGiftDem");
                Le.UIMgr.showTips("Diamonds +" + e), Le.DataMgr.addGoldCount(e);
                var t = Le.CfgMgr.getGlobalCfg("DoubleResTime");
                Le.GameMgr.doubleResBuffTime() > 0 ? Le.DataMgr.doubleTime += t : Le.DataMgr.doubleTime = Math.floor(De.getCurrentTime() / 1e3) + t,
                    this.updateSupergiftInfo();
            } else Le.UIMgr.showTips("今日已获得超级大礼包，明天再来看看吧!");
        }
        updateGoldHandle() {
            this.diamondnum.text = De.ScoreToString(Le.DataMgr.goldCount);
        }
        updateMoodHandle() {
            Le.GameMgr.gameMode == U.Active ? this.resnum.text = De.ScoreToString(Le.DataMgr.eventMoodCount) : Le.GameMgr.gameMode == U.Level && (this.resnum.text = De.ScoreToString(Le.GameMgr.getMoodCount()));
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.ShopUI);
        }
        updateItemHandle(e, t) {
            e.setInfo(e.dataSource), this._listArr[t] = e;
        }
        removeList() {
            for (let e = 0; e < this._listArr.length; e++) this._listArr[e].destroy();
        }
        close() {
            if (this.removeList(), Le.EventMgr.off(p.UI_UpdateGold, this, this.updateGoldHandle),
                Le.EventMgr.off(p.UI_UpdateMood, this, this.updateMoodHandle), Te.closeBannerAd(),
                Le.InterMgr.closeInterstitialAd(), null != this._itemDic) for (const e in this._itemDic) this._itemDic.hasOwnProperty(e) && this._itemDic[e] && this._itemDic[e].destroy();
            this.vediobox && this.vediobox.destroy(), this.morebanner && this.morebanner.hide(),
                super.close();
        }
    }
    class Pt {
        constructor(e) {
            this.gameobject = null, this.icon = null, this.receive = null, this.goldnum = null,
                this.day = null, this._index = -1, this._info = null, this._index = e;
            let t = Le.ResMgr.GetRes(C.SignItem);
            this.gameobject = t.create(), this.icon = this.gameobject.getChildByName("icon"),
                this.receive = this.gameobject.getChildByName("receive"), this.day = this.gameobject.getChildByName("day"),
                this.goldnum = this.gameobject.getChildByName("goldnum"), this.receive.visible = !1;
        }
        setPos(e, t) {
            this.gameobject.pos(e, t, !0);
        }
        showReward(e) {
            this._info = e, this.day.text = "Day " + (this._index + 1), 1 == e[0] ? (this.icon.skin = "game/sign_diamond.png",
                this.goldnum.text = e[1]) : 2 == e[0] && (this.icon.skin = "game/sign_wood.png",
                    this.goldnum.text = e[1]), 6 == this._index && (this.gameobject.width = 238, this.day.x = (238 - this.day.width) / 2,
                        this.icon.skin = "game/sign_big_diamond.png", this.icon.x = 119, this.goldnum.x = (238 - this.goldnum.width) / 2);
        }
        get info() {
            return this._info;
        }
        updateInfo() {
            this.receive.visible = !0;
        }
        GetReward(e) {
            1 == this._info[0] ? (this._info[1] *= e, Le.DataMgr.addGoldCount(this._info[1]),
                Le.EventMgr.event(p.UI_UpdateGold), Le.UIMgr.showTips("Diamond x" + this._info[1])) : 2 == this._info[0] && (this._info[1] *= e,
                    Le.DataMgr.addMoodCount(this._info[1]), Le.EventMgr.event(p.UI_UpdateMood, !0),
                    Le.UIMgr.showTips("Wood x" + this._info[1]));
        }
        destroy() {
            this.gameobject.destroy();
        }
    }
    class Vt extends o.view.SignUIUI {
        constructor(i) {
            super(), this.rewardArr = [], this._itemsList = [], this._multiple = 0, this._doubleFlag = !1,
                t.Platform != e.WXAd && (i.adunit = Le.CfgMgr.getAdCfg(12).toString());
        }
        onAwake() {
            De.UIdoScale(this.window), this.initView(), this.initEvent(), this.updateView();
        }
        initView() {
            var i = "CheckReward";
            (Le.DataMgr.signTotalCount > 7 || 7 == Le.DataMgr.signTotalCount && Le.DataMgr.signDate != De.getCurrentDate()) && (i = "CheckRewardTwo",
                Le.DataMgr.signTotalCount % 7 == 0 && (Le.DataMgr.signCount = 0));
            var o = De.SplitToStr(Le.CfgMgr.getGlobalCfg(i), "|");
            for (let e = 0; e < o.length; e++) this.rewardArr.push(De.TransferStringToNumberArr(o[e]));
            for (let e = 0; e < this.rewardArr.length; e++) {
                var n = new Pt(e), a = e % 4, s = Math.floor(e / 4);
                n.setPos(125 * a, 170 * s), n.showReward(this.rewardArr[e]), this.signObj.addChild(n.gameobject),
                    this._itemsList.push(n);
            }
            t.Platform != e.QQAd && t.Platform != e.WXAd && t.Platform != e.TouTAd && t.Platform != e.Web || (this.vediobox = new Re(this, 327, 867)),
                t.Platform != e.TouTAd && t.Platform != e.Web || (this.doublebtn_tt.visible = !0,
                    this.receivebtn_tt.visible = !0, this.doublebtn.visible = !1, this.receivebtn.visible = !1);
        }
        initEvent() {
            this.regClick(this.receivebtn, this.receiveClickHandle), this.regClick(this.receivebtn_tt, this.receiveClickHandle),
                this.regClick(this.btnclose, this.backClickHandle), this.regClick(this.doublebtn_tt, this.doubleClickHandle),
                this.regClick(this.doublebtn, this.doubleClickHandle);
        }
        updateView() {
            for (let e = 0; e < this._itemsList.length; e++) e < Le.DataMgr.signCount && this._itemsList[e].updateInfo();
            Le.DataMgr.signDate != De.getCurrentDate() ? (this.receivebtn.gray = !1, this.receivebtn.mouseEnabled = !0,
                this.doublebtn.gray = !1, this.doublebtn.mouseEnabled = !0, this.doublebtn_tt.gray = !1,
                this.doublebtn_tt.mouseEnabled = !0, this.rewardArr[Le.DataMgr.signCount]) : (this.receivebtn.gray = !0,
                    this.receivebtn.mouseEnabled = !1, this.doublebtn.gray = !0, this.doublebtn.mouseEnabled = !1,
                    this.doublebtn_tt.gray = !0, this.doublebtn_tt.mouseEnabled = !1, this.rewardArr[Le.DataMgr.signCount - 1],
                    this.showBannerMoveBtn());
        }
        changeBtn(e) { }
        watchTvCallback(e, t = null, i = null) {
            De.SendEvent("签到看视频数量"), t ? i.errCode && Le.UIMgr.showTips("暂时没有广告！") : e ? this.getSignReward(this._multiple) : Le.UIMgr.showTips("看完视频才能获得奖励！");
        }
        receiveClickHandle() {
            this._multiple = 1, this.getSignReward(this._multiple);
        }
        doubleClickHandle() {
            this._multiple = 2, De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, this.watchTvCallback.bind(this));
        }
        showBannerMoveBtn() { }
        getSignReward(e) {
            this._itemsList[Le.DataMgr.signCount].GetReward(e), Le.DataMgr.signCount++, Le.DataMgr.signTotalCount++,
                Le.DataMgr.signDate = De.getCurrentDate(), this.updateView(), Le.EventMgr.event(p.UI_UpdateDot),
                this.backClickHandle();
        }
        backClickHandle() {
            for (let e = 0; e < this._itemsList.length; e++) this._itemsList[e].destroy();
            this._itemsList.length = 0, Le.UIMgr.closeUI(i.SignUI), Le.EventMgr.event(p.UI_UpdateDot);
        }
        close() {
            Te.closeBannerAd(), this.vediobox && this.vediobox.destroy(), super.close();
        }
    }
    class jt extends o.view.StoryPageItemUI {
        constructor() {
            super(), this.info = {
                index: 0,
                unlock: !1,
                ui: null
            }, this.storypage.on(Laya.Event.MOUSE_DOWN, this, this.mousedown), this.storypage.on(Laya.Event.MOUSE_UP, this, this.mouseup),
                this.storypage.on(Laya.Event.MOUSE_OUT, this, this.mouseup), this.storypage.on(Laya.Event.MOUSE_OVER, this, this.mouseup);
        }
        set dataSource(e) {
            e && (this.info = e, this.storypage.skin = "game/story_img_" + this.info.index + ".png",
                this.info.unlock || (this.btnunockpage.on(Laya.Event.CLICK, this, this.onClickUnlock),
                    this.typeicon.skin = this.info.index < 5 ? "game/Video_record.png" : "game/video_big.png",
                    this.txtunlock1.text = this.info.index < 5 ? "分享录屏解锁漫画" : "观看视频解锁漫画"), this.updateView());
        }
        mousedown(e) { }
        mouseup(e) { }
        updateView() {
            this.unlockmask.visible = !this.info.unlock, this.slidetipobj.visible = this.info.unlock;
        }
        unlock() {
            Le.DataMgr.unlockStoryPage = this.info.index, this.info.unlock = !0, this.info.ui.pagelistinfo[this.info.index - 1].unlock = !0,
                this.info.ui.addNextPage(), this.updateView();
        }
        onClickUnlock() {
            t.Platform != e.Web ? this.info.index < 5 ? this.sharevedio() : this.vedioAD() : this.unlock();
        }
        sharevedio() {
            Le.RecorderMgr.recordTime <= 3 ? Le.UIMgr.showTips("录制时间小于3秒，稍后再试!") : Le.RecorderMgr.stop(Le.RecorderMgr._autoFlag, !1, (e => {
                var t = Laya.Handler.create(this, e => {
                    e && (console.log("分享视频成功"), this.unlock());
                });
                console.log("分享视频地址:", e), window.tt.shareAppMessage({
                    channel: "video",
                    desc: Le.DataMgr.sharecard_config[0].title,
                    imageUrl: Le.DataMgr.sharecard_config[0].imageurl,
                    templateId: "bjifj2fd06hj1hkg1r",
                    query: "",
                    extra: {
                        videoPath: e,
                        videoTopics: ["木筏世界迷你版"]
                    },
                    success() {
                        t && t.runWith(!0), Le.RecorderMgr.start(!0);
                    },
                    fail(e) {
                        console.log("分享视频失败", e), t && t.runWith(!1), Le.RecorderMgr.start(!0);
                    }
                });
            }).bind(this));
        }
        vedioAD() {
            De.onClickWatchTV(Le.CfgMgr.getAdCfg(11).toString(), this, e => {
                e ? this.unlock() : Le.UIMgr.showTips("看完视频才能获得奖励");
            });
        }
    }
    class Rt extends o.view.StoryUIUI {
        constructor() {
            super(...arguments), this.pagelistinfo = [], this.barvalues = [0, 748, 1487, 2237, 2984],
                this.centervalue = 100, this.curindex = 0, this.istween = !1;
        }
        onAwake() {
            super.onAwake(), this.init(), De.UIdoScale(this.pagelist);
        }
        init() {
            this.initEvent(), this.initView();
        }
        initEvent() {
            this.regClick(this.btnclose, this.onClickClose);
        }
        initView() {
            this.pagelist.itemRender = jt, this.pagelist.array = [], this.pagelist.hScrollBarSkin = "",
                this.pagelist.repeatY = 1, this.pagelist.spaceX = 19, this.pagelist.elasticEnabled = !0,
                this.pagelist.renderHandler = Laya.Handler.create(this, (e, t) => {
                    e.dataSource = this.pagelistinfo[t];
                }), this.pagelist.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown), this.pagelist.on(Laya.Event.MOUSE_UP, this, this.onMouse),
                this.pagelist.on(Laya.Event.MOUSE_OUT, this, this.onMouse), this.pagelistinfo = [];
            var e = [];
            for (let i = 0; i < Le.DataMgr.unlockStoryPage; i++) {
                var t = {
                    index: i + 1,
                    unlock: !0,
                    ui: this
                };
                t.index, e.push(t), this.pagelistinfo.push(t);
            }
            this.pagelist.array = e, this.pagelist.repeatX = this.pagelistinfo.length, this.addNextPage();
        }
        onMouseDown(e) {
            Laya.Tween.clearAll(this.pagelist.scrollBar);
        }
        onMouse(e) {
            var t = this.pagelist.scrollBar.value;
            if (!(Math.abs(this.barvalues[this.curindex] - t) <= 10) && t > 0 && t < this.barvalues[this.pagelistinfo.length - 1]) {
                var i = -1, o = 999999;
                for (let e = 0; e < this.barvalues.length; e++) {
                    var n = this.barvalues[e], a = Math.abs(n - t);
                    a <= o && e != this.curindex && (i = e, o = a);
                }
                if (-1 != i) {
                    var s = this.barvalues[this.curindex];
                    this.istween = !0, Math.abs(this.barvalues[this.curindex] - t) >= 20 ? (s = this.barvalues[i],
                        this.pagelist.scrollBar.stopScroll(), Laya.Tween.clearAll(this.pagelist.scrollBar),
                        Laya.Tween.to(this.pagelist.scrollBar, {
                            value: s
                        }, Math.abs(t - s) / .8, Laya.Ease.quartOut, Laya.Handler.create(this, () => {
                            this.curindex = i, this.istween = !1;
                        }))) : (this.pagelist.scrollBar.stopScroll(), Laya.Tween.clearAll(this.pagelist.scrollBar),
                            Laya.Tween.to(this.pagelist.scrollBar, {
                                value: s
                            }, Math.abs(t - s) / .8, Laya.Ease.quartOut, Laya.Handler.create(this, () => {
                                this.istween = !1;
                            })));
                }
            }
        }
        addNextPage() {
            this.pagelistinfo.length < 5 ? this.pagelistinfo.push({
                index: this.pagelistinfo.length + 1,
                unlock: !1,
                ui: this
            }) : this.pagelistinfo.push({
                index: this.pagelistinfo.length + 1,
                unlock: !0,
                ui: this
            }), this.pagelist.addItem(this.pagelistinfo[this.pagelistinfo.length - 1]);
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.StoryUI);
        }
    }
    class Et extends o.view.SurvivorInfoUIUI {
        constructor() {
            super(), this._data = null;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        updateData(e) {
            this._data = e;
        }
        initView() {
            this.icon.skin = this._data.IconUrl, this.iconname.text = this._data.Name, this.desc.text = this._data.Info || this._data["Berry Factory"];
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle);
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.SurvivorInfoUI);
        }
        close() {
            super.close();
        }
    }
    class Ot extends o.view.SurvivorUIUI {
        constructor(i) {
            super(), this._selectIndex = -1, this._btnArr = [this.firstbtn, this.secondbtn],
                this._listArr = [this.firstlist, this.secondlist], this._manItemsList = [], this._animalItemsList = [],
                t.Platform != e.WXAd && (i.adunit = Le.CfgMgr.getAdCfg(12).toString());
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            this.updateGoldHandle(), this.updateMoodHandle(), this.updateMoodIconHandle(), this.firstlist.vScrollBarSkin = "",
                this.firstlist.itemRender = vt, this.firstlist.renderHandler = new Laya.Handler(this, this.updateManItemHandle),
                this.firstlist.dataSource = this.getDataSource([1]), this.secondlist.vScrollBarSkin = "",
                this.secondlist.itemRender = vt, this.secondlist.renderHandler = new Laya.Handler(this, this.updateAnimalItemHandle),
                this.secondlist.dataSource = this.getDataSource([2, 3]), t.Platform == e.WXAd || t.Platform == e.TouTAd || t.Platform == e.Web ? this.vediobox = new Re(this, 327, 867) : t.Platform == e.QQAd && Le.InterMgr.showInterstitialAd(),
                t.Platform == e.IOS && (this.diamondobj.visible = !1, this.resobj.x = this.diamondobj.x);
        }
        initEvent() {
            this.regClick(this.closebtn, this.closeClickHandle), this.regClick(this.firstbtn, this.firstClickHandle),
                this.regClick(this.secondbtn, this.secondClickHandle), Le.EventMgr.on(p.UI_UpdateGold, this, this.updateGoldHandle),
                Le.EventMgr.on(p.UI_UpdateMood, this, this.updateMoodHandle), Le.EventMgr.on(p.UI_UpdateMoodIcon, this, this.updateMoodIconHandle);
        }
        updateMoodIconHandle() {
            Le.GameMgr.gameMode == U.Active ? this.moodicon.skin = "game/game_wood_newyear.png" : Le.GameMgr.gameMode == U.Level && (this.moodicon.skin = "game/res_wood_icon.png");
        }
        getDataSource(e) {
            var t = [], i = Le.CfgMgr.boatmanCfg;
            for (const o in i) if (i.hasOwnProperty(o)) {
                const n = i[o];
                -1 != e.indexOf(n.Type) && 0 != n.Sort && t.push(n);
            }
            return t.sort((e, t) => e.Sort - t.Sort), t;
        }
        updateManItemHandle(e, t) {
            e.setInfo(e.dataSource), this._manItemsList[t] = e;
        }
        updateAnimalItemHandle(e, t) {
            e.setInfo(e.dataSource), this._animalItemsList[t] = e;
        }
        firstClickHandle() {
            0 != this._selectIndex && (this._selectIndex = 0, this.switchTabbtn());
        }
        secondClickHandle() {
            1 != this._selectIndex && (this._selectIndex = 1, this.switchTabbtn());
        }
        switchTabbtn() {
            for (let e = 0; e < this._btnArr.length; e++) e == this._selectIndex ? (this._btnArr[e].skin = "game/floorBG.png",
                this._listArr[e].visible = !0) : (this._btnArr[e].skin = "game/floorBG2.png", this._listArr[e].visible = !1);
        }
        updateGoldHandle() {
            this.diamondnum.text = De.ScoreToString(Le.DataMgr.goldCount);
        }
        updateMoodHandle() {
            Le.GameMgr.gameMode == U.Active ? this.resnum.text = De.ScoreToString(Le.DataMgr.eventMoodCount) : Le.GameMgr.gameMode == U.Level && (this.resnum.text = De.ScoreToString(Le.GameMgr.getMoodCount()));
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.SurvivorUI);
        }
        close() {
            Le.EventMgr.off(p.UI_UpdateGold, this, this.updateGoldHandle), Le.EventMgr.off(p.UI_UpdateMood, this, this.updateMoodHandle),
                Le.InterMgr.closeInterstitialAd();
            for (let e = 0; e < this._manItemsList.length; e++) this._manItemsList[e].destroy();
            this._manItemsList = null;
            for (let e = 0; e < this._animalItemsList.length; e++) this._animalItemsList[e].destroy();
            this._animalItemsList = null, Te.closeBannerAd(), this.vediobox && this.vediobox.destroy(),
                super.close();
        }
    }
    class zt extends o.view.TipsUIUI {
        constructor() {
            super();
        }
        onAwake() {
            this.initView(), this.initEvent();
        }
        initView() {
            this.regClick(this.tipimg, this.onClickClose);
        }
        initEvent() { }
        updateData(e) {
            this.tipimg.skin = 1 == e ? "game/add_pin.png" : "game/add_desktop.png";
        }
        onClickClose() {
            Le.UIMgr.closeUI(i.TipsUI);
        }
        close() {
            super.close();
        }
    }
    class Nt extends o.view.UnlockSkinUIUI {
        constructor() {
            super(), this._info = null;
        }
        onAwake() {
            this.initView(), this.initEvent(), De.UIdoScale(this.window);
        }
        updateData(e) {
            this._info = e, Le.DataMgr.setunlockBoatmanDic(e.Id);
        }
        initView() {
            var e = Le.CfgMgr.getBoatmanCfg(this._info.Id);
            1 == e.Type ? this.title.text = "You get" :
                this.title.text = "You get",
                1 == e.Quality ? (this.qualitybg.skin = "game/new_normalBG.png",
                    this.quality.text = "Ordinary") : (this.qualitybg.skin = "game/new_rareBG.png", this.quality.text = "Rare"),
                this.skinname.text = e.Name, this.icon.skin = e.IconUrl, this.desc.text = e.Info;
        }
        initEvent() {
            this.regClick(this.goonbtn, this.closeClickHandle);
        }
        getClickHandle() {
            Le.DataMgr.addGoldCount(this._info.Gold), Le.UIMgr.showTips("Coins +" + this._info.Gold),
                this.closeClickHandle();
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.UnlockSkinUI), Le.DataMgr.signDate != De.getCurrentDate() && this._info.sign && Le.UIMgr.openUI(i.SignUI);
        }
        close() {
            super.close();
        }
    }
    class Yt extends o.view.VedioShareUIUI {
        constructor() {
            super(), this._info = {};
        }
        onAwake() {
            this.initView(), this.initEvent(), Laya.timer.frameLoop(1, this, this.update);
        }
        update() {

        }
        initView() {
            t.Platform != e.TouTAd && t.Platform != e.Web || (this.closebtn.visible = !1, Laya.timer.once(3e3, this, function () {
                this.closebtn.visible = !0;
            })), Le.DataMgr.shareVedioTime != De.getCurrentDate() && (Le.DataMgr.shareVedioTime = De.getCurrentDate(),
                Le.DataMgr.shareVedioCount = 0, Le.DataMgr.shareVedioGet = 0), this.txtprogress.text = Le.DataMgr.shareVedioCount + "/5",
                this.progressbar.width = Le.DataMgr.shareVedioCount / 5 * 474, De.doLager(this, this.gemobj, 350, 1.15),
                De.doRotationAdd(this, this.gemobj, 350, 10);
        }
        initEvent() {
            this.regClick(this.sharebtn, this.shareClickHandle), this.regClick(this.closebtn, this.closeClickHandle),
                this.regClick(this.gemobj, this.getShareGem);
        }
        updateData(e) {
            this._info = e, console.log("视频信息", e);
        }
        getShareGem() {
            0 == Le.DataMgr.shareVedioGet ? Le.DataMgr.shareVedioCount >= 5 ? (Le.DataMgr.addGoldCount(30),
                Le.UIMgr.showTips("Diamonds +30"), Le.DataMgr.shareVedioGet = 1) : Le.DataMgr.shareVedioCount < 5 && Le.UIMgr.showTips("累计分享5次才可获得奖励哦!") : Le.UIMgr.showTips("今天已经领取奖励，明天再来吧!");
        }
        shareClickHandle() {
            var e = Laya.Handler.create(this, e => {
                e && (console.log("分享视频成功"), Le.DataMgr.addGoldCount(1), Le.DataMgr.shareVedioCount++,
                    this.progressbar.width = Le.DataMgr.shareVedioCount / 5 * 474, this.txtprogress.text = De.Clamp(Le.DataMgr.shareVedioCount, 0, 5) + "/5",
                    Le.UIMgr.showTips("Diamonds +1"), this.closeClickHandle());
            });
            console.log("分享视频地址:", this._info.videoPath), window.tt.shareAppMessage({
                channel: "video",
                desc: Le.DataMgr.sharecard_config[0].title,
                imageUrl: Le.DataMgr.sharecard_config[0].imageurl,
                templateId: "bjifj2fd06hj1hkg1r",
                query: "",
                extra: {
                    videoPath: this._info.videoPath,
                    videoTopics: ["木筏世界迷你版"]
                },
                success() {
                    e && e.runWith(!0);
                },
                fail(t) {
                    console.log("分享视频失败", t), e && e.runWith(!1);
                }
            });
        }
        closeClickHandle() {
            Le.UIMgr.closeUI(i.VedioShareUI), Le.RecorderMgr.start(!0);
        }
        close() {
            super.close();
        }
    }
    class Wt {
        constructor() { }
        static init() {
            var e = Laya.ClassUtils.regClass;
            e("pkSdk/GameBoxUI.ts", He), e("view/NativeInsertUI.ts", Pe), e("view/NativeVivoInsertUI.ts", Ve),
                e("view/AchieveUI.ts", Ee), e("view/BottleUI.ts", Oe), e("view/BuildOverUI.ts", ze),
                e("script/ScaleButtonScript.ts", Ne), e("view/BuildUI.ts", We), e("view/ChapterUI.ts", Fe),
                e("view/ChristmasGiftUI.ts", Qe), e("view/ChristmasWishUI.ts", qe), e("view/DoubleResUI.ts", Ke),
                e("view/EasterEggUI.ts", Ze), e("view/FollowQQUI.ts", Je), e("view/FollowTTUI.ts", $e),
                e("view/GetRedMoneyUI.ts", et), e("view/HeroMBGUI.ts", tt), e("view/InviteUI.ts", it),
                e("view/DayInvitePlayer.ts", ot), e("view/InvitedFriendItem.ts", nt), e("view/LoadUI.ts", at),
                e("view/LotteryUI.ts", st), e("view/MainResultUI.ts", rt), e("view/MainUI.ts", ht),
                e("view/MapFindUI.ts", gt), e("view/MapUI.ts", pt), e("view/MoneyRewardUI.ts", mt),
                e("view/MoregameUI.ts", ft), e("view/MoreResUI.ts", yt), e("view/NewHeroUI.ts", bt),
                e("view/NewYearUI.ts", It), e("view/OfflineUI.ts", wt), e("view/PassRedMoneyUI.ts", _t),
                e("view/PrivacyUI.ts", Ct), e("view/PurseUI.ts", xt), e("view/QuestUI.ts", St),
                e("view/RandomResultUI.ts", kt), e("view/RankUI.ts", At), e("view/RedMoneyAnyOneUI.ts", Lt),
                e("view/RedMoneyWeekUI.ts", Bt), e("view/RewardUI.ts", Ut), e("view/SeaBoxUI.ts", Dt),
                e("view/ShopUI.ts", Ht), e("view/SignUI.ts", Vt), e("view/StoryUI.ts", Rt), e("view/StoryPageItem.ts", jt),
                e("view/SurvivorInfoUI.ts", Et), e("view/SurvivorUI.ts", Ot), e("view/TipsUI.ts", zt),
                e("view/UnlockSkinUI.ts", Nt), e("view/VedioShareUI.ts", Yt);
        }
    }
    Wt.width = 750, Wt.height = 1334, Wt.scaleMode = "showall", Wt.screenMode = "none",
        Wt.alignV = "middle", Wt.alignH = "center", Wt.startScene = "view/LoadUI.scene", Wt.sceneRoot = "",
        Wt.debug = !1, Wt.stat = !1, Wt.physicsDebug = !1, Wt.exportSceneToJson = !0, Wt.init();
    new class {
        constructor() {
            window.Laya3D ? Laya3D.init(Wt.width, Wt.height) : Laya.init(Wt.width, Wt.height, Laya.WebGL),
                Laya.stage.bgColor = "#514a4a", Laya.stage.scaleMode = Wt.scaleMode, Laya.stage.screenMode = Wt.screenMode,
                Laya.stage.alignV = Wt.alignV, Laya.stage.alignH = Wt.alignH, Laya.stage.bgColor = "#514a4a",
                Laya.URL.exportSceneToJson = Wt.exportSceneToJson, Laya.MouseManager.multiTouchEnabled = !1;
            window.yad = platform.getInstance().createLogo();
            window.yad.right = 0;
            window.yad.scale(0.8, 0.8);
            Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
        }
        onVersionLoaded() {
            Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
        }
        onConfigLoaded() {
            Laya.MouseManager.multiTouchEnabled = !1, Le.SetupEngine(), this.showLoadUI();
        }
        showLoadUI() {
            Laya.loader.load("load/load.atlas", Laya.Handler.create(this, () => {
                Le.UIMgr.toUI(i.LoadingUI);
            }));
        }
    }();
}();